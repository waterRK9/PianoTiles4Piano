ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_cmplx_dot_prod_f32.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_fmul
  19              		.global	__aeabi_fadd
  20              		.global	__aeabi_fsub
  21              		.section	.text.arm_cmplx_dot_prod_f32,"ax",%progbits
  22              		.align	2
  23              		.global	arm_cmplx_dot_prod_f32
  24              		.thumb
  25              		.thumb_func
  26              		.type	arm_cmplx_dot_prod_f32, %function
  27              	arm_cmplx_dot_prod_f32:
  28              	.LFB84:
  29              		.file 1 ".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_dot_prod_f32.c"
   1:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /* ----------------------------------------------------------------------
   2:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Project:      CMSIS DSP Library
   3:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Title:        arm_cmplx_dot_prod_f32.c
   4:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Description:  Floating-point complex dot product
   5:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   6:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Date:        23 April 2021
   7:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Revision:    V1.9.0
   8:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   9:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * -------------------------------------------------------------------- */
  11:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /*
  12:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  14:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  16:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * not use this file except in compliance with the License.
  18:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * You may obtain a copy of the License at
  19:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  20:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  22:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * See the License for the specific language governing permissions and
  26:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * limitations under the License.
  27:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  28:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 2


  29:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #include "dsp/complex_math_functions.h"
  30:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  31:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  32:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @ingroup groupCmplxMath
  33:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  34:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  35:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  36:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @defgroup cmplx_dot_prod Complex Dot Product
  37:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  38:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Computes the dot product of two complex vectors.
  39:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The vectors are multiplied element-by-element and then summed.
  40:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  41:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The <code>pSrcA</code> points to the first complex input vector and
  42:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>pSrcB</code> points to the second complex input vector.
  43:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  44:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   and the data in each array is stored in an interleaved fashion
  45:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   (real, imag, real, imag, ...).
  46:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Each array has a total of <code>2*numSamples</code> values.
  47:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  48:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The underlying algorithm is used:
  49:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  50:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <pre>
  51:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   realResult = 0;
  52:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   imagResult = 0;
  53:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   for (n = 0; n < numSamples; n++) {
  54:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       realResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+0] - pSrcA[(2*n)+1] * pSrcB[(2*n)+1];
  55:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imagResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+1] + pSrcA[(2*n)+1] * pSrcB[(2*n)+0];
  56:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
  57:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   </pre>
  58:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  59:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  60:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  61:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  62:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  63:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @addtogroup cmplx_dot_prod
  64:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @{
  65:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  66:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  67:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  68:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @brief         Floating-point complex dot product.
  69:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcA       points to the first input vector
  70:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcB       points to the second input vector
  71:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     numSamples  number of samples in each vector
  72:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    realResult  real part of the result returned here
  73:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    imagResult  imaginary part of the result returned here
  74:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @return        none
  75:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  76:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  77:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  78:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  79:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
  80:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     const float32_t * pSrcA,
  81:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     const float32_t * pSrcB,
  82:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     uint32_t numSamples,
  83:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32_t * realResult,
  84:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32_t * imagResult)
  85:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 3


  86:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     int32_t         blkCnt;
  87:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32_t       real_sum, imag_sum;
  88:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     f32x4_t         vecSrcA, vecSrcB;
  89:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     f32x4_t         vec_acc = vdupq_n_f32(0.0f);
  90:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     f32x4_t         vecSrcC, vecSrcD;
  91:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  92:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples >> 2;
  93:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt -= 1;
  94:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     if (blkCnt > 0) {
  95:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* should give more freedom to generate stall free code */
  96:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vecSrcA = vld1q(pSrcA);
  97:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vecSrcB = vld1q(pSrcB);
  98:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 4;
  99:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 4;
 100:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 101:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         while (blkCnt > 0) {
 102:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq(vec_acc, vecSrcA, vecSrcB);
 103:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcC = vld1q(pSrcA);
 104:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcA += 4;
 105:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 106:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_rot90(vec_acc, vecSrcA, vecSrcB);
 107:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcD = vld1q(pSrcB);
 108:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcB += 4;
 109:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 110:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq(vec_acc, vecSrcC, vecSrcD);
 111:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcA = vld1q(pSrcA);
 112:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcA += 4;
 113:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 114:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_rot90(vec_acc, vecSrcC, vecSrcD);
 115:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcB = vld1q(pSrcB);
 116:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcB += 4;
 117:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             /*
 118:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****              * Decrement the blockSize loop counter
 119:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****              */
 120:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             blkCnt--;
 121:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         }
 122:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 123:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****          /* process last elements out of the loop avoid the armclang breaking the SW pipeline */
 124:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec_acc = vcmlaq(vec_acc, vecSrcA, vecSrcB);
 125:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vecSrcC = vld1q(pSrcA);
 126:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 127:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec_acc = vcmlaq_rot90(vec_acc, vecSrcA, vecSrcB);
 128:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vecSrcD = vld1q(pSrcB);
 129:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 130:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec_acc = vcmlaq(vec_acc, vecSrcC, vecSrcD);
 131:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec_acc = vcmlaq_rot90(vec_acc, vecSrcC, vecSrcD);
 132:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 133:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /*
 134:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****          * tail
 135:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****          */
 136:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt = CMPLX_DIM * (numSamples & 3);
 137:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         while (blkCnt > 0) {
 138:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             mve_pred16_t    p = vctp32q(blkCnt);
 139:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcA += 4;
 140:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcB += 4;
 141:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcA = vldrwq_z_f32(pSrcA, p);
 142:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcB = vldrwq_z_f32(pSrcB, p);
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 4


 143:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_m(vec_acc, vecSrcA, vecSrcB, p);
 144:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_rot90_m(vec_acc, vecSrcA, vecSrcB, p);
 145:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             blkCnt -= 4;
 146:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         }
 147:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     } else {
 148:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* small vector */
 149:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt = numSamples * CMPLX_DIM;
 150:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec_acc = vdupq_n_f32(0.0f);
 151:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 152:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         do {
 153:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             mve_pred16_t    p = vctp32q(blkCnt);
 154:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 155:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcA = vldrwq_z_f32(pSrcA, p);
 156:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vecSrcB = vldrwq_z_f32(pSrcB, p);
 157:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 158:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_m(vec_acc, vecSrcA, vecSrcB, p);
 159:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             vec_acc = vcmlaq_rot90_m(vec_acc, vecSrcA, vecSrcB, p);
 160:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 161:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             /*
 162:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****              * Decrement the blkCnt loop counter
 163:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****              * Advance vector source and destination pointers
 164:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****              */
 165:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcA += 4;
 166:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             pSrcB += 4;
 167:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****             blkCnt -= 4;
 168:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         }
 169:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         while (blkCnt > 0);
 170:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     }
 171:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 172:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum = vgetq_lane(vec_acc, 0) + vgetq_lane(vec_acc, 2);
 173:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum = vgetq_lane(vec_acc, 1) + vgetq_lane(vec_acc, 3);
 174:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 175:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /*
 176:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****      * Store the real and imaginary results in the destination buffers
 177:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****      */
 178:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     *realResult = real_sum;
 179:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     *imagResult = imag_sum;
 180:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 181:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 182:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 183:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
 184:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcA,
 185:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcB,
 186:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t numSamples,
 187:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * realResult,
 188:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * imagResult)
 189:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
  30              		.loc 1 189 0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              		.cfi_def_cfa_offset 36
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 5


  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 83B0     		sub	sp, sp, #12
  47              		.cfi_def_cfa_offset 48
  48 0006 1646     		mov	r6, r2
  49 0008 0193     		str	r3, [sp, #4]
  50              	.LVL1:
 190:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
 191:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t real_sum = 0.0f, imag_sum = 0.0f;    /* Temporary result variables */
  51              		.loc 1 191 0
  52 000a 0023     		movs	r3, #0
  53              	.LVL2:
  54 000c 0093     		str	r3, [sp]	@ float
  55 000e 9B46     		mov	fp, r3
 192:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
 193:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 194:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 195:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4x2_t vec1,vec2,vec3,vec4;
 196:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4_t accR,accI;
 197:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x2_t accum = vdup_n_f32(0);
 198:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 199:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accR = vdupq_n_f32(0.0f);
 200:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accI = vdupq_n_f32(0.0f);
 201:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 202:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Loop unrolling: Compute 8 outputs at a time */
 203:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples >> 3U;
 204:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 205:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     while (blkCnt > 0U)
 206:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     {
 207:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* C = (A[0]+jA[1])*(B[0]+jB[1]) + ...  */
 208:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Calculate dot product and then store the result in a temporary buffer. */
 209:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 210:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	      vec1 = vld2q_f32(pSrcA);
 211:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec2 = vld2q_f32(pSrcB);
 212:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 213:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 214:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 215:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 216:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 217:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 218:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec1.val[0],vec2.val[0]);
 219:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec1.val[1],vec2.val[1]);
 220:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 221:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 222:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[1],vec2.val[0]);
 223:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[0],vec2.val[1]);
 224:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 225:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec3 = vld2q_f32(pSrcA);
 226:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec4 = vld2q_f32(pSrcB);
 227:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	
 228:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 229:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 230:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 6


 231:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 232:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 233:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec3.val[0],vec4.val[0]);
 234:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec3.val[1],vec4.val[1]);
 235:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 236:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 237:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[1],vec4.val[0]);
 238:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[0],vec4.val[1]);
 239:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 240:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Decrement the loop counter */
 241:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt--;
 242:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     }
 243:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 244:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accR), vget_high_f32(accR));
 245:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += vget_lane_f32(accum, 0) + vget_lane_f32(accum, 1);
 246:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 247:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accI), vget_high_f32(accI));
 248:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += vget_lane_f32(accum, 0) + vget_lane_f32(accum, 1);
 249:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 250:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Tail */
 251:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples & 0x7;
 252:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 253:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 254:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 255:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 256:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 257:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples >> 2U;
 258:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 259:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
 260:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 261:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 262:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 263:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 264:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 265:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 266:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 267:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 268:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 269:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 270:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 271:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 272:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 273:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 274:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 275:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 276:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 277:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 278:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 279:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 280:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 281:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 282:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 283:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 284:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 285:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 286:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 287:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 7


 288:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 289:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 290:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 291:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 292:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 293:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 294:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 295:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 296:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 297:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 298:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 299:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 300:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 301:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 302:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 303:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 304:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 305:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 306:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples % 0x4U;
 307:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 308:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 309:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 310:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Initialize blkCnt with number of samples */
 311:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples;
 312:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 313:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 314:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 315:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 316:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
  56              		.loc 1 316 0
  57 0010 2DE0     		b	.L2
  58              	.LVL3:
  59              	.L3:
 317:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 318:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
  60              		.loc 1 318 0
  61 0012 0446     		mov	r4, r0
  62 0014 54F808AB 		ldr	r10, [r4], #8	@ float
  63              	.LVL4:
 319:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
  64              		.loc 1 319 0
  65 0018 D0F80480 		ldr	r8, [r0, #4]	@ float
  66              	.LVL5:
 320:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
  67              		.loc 1 320 0
  68 001c 0D46     		mov	r5, r1
  69 001e 55F8087B 		ldr	r7, [r5], #8	@ float
  70              	.LVL6:
 321:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
  71              		.loc 1 321 0
  72 0022 D1F80490 		ldr	r9, [r1, #4]	@ float
  73              	.LVL7:
 322:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 323:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
  74              		.loc 1 323 0
  75 0026 5046     		mov	r0, r10
  76 0028 3946     		mov	r1, r7
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 8


  77 002a FFF7FEFF 		bl	__aeabi_fmul
  78              	.LVL8:
  79 002e 5946     		mov	r1, fp
  80 0030 FFF7FEFF 		bl	__aeabi_fadd
  81              	.LVL9:
  82 0034 8346     		mov	fp, r0
  83              	.LVL10:
 324:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
  84              		.loc 1 324 0
  85 0036 5046     		mov	r0, r10
  86              	.LVL11:
  87 0038 4946     		mov	r1, r9
  88 003a FFF7FEFF 		bl	__aeabi_fmul
  89              	.LVL12:
  90 003e 0099     		ldr	r1, [sp]	@ float
  91 0040 FFF7FEFF 		bl	__aeabi_fadd
  92              	.LVL13:
  93 0044 8246     		mov	r10, r0
  94              	.LVL14:
 325:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
  95              		.loc 1 325 0
  96 0046 4046     		mov	r0, r8
  97              	.LVL15:
  98 0048 4946     		mov	r1, r9
  99 004a FFF7FEFF 		bl	__aeabi_fmul
 100              	.LVL16:
 101 004e 0146     		mov	r1, r0
 102 0050 5846     		mov	r0, fp
 103 0052 FFF7FEFF 		bl	__aeabi_fsub
 104              	.LVL17:
 105 0056 8346     		mov	fp, r0
 106              	.LVL18:
 326:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 107              		.loc 1 326 0
 108 0058 4046     		mov	r0, r8
 109              	.LVL19:
 110 005a 3946     		mov	r1, r7
 111 005c FFF7FEFF 		bl	__aeabi_fmul
 112              	.LVL20:
 113 0060 5146     		mov	r1, r10
 114 0062 FFF7FEFF 		bl	__aeabi_fadd
 115              	.LVL21:
 116 0066 0090     		str	r0, [sp]	@ float
 117              	.LVL22:
 327:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 328:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 329:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 118              		.loc 1 329 0
 119 0068 013E     		subs	r6, r6, #1
 120              	.LVL23:
 321:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 121              		.loc 1 321 0
 122 006a 2946     		mov	r1, r5
 319:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 123              		.loc 1 319 0
 124 006c 2046     		mov	r0, r4
 125              	.LVL24:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 9


 126              	.L2:
 316:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 127              		.loc 1 316 0
 128 006e 002E     		cmp	r6, #0
 129 0070 CFD1     		bne	.L3
 330:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 331:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 332:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Store real and imaginary result in destination buffer. */
 333:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *realResult = real_sum;
 130              		.loc 1 333 0
 131 0072 019B     		ldr	r3, [sp, #4]
 132 0074 C3F800B0 		str	fp, [r3]	@ float
 334:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 133              		.loc 1 334 0
 134 0078 0C9B     		ldr	r3, [sp, #48]
 135 007a 009A     		ldr	r2, [sp]	@ float
 136 007c 1A60     		str	r2, [r3]	@ float
 335:.\DSP\Source\ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 137              		.loc 1 335 0
 138 007e 03B0     		add	sp, sp, #12
 139              		.cfi_def_cfa_offset 36
 140              	.LVL25:
 141              		@ sp needed
 142 0080 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 143              		.cfi_endproc
 144              	.LFE84:
 145              		.size	arm_cmplx_dot_prod_f32, .-arm_cmplx_dot_prod_f32
 146              		.text
 147              	.Letext0:
 148              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 149              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 150              		.file 4 ".\\DSP\\Include/arm_math_types.h"
 151              		.file 5 ".\\Core\\Include/cmsis_gcc.h"
 152              		.section	.debug_info,"",%progbits
 153              	.Ldebug_info0:
 154 0000 2A020000 		.4byte	0x22a
 155 0004 0400     		.2byte	0x4
 156 0006 00000000 		.4byte	.Ldebug_abbrev0
 157 000a 04       		.byte	0x4
 158 000b 01       		.uleb128 0x1
 159 000c D0010000 		.4byte	.LASF33
 160 0010 01       		.byte	0x1
 161 0011 00000000 		.4byte	.LASF34
 162 0015 6B010000 		.4byte	.LASF35
 163 0019 00000000 		.4byte	.Ldebug_ranges0+0
 164 001d 00000000 		.4byte	0
 165 0021 00000000 		.4byte	.Ldebug_line0
 166 0025 02       		.uleb128 0x2
 167 0026 01       		.byte	0x1
 168 0027 06       		.byte	0x6
 169 0028 9C020000 		.4byte	.LASF0
 170 002c 02       		.uleb128 0x2
 171 002d 01       		.byte	0x1
 172 002e 08       		.byte	0x8
 173 002f A5000000 		.4byte	.LASF1
 174 0033 02       		.uleb128 0x2
 175 0034 02       		.byte	0x2
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 10


 176 0035 05       		.byte	0x5
 177 0036 C6010000 		.4byte	.LASF2
 178 003a 02       		.uleb128 0x2
 179 003b 02       		.byte	0x2
 180 003c 07       		.byte	0x7
 181 003d DF000000 		.4byte	.LASF3
 182 0041 02       		.uleb128 0x2
 183 0042 04       		.byte	0x4
 184 0043 05       		.byte	0x5
 185 0044 72020000 		.4byte	.LASF4
 186 0048 03       		.uleb128 0x3
 187 0049 0E010000 		.4byte	.LASF9
 188 004d 02       		.byte	0x2
 189 004e 41       		.byte	0x41
 190 004f 53000000 		.4byte	0x53
 191 0053 02       		.uleb128 0x2
 192 0054 04       		.byte	0x4
 193 0055 07       		.byte	0x7
 194 0056 CD000000 		.4byte	.LASF5
 195 005a 02       		.uleb128 0x2
 196 005b 08       		.byte	0x8
 197 005c 05       		.byte	0x5
 198 005d 4F010000 		.4byte	.LASF6
 199 0061 02       		.uleb128 0x2
 200 0062 08       		.byte	0x8
 201 0063 07       		.byte	0x7
 202 0064 2F010000 		.4byte	.LASF7
 203 0068 04       		.uleb128 0x4
 204 0069 04       		.byte	0x4
 205 006a 05       		.byte	0x5
 206 006b 696E7400 		.ascii	"int\000"
 207 006f 02       		.uleb128 0x2
 208 0070 04       		.byte	0x4
 209 0071 07       		.byte	0x7
 210 0072 22010000 		.4byte	.LASF8
 211 0076 03       		.uleb128 0x3
 212 0077 69020000 		.4byte	.LASF10
 213 007b 03       		.byte	0x3
 214 007c 2D       		.byte	0x2d
 215 007d 48000000 		.4byte	0x48
 216 0081 02       		.uleb128 0x2
 217 0082 04       		.byte	0x4
 218 0083 07       		.byte	0x7
 219 0084 46010000 		.4byte	.LASF11
 220 0088 02       		.uleb128 0x2
 221 0089 01       		.byte	0x1
 222 008a 08       		.byte	0x8
 223 008b 66010000 		.4byte	.LASF12
 224 008f 02       		.uleb128 0x2
 225 0090 08       		.byte	0x8
 226 0091 04       		.byte	0x4
 227 0092 FD000000 		.4byte	.LASF13
 228 0096 02       		.uleb128 0x2
 229 0097 04       		.byte	0x4
 230 0098 04       		.byte	0x4
 231 0099 8F000000 		.4byte	.LASF14
 232 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 11


 233 009e 08       		.byte	0x8
 234 009f 04       		.byte	0x4
 235 00a0 7B020000 		.4byte	.LASF15
 236 00a4 05       		.uleb128 0x5
 237 00a5 04010000 		.4byte	.LASF16
 238 00a9 04       		.byte	0x4
 239 00aa 2F01     		.2byte	0x12f
 240 00ac 96000000 		.4byte	0x96
 241 00b0 06       		.uleb128 0x6
 242 00b1 69000000 		.4byte	.LASF36
 243 00b5 01       		.byte	0x1
 244 00b6 B7       		.byte	0xb7
 245 00b7 00000000 		.4byte	.LFB84
 246 00bb 84000000 		.4byte	.LFE84-.LFB84
 247 00bf 01       		.uleb128 0x1
 248 00c0 9C       		.byte	0x9c
 249 00c1 75010000 		.4byte	0x175
 250 00c5 07       		.uleb128 0x7
 251 00c6 5D000000 		.4byte	.LASF17
 252 00ca 01       		.byte	0x1
 253 00cb B8       		.byte	0xb8
 254 00cc 75010000 		.4byte	0x175
 255 00d0 00000000 		.4byte	.LLST0
 256 00d4 07       		.uleb128 0x7
 257 00d5 63000000 		.4byte	.LASF18
 258 00d9 01       		.byte	0x1
 259 00da B9       		.byte	0xb9
 260 00db 75010000 		.4byte	0x175
 261 00df 36000000 		.4byte	.LLST1
 262 00e3 07       		.uleb128 0x7
 263 00e4 A8020000 		.4byte	.LASF19
 264 00e8 01       		.byte	0x1
 265 00e9 BA       		.byte	0xba
 266 00ea 76000000 		.4byte	0x76
 267 00ee 6C000000 		.4byte	.LLST2
 268 00f2 07       		.uleb128 0x7
 269 00f3 F2000000 		.4byte	.LASF20
 270 00f7 01       		.byte	0x1
 271 00f8 BB       		.byte	0xbb
 272 00f9 80010000 		.4byte	0x180
 273 00fd 8D000000 		.4byte	.LLST3
 274 0101 08       		.uleb128 0x8
 275 0102 95000000 		.4byte	.LASF21
 276 0106 01       		.byte	0x1
 277 0107 BC       		.byte	0xbc
 278 0108 80010000 		.4byte	0x180
 279 010c 02       		.uleb128 0x2
 280 010d 91       		.byte	0x91
 281 010e 00       		.sleb128 0
 282 010f 09       		.uleb128 0x9
 283 0110 B3000000 		.4byte	.LASF22
 284 0114 01       		.byte	0x1
 285 0115 BE       		.byte	0xbe
 286 0116 76000000 		.4byte	0x76
 287 011a AC000000 		.4byte	.LLST4
 288 011e 09       		.uleb128 0x9
 289 011f 19010000 		.4byte	.LASF23
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 12


 290 0123 01       		.byte	0x1
 291 0124 BF       		.byte	0xbf
 292 0125 A4000000 		.4byte	0xa4
 293 0129 CA000000 		.4byte	.LLST5
 294 012d 09       		.uleb128 0x9
 295 012e 5D010000 		.4byte	.LASF24
 296 0132 01       		.byte	0x1
 297 0133 BF       		.byte	0xbf
 298 0134 A4000000 		.4byte	0xa4
 299 0138 19010000 		.4byte	.LLST6
 300 013c 0A       		.uleb128 0xa
 301 013d 613000   		.ascii	"a0\000"
 302 0140 01       		.byte	0x1
 303 0141 C0       		.byte	0xc0
 304 0142 A4000000 		.4byte	0xa4
 305 0146 75010000 		.4byte	.LLST7
 306 014a 0A       		.uleb128 0xa
 307 014b 623000   		.ascii	"b0\000"
 308 014e 01       		.byte	0x1
 309 014f C0       		.byte	0xc0
 310 0150 A4000000 		.4byte	0xa4
 311 0154 88010000 		.4byte	.LLST8
 312 0158 0A       		.uleb128 0xa
 313 0159 633000   		.ascii	"c0\000"
 314 015c 01       		.byte	0x1
 315 015d C0       		.byte	0xc0
 316 015e A4000000 		.4byte	0xa4
 317 0162 9B010000 		.4byte	.LLST9
 318 0166 0A       		.uleb128 0xa
 319 0167 643000   		.ascii	"d0\000"
 320 016a 01       		.byte	0x1
 321 016b C0       		.byte	0xc0
 322 016c A4000000 		.4byte	0xa4
 323 0170 AE010000 		.4byte	.LLST10
 324 0174 00       		.byte	0
 325 0175 0B       		.uleb128 0xb
 326 0176 04       		.byte	0x4
 327 0177 7B010000 		.4byte	0x17b
 328 017b 0C       		.uleb128 0xc
 329 017c A4000000 		.4byte	0xa4
 330 0180 0B       		.uleb128 0xb
 331 0181 04       		.byte	0x4
 332 0182 A4000000 		.4byte	0xa4
 333 0186 03       		.uleb128 0x3
 334 0187 3B000000 		.4byte	.LASF25
 335 018b 05       		.byte	0x5
 336 018c 8B       		.byte	0x8b
 337 018d 04020000 		.4byte	0x204
 338 0191 0B       		.uleb128 0xb
 339 0192 04       		.byte	0x4
 340 0193 97010000 		.4byte	0x197
 341 0197 0C       		.uleb128 0xc
 342 0198 76000000 		.4byte	0x76
 343 019c 0B       		.uleb128 0xb
 344 019d 04       		.byte	0x4
 345 019e 76000000 		.4byte	0x76
 346 01a2 0D       		.uleb128 0xd
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 13


 347 01a3 B3020000 		.4byte	.LASF26
 348 01a7 05       		.byte	0x5
 349 01a8 92       		.byte	0x92
 350 01a9 AD010000 		.4byte	0x1ad
 351 01ad 0C       		.uleb128 0xc
 352 01ae 86010000 		.4byte	0x186
 353 01b2 0D       		.uleb128 0xd
 354 01b3 BA000000 		.4byte	.LASF27
 355 01b7 05       		.byte	0x5
 356 01b8 93       		.byte	0x93
 357 01b9 AD010000 		.4byte	0x1ad
 358 01bd 03       		.uleb128 0x3
 359 01be 80000000 		.4byte	.LASF28
 360 01c2 05       		.byte	0x5
 361 01c3 90       		.byte	0x90
 362 01c4 E3010000 		.4byte	0x1e3
 363 01c8 0D       		.uleb128 0xd
 364 01c9 87020000 		.4byte	.LASF29
 365 01cd 05       		.byte	0x5
 366 01ce 94       		.byte	0x94
 367 01cf D3010000 		.4byte	0x1d3
 368 01d3 0C       		.uleb128 0xc
 369 01d4 BD010000 		.4byte	0x1bd
 370 01d8 0D       		.uleb128 0xd
 371 01d9 4A000000 		.4byte	.LASF30
 372 01dd 05       		.byte	0x5
 373 01de 95       		.byte	0x95
 374 01df D3010000 		.4byte	0x1d3
 375 01e3 0E       		.uleb128 0xe
 376 01e4 08       		.byte	0x8
 377 01e5 05       		.byte	0x5
 378 01e6 8D       		.byte	0x8d
 379 01e7 04020000 		.4byte	0x204
 380 01eb 0F       		.uleb128 0xf
 381 01ec A0000000 		.4byte	.LASF31
 382 01f0 05       		.byte	0x5
 383 01f1 8E       		.byte	0x8e
 384 01f2 9C010000 		.4byte	0x19c
 385 01f6 00       		.byte	0
 386 01f7 0F       		.uleb128 0xf
 387 01f8 C1010000 		.4byte	.LASF32
 388 01fc 05       		.byte	0x5
 389 01fd 8F       		.byte	0x8f
 390 01fe 76000000 		.4byte	0x76
 391 0202 04       		.byte	0x4
 392 0203 00       		.byte	0
 393 0204 10       		.uleb128 0x10
 394 0205 0C       		.byte	0xc
 395 0206 05       		.byte	0x5
 396 0207 87       		.byte	0x87
 397 0208 11       		.uleb128 0x11
 398 0209 73726300 		.ascii	"src\000"
 399 020d 05       		.byte	0x5
 400 020e 88       		.byte	0x88
 401 020f 91010000 		.4byte	0x191
 402 0213 00       		.byte	0
 403 0214 0F       		.uleb128 0xf
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 14


 404 0215 A0000000 		.4byte	.LASF31
 405 0219 05       		.byte	0x5
 406 021a 89       		.byte	0x89
 407 021b 9C010000 		.4byte	0x19c
 408 021f 04       		.byte	0x4
 409 0220 0F       		.uleb128 0xf
 410 0221 C1010000 		.4byte	.LASF32
 411 0225 05       		.byte	0x5
 412 0226 8A       		.byte	0x8a
 413 0227 76000000 		.4byte	0x76
 414 022b 08       		.byte	0x8
 415 022c 00       		.byte	0
 416 022d 00       		.byte	0
 417              		.section	.debug_abbrev,"",%progbits
 418              	.Ldebug_abbrev0:
 419 0000 01       		.uleb128 0x1
 420 0001 11       		.uleb128 0x11
 421 0002 01       		.byte	0x1
 422 0003 25       		.uleb128 0x25
 423 0004 0E       		.uleb128 0xe
 424 0005 13       		.uleb128 0x13
 425 0006 0B       		.uleb128 0xb
 426 0007 03       		.uleb128 0x3
 427 0008 0E       		.uleb128 0xe
 428 0009 1B       		.uleb128 0x1b
 429 000a 0E       		.uleb128 0xe
 430 000b 55       		.uleb128 0x55
 431 000c 17       		.uleb128 0x17
 432 000d 11       		.uleb128 0x11
 433 000e 01       		.uleb128 0x1
 434 000f 10       		.uleb128 0x10
 435 0010 17       		.uleb128 0x17
 436 0011 00       		.byte	0
 437 0012 00       		.byte	0
 438 0013 02       		.uleb128 0x2
 439 0014 24       		.uleb128 0x24
 440 0015 00       		.byte	0
 441 0016 0B       		.uleb128 0xb
 442 0017 0B       		.uleb128 0xb
 443 0018 3E       		.uleb128 0x3e
 444 0019 0B       		.uleb128 0xb
 445 001a 03       		.uleb128 0x3
 446 001b 0E       		.uleb128 0xe
 447 001c 00       		.byte	0
 448 001d 00       		.byte	0
 449 001e 03       		.uleb128 0x3
 450 001f 16       		.uleb128 0x16
 451 0020 00       		.byte	0
 452 0021 03       		.uleb128 0x3
 453 0022 0E       		.uleb128 0xe
 454 0023 3A       		.uleb128 0x3a
 455 0024 0B       		.uleb128 0xb
 456 0025 3B       		.uleb128 0x3b
 457 0026 0B       		.uleb128 0xb
 458 0027 49       		.uleb128 0x49
 459 0028 13       		.uleb128 0x13
 460 0029 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 15


 461 002a 00       		.byte	0
 462 002b 04       		.uleb128 0x4
 463 002c 24       		.uleb128 0x24
 464 002d 00       		.byte	0
 465 002e 0B       		.uleb128 0xb
 466 002f 0B       		.uleb128 0xb
 467 0030 3E       		.uleb128 0x3e
 468 0031 0B       		.uleb128 0xb
 469 0032 03       		.uleb128 0x3
 470 0033 08       		.uleb128 0x8
 471 0034 00       		.byte	0
 472 0035 00       		.byte	0
 473 0036 05       		.uleb128 0x5
 474 0037 16       		.uleb128 0x16
 475 0038 00       		.byte	0
 476 0039 03       		.uleb128 0x3
 477 003a 0E       		.uleb128 0xe
 478 003b 3A       		.uleb128 0x3a
 479 003c 0B       		.uleb128 0xb
 480 003d 3B       		.uleb128 0x3b
 481 003e 05       		.uleb128 0x5
 482 003f 49       		.uleb128 0x49
 483 0040 13       		.uleb128 0x13
 484 0041 00       		.byte	0
 485 0042 00       		.byte	0
 486 0043 06       		.uleb128 0x6
 487 0044 2E       		.uleb128 0x2e
 488 0045 01       		.byte	0x1
 489 0046 3F       		.uleb128 0x3f
 490 0047 19       		.uleb128 0x19
 491 0048 03       		.uleb128 0x3
 492 0049 0E       		.uleb128 0xe
 493 004a 3A       		.uleb128 0x3a
 494 004b 0B       		.uleb128 0xb
 495 004c 3B       		.uleb128 0x3b
 496 004d 0B       		.uleb128 0xb
 497 004e 27       		.uleb128 0x27
 498 004f 19       		.uleb128 0x19
 499 0050 11       		.uleb128 0x11
 500 0051 01       		.uleb128 0x1
 501 0052 12       		.uleb128 0x12
 502 0053 06       		.uleb128 0x6
 503 0054 40       		.uleb128 0x40
 504 0055 18       		.uleb128 0x18
 505 0056 9642     		.uleb128 0x2116
 506 0058 19       		.uleb128 0x19
 507 0059 01       		.uleb128 0x1
 508 005a 13       		.uleb128 0x13
 509 005b 00       		.byte	0
 510 005c 00       		.byte	0
 511 005d 07       		.uleb128 0x7
 512 005e 05       		.uleb128 0x5
 513 005f 00       		.byte	0
 514 0060 03       		.uleb128 0x3
 515 0061 0E       		.uleb128 0xe
 516 0062 3A       		.uleb128 0x3a
 517 0063 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 16


 518 0064 3B       		.uleb128 0x3b
 519 0065 0B       		.uleb128 0xb
 520 0066 49       		.uleb128 0x49
 521 0067 13       		.uleb128 0x13
 522 0068 02       		.uleb128 0x2
 523 0069 17       		.uleb128 0x17
 524 006a 00       		.byte	0
 525 006b 00       		.byte	0
 526 006c 08       		.uleb128 0x8
 527 006d 05       		.uleb128 0x5
 528 006e 00       		.byte	0
 529 006f 03       		.uleb128 0x3
 530 0070 0E       		.uleb128 0xe
 531 0071 3A       		.uleb128 0x3a
 532 0072 0B       		.uleb128 0xb
 533 0073 3B       		.uleb128 0x3b
 534 0074 0B       		.uleb128 0xb
 535 0075 49       		.uleb128 0x49
 536 0076 13       		.uleb128 0x13
 537 0077 02       		.uleb128 0x2
 538 0078 18       		.uleb128 0x18
 539 0079 00       		.byte	0
 540 007a 00       		.byte	0
 541 007b 09       		.uleb128 0x9
 542 007c 34       		.uleb128 0x34
 543 007d 00       		.byte	0
 544 007e 03       		.uleb128 0x3
 545 007f 0E       		.uleb128 0xe
 546 0080 3A       		.uleb128 0x3a
 547 0081 0B       		.uleb128 0xb
 548 0082 3B       		.uleb128 0x3b
 549 0083 0B       		.uleb128 0xb
 550 0084 49       		.uleb128 0x49
 551 0085 13       		.uleb128 0x13
 552 0086 02       		.uleb128 0x2
 553 0087 17       		.uleb128 0x17
 554 0088 00       		.byte	0
 555 0089 00       		.byte	0
 556 008a 0A       		.uleb128 0xa
 557 008b 34       		.uleb128 0x34
 558 008c 00       		.byte	0
 559 008d 03       		.uleb128 0x3
 560 008e 08       		.uleb128 0x8
 561 008f 3A       		.uleb128 0x3a
 562 0090 0B       		.uleb128 0xb
 563 0091 3B       		.uleb128 0x3b
 564 0092 0B       		.uleb128 0xb
 565 0093 49       		.uleb128 0x49
 566 0094 13       		.uleb128 0x13
 567 0095 02       		.uleb128 0x2
 568 0096 17       		.uleb128 0x17
 569 0097 00       		.byte	0
 570 0098 00       		.byte	0
 571 0099 0B       		.uleb128 0xb
 572 009a 0F       		.uleb128 0xf
 573 009b 00       		.byte	0
 574 009c 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 17


 575 009d 0B       		.uleb128 0xb
 576 009e 49       		.uleb128 0x49
 577 009f 13       		.uleb128 0x13
 578 00a0 00       		.byte	0
 579 00a1 00       		.byte	0
 580 00a2 0C       		.uleb128 0xc
 581 00a3 26       		.uleb128 0x26
 582 00a4 00       		.byte	0
 583 00a5 49       		.uleb128 0x49
 584 00a6 13       		.uleb128 0x13
 585 00a7 00       		.byte	0
 586 00a8 00       		.byte	0
 587 00a9 0D       		.uleb128 0xd
 588 00aa 34       		.uleb128 0x34
 589 00ab 00       		.byte	0
 590 00ac 03       		.uleb128 0x3
 591 00ad 0E       		.uleb128 0xe
 592 00ae 3A       		.uleb128 0x3a
 593 00af 0B       		.uleb128 0xb
 594 00b0 3B       		.uleb128 0x3b
 595 00b1 0B       		.uleb128 0xb
 596 00b2 49       		.uleb128 0x49
 597 00b3 13       		.uleb128 0x13
 598 00b4 3F       		.uleb128 0x3f
 599 00b5 19       		.uleb128 0x19
 600 00b6 3C       		.uleb128 0x3c
 601 00b7 19       		.uleb128 0x19
 602 00b8 00       		.byte	0
 603 00b9 00       		.byte	0
 604 00ba 0E       		.uleb128 0xe
 605 00bb 13       		.uleb128 0x13
 606 00bc 01       		.byte	0x1
 607 00bd 0B       		.uleb128 0xb
 608 00be 0B       		.uleb128 0xb
 609 00bf 3A       		.uleb128 0x3a
 610 00c0 0B       		.uleb128 0xb
 611 00c1 3B       		.uleb128 0x3b
 612 00c2 0B       		.uleb128 0xb
 613 00c3 01       		.uleb128 0x1
 614 00c4 13       		.uleb128 0x13
 615 00c5 00       		.byte	0
 616 00c6 00       		.byte	0
 617 00c7 0F       		.uleb128 0xf
 618 00c8 0D       		.uleb128 0xd
 619 00c9 00       		.byte	0
 620 00ca 03       		.uleb128 0x3
 621 00cb 0E       		.uleb128 0xe
 622 00cc 3A       		.uleb128 0x3a
 623 00cd 0B       		.uleb128 0xb
 624 00ce 3B       		.uleb128 0x3b
 625 00cf 0B       		.uleb128 0xb
 626 00d0 49       		.uleb128 0x49
 627 00d1 13       		.uleb128 0x13
 628 00d2 38       		.uleb128 0x38
 629 00d3 0B       		.uleb128 0xb
 630 00d4 00       		.byte	0
 631 00d5 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 18


 632 00d6 10       		.uleb128 0x10
 633 00d7 13       		.uleb128 0x13
 634 00d8 01       		.byte	0x1
 635 00d9 0B       		.uleb128 0xb
 636 00da 0B       		.uleb128 0xb
 637 00db 3A       		.uleb128 0x3a
 638 00dc 0B       		.uleb128 0xb
 639 00dd 3B       		.uleb128 0x3b
 640 00de 0B       		.uleb128 0xb
 641 00df 00       		.byte	0
 642 00e0 00       		.byte	0
 643 00e1 11       		.uleb128 0x11
 644 00e2 0D       		.uleb128 0xd
 645 00e3 00       		.byte	0
 646 00e4 03       		.uleb128 0x3
 647 00e5 08       		.uleb128 0x8
 648 00e6 3A       		.uleb128 0x3a
 649 00e7 0B       		.uleb128 0xb
 650 00e8 3B       		.uleb128 0x3b
 651 00e9 0B       		.uleb128 0xb
 652 00ea 49       		.uleb128 0x49
 653 00eb 13       		.uleb128 0x13
 654 00ec 38       		.uleb128 0x38
 655 00ed 0B       		.uleb128 0xb
 656 00ee 00       		.byte	0
 657 00ef 00       		.byte	0
 658 00f0 00       		.byte	0
 659              		.section	.debug_loc,"",%progbits
 660              	.Ldebug_loc0:
 661              	.LLST0:
 662 0000 00000000 		.4byte	.LVL0
 663 0004 12000000 		.4byte	.LVL3
 664 0008 0100     		.2byte	0x1
 665 000a 50       		.byte	0x50
 666 000b 12000000 		.4byte	.LVL3
 667 000f 18000000 		.4byte	.LVL4
 668 0013 0300     		.2byte	0x3
 669 0015 70       		.byte	0x70
 670 0016 04       		.sleb128 4
 671 0017 9F       		.byte	0x9f
 672 0018 18000000 		.4byte	.LVL4
 673 001c 6E000000 		.4byte	.LVL24
 674 0020 0100     		.2byte	0x1
 675 0022 54       		.byte	0x54
 676 0023 6E000000 		.4byte	.LVL24
 677 0027 84000000 		.4byte	.LFE84
 678 002b 0100     		.2byte	0x1
 679 002d 50       		.byte	0x50
 680 002e 00000000 		.4byte	0
 681 0032 00000000 		.4byte	0
 682              	.LLST1:
 683 0036 00000000 		.4byte	.LVL0
 684 003a 1C000000 		.4byte	.LVL5
 685 003e 0100     		.2byte	0x1
 686 0040 51       		.byte	0x51
 687 0041 1C000000 		.4byte	.LVL5
 688 0045 22000000 		.4byte	.LVL6
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 19


 689 0049 0300     		.2byte	0x3
 690 004b 71       		.byte	0x71
 691 004c 04       		.sleb128 4
 692 004d 9F       		.byte	0x9f
 693 004e 22000000 		.4byte	.LVL6
 694 0052 6E000000 		.4byte	.LVL24
 695 0056 0100     		.2byte	0x1
 696 0058 55       		.byte	0x55
 697 0059 6E000000 		.4byte	.LVL24
 698 005d 84000000 		.4byte	.LFE84
 699 0061 0100     		.2byte	0x1
 700 0063 51       		.byte	0x51
 701 0064 00000000 		.4byte	0
 702 0068 00000000 		.4byte	0
 703              	.LLST2:
 704 006c 00000000 		.4byte	.LVL0
 705 0070 12000000 		.4byte	.LVL3
 706 0074 0100     		.2byte	0x1
 707 0076 52       		.byte	0x52
 708 0077 12000000 		.4byte	.LVL3
 709 007b 84000000 		.4byte	.LFE84
 710 007f 0400     		.2byte	0x4
 711 0081 F3       		.byte	0xf3
 712 0082 01       		.uleb128 0x1
 713 0083 52       		.byte	0x52
 714 0084 9F       		.byte	0x9f
 715 0085 00000000 		.4byte	0
 716 0089 00000000 		.4byte	0
 717              	.LLST3:
 718 008d 00000000 		.4byte	.LVL0
 719 0091 0C000000 		.4byte	.LVL2
 720 0095 0100     		.2byte	0x1
 721 0097 53       		.byte	0x53
 722 0098 0C000000 		.4byte	.LVL2
 723 009c 84000000 		.4byte	.LFE84
 724 00a0 0200     		.2byte	0x2
 725 00a2 91       		.byte	0x91
 726 00a3 54       		.sleb128 -44
 727 00a4 00000000 		.4byte	0
 728 00a8 00000000 		.4byte	0
 729              	.LLST4:
 730 00ac 0A000000 		.4byte	.LVL1
 731 00b0 12000000 		.4byte	.LVL3
 732 00b4 0100     		.2byte	0x1
 733 00b6 52       		.byte	0x52
 734 00b7 12000000 		.4byte	.LVL3
 735 00bb 84000000 		.4byte	.LFE84
 736 00bf 0100     		.2byte	0x1
 737 00c1 56       		.byte	0x56
 738 00c2 00000000 		.4byte	0
 739 00c6 00000000 		.4byte	0
 740              	.LLST5:
 741 00ca 0A000000 		.4byte	.LVL1
 742 00ce 12000000 		.4byte	.LVL3
 743 00d2 0600     		.2byte	0x6
 744 00d4 9E       		.byte	0x9e
 745 00d5 04       		.uleb128 0x4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 20


 746 00d6 00000000 		.4byte	0
 747 00da 12000000 		.4byte	.LVL3
 748 00de 36000000 		.4byte	.LVL10
 749 00e2 0100     		.2byte	0x1
 750 00e4 5B       		.byte	0x5b
 751 00e5 36000000 		.4byte	.LVL10
 752 00e9 38000000 		.4byte	.LVL11
 753 00ed 0100     		.2byte	0x1
 754 00ef 50       		.byte	0x50
 755 00f0 38000000 		.4byte	.LVL11
 756 00f4 58000000 		.4byte	.LVL18
 757 00f8 0100     		.2byte	0x1
 758 00fa 5B       		.byte	0x5b
 759 00fb 58000000 		.4byte	.LVL18
 760 00ff 5A000000 		.4byte	.LVL19
 761 0103 0100     		.2byte	0x1
 762 0105 50       		.byte	0x50
 763 0106 5A000000 		.4byte	.LVL19
 764 010a 84000000 		.4byte	.LFE84
 765 010e 0100     		.2byte	0x1
 766 0110 5B       		.byte	0x5b
 767 0111 00000000 		.4byte	0
 768 0115 00000000 		.4byte	0
 769              	.LLST6:
 770 0119 0A000000 		.4byte	.LVL1
 771 011d 12000000 		.4byte	.LVL3
 772 0121 0600     		.2byte	0x6
 773 0123 9E       		.byte	0x9e
 774 0124 04       		.uleb128 0x4
 775 0125 00000000 		.4byte	0
 776 0129 12000000 		.4byte	.LVL3
 777 012d 46000000 		.4byte	.LVL14
 778 0131 0200     		.2byte	0x2
 779 0133 7D       		.byte	0x7d
 780 0134 00       		.sleb128 0
 781 0135 46000000 		.4byte	.LVL14
 782 0139 48000000 		.4byte	.LVL15
 783 013d 0100     		.2byte	0x1
 784 013f 50       		.byte	0x50
 785 0140 48000000 		.4byte	.LVL15
 786 0144 68000000 		.4byte	.LVL22
 787 0148 0100     		.2byte	0x1
 788 014a 5A       		.byte	0x5a
 789 014b 68000000 		.4byte	.LVL22
 790 014f 6E000000 		.4byte	.LVL24
 791 0153 0100     		.2byte	0x1
 792 0155 50       		.byte	0x50
 793 0156 6E000000 		.4byte	.LVL24
 794 015a 80000000 		.4byte	.LVL25
 795 015e 0200     		.2byte	0x2
 796 0160 7D       		.byte	0x7d
 797 0161 00       		.sleb128 0
 798 0162 80000000 		.4byte	.LVL25
 799 0166 84000000 		.4byte	.LFE84
 800 016a 0100     		.2byte	0x1
 801 016c 52       		.byte	0x52
 802 016d 00000000 		.4byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 21


 803 0171 00000000 		.4byte	0
 804              	.LLST7:
 805 0175 18000000 		.4byte	.LVL4
 806 0179 46000000 		.4byte	.LVL14
 807 017d 0100     		.2byte	0x1
 808 017f 5A       		.byte	0x5a
 809 0180 00000000 		.4byte	0
 810 0184 00000000 		.4byte	0
 811              	.LLST8:
 812 0188 1C000000 		.4byte	.LVL5
 813 018c 6E000000 		.4byte	.LVL24
 814 0190 0100     		.2byte	0x1
 815 0192 58       		.byte	0x58
 816 0193 00000000 		.4byte	0
 817 0197 00000000 		.4byte	0
 818              	.LLST9:
 819 019b 22000000 		.4byte	.LVL6
 820 019f 6E000000 		.4byte	.LVL24
 821 01a3 0100     		.2byte	0x1
 822 01a5 57       		.byte	0x57
 823 01a6 00000000 		.4byte	0
 824 01aa 00000000 		.4byte	0
 825              	.LLST10:
 826 01ae 26000000 		.4byte	.LVL7
 827 01b2 6E000000 		.4byte	.LVL24
 828 01b6 0100     		.2byte	0x1
 829 01b8 59       		.byte	0x59
 830 01b9 00000000 		.4byte	0
 831 01bd 00000000 		.4byte	0
 832              		.section	.debug_aranges,"",%progbits
 833 0000 1C000000 		.4byte	0x1c
 834 0004 0200     		.2byte	0x2
 835 0006 00000000 		.4byte	.Ldebug_info0
 836 000a 04       		.byte	0x4
 837 000b 00       		.byte	0
 838 000c 0000     		.2byte	0
 839 000e 0000     		.2byte	0
 840 0010 00000000 		.4byte	.LFB84
 841 0014 84000000 		.4byte	.LFE84-.LFB84
 842 0018 00000000 		.4byte	0
 843 001c 00000000 		.4byte	0
 844              		.section	.debug_ranges,"",%progbits
 845              	.Ldebug_ranges0:
 846 0000 00000000 		.4byte	.LFB84
 847 0004 84000000 		.4byte	.LFE84
 848 0008 00000000 		.4byte	0
 849 000c 00000000 		.4byte	0
 850              		.section	.debug_line,"",%progbits
 851              	.Ldebug_line0:
 852 0000 B7010000 		.section	.debug_str,"MS",%progbits,1
 852      02008901 
 852      00000201 
 852      FB0E0D00 
 852      01010101 
 853              	.LASF34:
 854 0000 2E5C4453 		.ascii	".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_dot"
 854      505C536F 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 22


 854      75726365 
 854      5C436F6D 
 854      706C6578 
 855 002f 5F70726F 		.ascii	"_prod_f32.c\000"
 855      645F6633 
 855      322E6300 
 856              	.LASF25:
 857 003b 5F5F636F 		.ascii	"__copy_table_t\000"
 857      70795F74 
 857      61626C65 
 857      5F7400
 858              	.LASF30:
 859 004a 5F5F7A65 		.ascii	"__zero_table_end__\000"
 859      726F5F74 
 859      61626C65 
 859      5F656E64 
 859      5F5F00
 860              	.LASF17:
 861 005d 70537263 		.ascii	"pSrcA\000"
 861      4100
 862              	.LASF18:
 863 0063 70537263 		.ascii	"pSrcB\000"
 863      4200
 864              	.LASF36:
 865 0069 61726D5F 		.ascii	"arm_cmplx_dot_prod_f32\000"
 865      636D706C 
 865      785F646F 
 865      745F7072 
 865      6F645F66 
 866              	.LASF28:
 867 0080 5F5F7A65 		.ascii	"__zero_table_t\000"
 867      726F5F74 
 867      61626C65 
 867      5F7400
 868              	.LASF14:
 869 008f 666C6F61 		.ascii	"float\000"
 869      7400
 870              	.LASF21:
 871 0095 696D6167 		.ascii	"imagResult\000"
 871      52657375 
 871      6C7400
 872              	.LASF31:
 873 00a0 64657374 		.ascii	"dest\000"
 873      00
 874              	.LASF1:
 875 00a5 756E7369 		.ascii	"unsigned char\000"
 875      676E6564 
 875      20636861 
 875      7200
 876              	.LASF22:
 877 00b3 626C6B43 		.ascii	"blkCnt\000"
 877      6E7400
 878              	.LASF27:
 879 00ba 5F5F636F 		.ascii	"__copy_table_end__\000"
 879      70795F74 
 879      61626C65 
 879      5F656E64 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 23


 879      5F5F00
 880              	.LASF5:
 881 00cd 6C6F6E67 		.ascii	"long unsigned int\000"
 881      20756E73 
 881      69676E65 
 881      6420696E 
 881      7400
 882              	.LASF3:
 883 00df 73686F72 		.ascii	"short unsigned int\000"
 883      7420756E 
 883      7369676E 
 883      65642069 
 883      6E7400
 884              	.LASF20:
 885 00f2 7265616C 		.ascii	"realResult\000"
 885      52657375 
 885      6C7400
 886              	.LASF13:
 887 00fd 646F7562 		.ascii	"double\000"
 887      6C6500
 888              	.LASF16:
 889 0104 666C6F61 		.ascii	"float32_t\000"
 889      7433325F 
 889      7400
 890              	.LASF9:
 891 010e 5F5F7569 		.ascii	"__uint32_t\000"
 891      6E743332 
 891      5F7400
 892              	.LASF23:
 893 0119 7265616C 		.ascii	"real_sum\000"
 893      5F73756D 
 893      00
 894              	.LASF8:
 895 0122 756E7369 		.ascii	"unsigned int\000"
 895      676E6564 
 895      20696E74 
 895      00
 896              	.LASF7:
 897 012f 6C6F6E67 		.ascii	"long long unsigned int\000"
 897      206C6F6E 
 897      6720756E 
 897      7369676E 
 897      65642069 
 898              	.LASF11:
 899 0146 73697A65 		.ascii	"sizetype\000"
 899      74797065 
 899      00
 900              	.LASF6:
 901 014f 6C6F6E67 		.ascii	"long long int\000"
 901      206C6F6E 
 901      6720696E 
 901      7400
 902              	.LASF24:
 903 015d 696D6167 		.ascii	"imag_sum\000"
 903      5F73756D 
 903      00
 904              	.LASF12:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 24


 905 0166 63686172 		.ascii	"char\000"
 905      00
 906              	.LASF35:
 907 016b 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 907      77617265 
 907      2D686F73 
 907      745C5368 
 907      61726564 
 908 0199 6561746F 		.ascii	"eator\\FinalProject\\SoundDetection.cydsn\000"
 908      725C4669 
 908      6E616C50 
 908      726F6A65 
 908      63745C53 
 909              	.LASF32:
 910 01c1 776C656E 		.ascii	"wlen\000"
 910      00
 911              	.LASF2:
 912 01c6 73686F72 		.ascii	"short int\000"
 912      7420696E 
 912      7400
 913              	.LASF33:
 914 01d0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 914      4320342E 
 914      392E3320 
 914      32303135 
 914      30333033 
 915 0203 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 915      20726576 
 915      6973696F 
 915      6E203232 
 915      31323230 
 916 0236 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 916      74643D67 
 916      6E753939 
 916      202D6666 
 916      756E6374 
 917              	.LASF10:
 918 0269 75696E74 		.ascii	"uint32_t\000"
 918      33325F74 
 918      00
 919              	.LASF4:
 920 0272 6C6F6E67 		.ascii	"long int\000"
 920      20696E74 
 920      00
 921              	.LASF15:
 922 027b 6C6F6E67 		.ascii	"long double\000"
 922      20646F75 
 922      626C6500 
 923              	.LASF29:
 924 0287 5F5F7A65 		.ascii	"__zero_table_start__\000"
 924      726F5F74 
 924      61626C65 
 924      5F737461 
 924      72745F5F 
 925              	.LASF0:
 926 029c 7369676E 		.ascii	"signed char\000"
 926      65642063 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccWw1bFM.s 			page 25


 926      68617200 
 927              	.LASF19:
 928 02a8 6E756D53 		.ascii	"numSamples\000"
 928      616D706C 
 928      657300
 929              	.LASF26:
 930 02b3 5F5F636F 		.ascii	"__copy_table_start__\000"
 930      70795F74 
 930      61626C65 
 930      5F737461 
 930      72745F5F 
 931              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
