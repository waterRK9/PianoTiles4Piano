ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_cmplx_mag_squared_f32.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_fmul
  19              		.global	__aeabi_fadd
  20              		.section	.text.arm_cmplx_mag_squared_f32,"ax",%progbits
  21              		.align	2
  22              		.global	arm_cmplx_mag_squared_f32
  23              		.thumb
  24              		.thumb_func
  25              		.type	arm_cmplx_mag_squared_f32, %function
  26              	arm_cmplx_mag_squared_f32:
  27              	.LFB84:
  28              		.file 1 ".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_mag_squared_f32.c"
   1:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /* ----------------------------------------------------------------------
   2:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Project:      CMSIS DSP Library
   3:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Title:        arm_cmplx_mag_squared_f32.c
   4:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Description:  Floating-point complex magnitude squared
   5:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   6:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Date:        23 April 2021
   7:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * $Revision:    V1.9.0
   8:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
   9:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * -------------------------------------------------------------------- */
  11:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /*
  12:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  14:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  16:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * not use this file except in compliance with the License.
  18:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * You may obtain a copy of the License at
  19:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  20:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  *
  22:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * See the License for the specific language governing permissions and
  26:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  * limitations under the License.
  27:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  28:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  29:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #include "dsp/complex_math_functions.h"
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 2


  30:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  31:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  32:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @ingroup groupCmplxMath
  33:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  34:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  35:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  36:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @defgroup cmplx_mag_squared Complex Magnitude Squared
  37:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  38:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   Computes the magnitude squared of the elements of a complex data vector.
  39:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  40:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The <code>pSrc</code> points to the source data and
  41:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <code>pDst</code> points to the where the result should be written.
  42:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  43:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   in the input array and the data is stored in an interleaved fashion
  44:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   (real, imag, real, imag, ...).
  45:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The input array has a total of <code>2*numSamples</code> values;
  46:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   the output array has a total of <code>numSamples</code> values.
  47:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  48:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   The underlying algorithm is used:
  49:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  50:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   <pre>
  51:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   for (n = 0; n < numSamples; n++) {
  52:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       pDst[n] = pSrc[(2*n)+0]^2 + pSrc[(2*n)+1]^2;
  53:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
  54:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   </pre>
  55:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  56:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  57:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  58:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  59:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  60:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @addtogroup cmplx_mag_squared
  61:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @{
  62:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  63:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  64:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** /**
  65:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @brief         Floating-point complex magnitude squared.
  66:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[in]     pSrc        points to input vector
  67:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[out]    pDst        points to output vector
  68:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @param[in]     numSamples  number of samples in each vector
  69:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   @return        none
  70:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****  */
  71:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  72:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined(ARM_MATH_MVEF) && !defined(ARM_MATH_AUTOVECTORIZE)
  73:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  74:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** void arm_cmplx_mag_squared_f32(
  75:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   const float32_t * pSrc,
  76:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         float32_t * pDst,
  77:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         uint32_t numSamples)
  78:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** {
  79:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     int32_t blockSize = numSamples;  /* loop counters */
  80:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     uint32_t  blkCnt;           /* loop counters */
  81:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     f32x4x2_t vecSrc;
  82:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     f32x4_t sum;
  83:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     float32_t real, imag;                          /* Temporary input variables */
  84:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  85:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Compute 4 complex samples at a time */
  86:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt = blockSize >> 2;
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 3


  87:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     while (blkCnt > 0U)
  88:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     {
  89:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         vecSrc = vld2q(pSrc);
  90:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         sum = vmulq(vecSrc.val[0], vecSrc.val[0]);
  91:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         sum = vfmaq(sum, vecSrc.val[1], vecSrc.val[1]);
  92:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         vst1q(pDst, sum);
  93:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  94:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         pSrc += 8;
  95:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         pDst += 4;
  96:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         
  97:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         /*
  98:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****          * Decrement the blockSize loop counter
  99:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****          */
 100:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         blkCnt--;
 101:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     }
 102:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 103:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Tail */
 104:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt = blockSize & 3;
 105:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     while (blkCnt > 0U)
 106:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     {
 107:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 108:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   
 109:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       real = *pSrc++;
 110:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       imag = *pSrc++;
 111:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   
 112:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       /* store result in destination buffer. */
 113:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       *pDst++ = (real * real) + (imag * imag);
 114:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   
 115:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       /* Decrement loop counter */
 116:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****       blkCnt--;
 117:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     }
 118:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 119:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** }
 120:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 121:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 122:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** void arm_cmplx_mag_squared_f32(
 123:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   const float32_t * pSrc,
 124:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         float32_t * pDst,
 125:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         uint32_t numSamples)
 126:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** {
  29              		.loc 1 126 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 3, -32
  37              		.cfi_offset 4, -28
  38              		.cfi_offset 5, -24
  39              		.cfi_offset 6, -20
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 8, -12
  42              		.cfi_offset 9, -8
  43              		.cfi_offset 14, -4
  44 0004 0E46     		mov	r6, r1
  45 0006 1546     		mov	r5, r2
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 4


  46              	.LVL1:
 127:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
 128:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****         float32_t real, imag;                          /* Temporary input variables */
 129:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 130:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined(ARM_MATH_NEON) && !defined(ARM_MATH_AUTOVECTORIZE)
 131:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4x2_t vecA;
 132:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vRealA;
 133:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vImagA;
 134:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vMagSqA;
 135:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 136:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4x2_t vecB;
 137:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vRealB;
 138:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vImagB;
 139:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   float32x4_t vMagSqB;
 140:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 141:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute 8 outputs at a time */
 142:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples >> 3;
 143:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 144:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
 145:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
 146:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* out = sqrt((real * real) + (imag * imag)) */
 147:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 148:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vecA = vld2q_f32(pSrc);
 149:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pSrc += 8;
 150:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 151:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vRealA = vmulq_f32(vecA.val[0], vecA.val[0]);
 152:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vImagA = vmulq_f32(vecA.val[1], vecA.val[1]);
 153:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vMagSqA = vaddq_f32(vRealA, vImagA);
 154:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 155:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vecB = vld2q_f32(pSrc);
 156:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pSrc += 8;
 157:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 158:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vRealB = vmulq_f32(vecB.val[0], vecB.val[0]);
 159:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vImagB = vmulq_f32(vecB.val[1], vecB.val[1]);
 160:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vMagSqB = vaddq_f32(vRealB, vImagB);
 161:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 162:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Store the result in the destination buffer. */
 163:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vst1q_f32(pDst, vMagSqA);
 164:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst += 4;
 165:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 166:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     vst1q_f32(pDst, vMagSqB);
 167:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     pDst += 4;
 168:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 169:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement the loop counter */
 170:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
 171:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 172:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 173:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples & 7;
 174:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 175:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 176:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #if defined (ARM_MATH_LOOPUNROLL) && !defined(ARM_MATH_AUTOVECTORIZE)
 177:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 178:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 179:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples >> 2U;
 180:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 181:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
 182:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 5


 183:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 184:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 185:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 186:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 187:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 188:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 189:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 190:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 191:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 192:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 193:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 194:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 195:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 196:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 197:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
 198:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
 199:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
 200:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 201:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement loop counter */
 202:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
 203:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 204:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 205:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 206:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples % 0x4U;
 207:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 208:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #else
 209:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 210:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   /* Initialize blkCnt with number of samples */
 211:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   blkCnt = numSamples;
 212:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 213:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 214:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 215:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 216:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   while (blkCnt > 0U)
  47              		.loc 1 216 0
  48 0008 15E0     		b	.L2
  49              	.LVL2:
  50              	.L3:
 217:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
 218:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 219:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 220:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     real = *pSrc++;
  51              		.loc 1 220 0
  52 000a 0446     		mov	r4, r0
  53 000c 54F8081B 		ldr	r1, [r4], #8	@ float
  54              	.LVL3:
 221:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     imag = *pSrc++;
  55              		.loc 1 221 0
  56 0010 4768     		ldr	r7, [r0, #4]	@ float
  57              	.LVL4:
 222:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 223:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* store result in destination buffer. */
 224:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     *pDst++ = (real * real) + (imag * imag);
  58              		.loc 1 224 0
  59 0012 06F10408 		add	r8, r6, #4
  60              	.LVL5:
  61 0016 0846     		mov	r0, r1
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 6


  62 0018 FFF7FEFF 		bl	__aeabi_fmul
  63              	.LVL6:
  64 001c 8146     		mov	r9, r0
  65 001e 3846     		mov	r0, r7
  66 0020 3946     		mov	r1, r7
  67 0022 FFF7FEFF 		bl	__aeabi_fmul
  68              	.LVL7:
  69 0026 0146     		mov	r1, r0
  70 0028 4846     		mov	r0, r9
  71 002a FFF7FEFF 		bl	__aeabi_fadd
  72              	.LVL8:
  73 002e 3060     		str	r0, [r6]	@ float
 225:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 226:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     /* Decrement loop counter */
 227:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****     blkCnt--;
  74              		.loc 1 227 0
  75 0030 013D     		subs	r5, r5, #1
  76              	.LVL9:
 224:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  77              		.loc 1 224 0
  78 0032 4646     		mov	r6, r8
 221:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
  79              		.loc 1 221 0
  80 0034 2046     		mov	r0, r4
  81              	.LVL10:
  82              	.L2:
 216:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   {
  83              		.loc 1 216 0
  84 0036 002D     		cmp	r5, #0
  85 0038 E7D1     		bne	.L3
 228:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c ****   }
 229:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** 
 230:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mag_squared_f32.c **** }
  86              		.loc 1 230 0
  87 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
  88              		.cfi_endproc
  89              	.LFE84:
  90              		.size	arm_cmplx_mag_squared_f32, .-arm_cmplx_mag_squared_f32
  91 003e 00BF     		.text
  92              	.Letext0:
  93              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
  94              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
  95              		.file 4 ".\\DSP\\Include/arm_math_types.h"
  96              		.file 5 ".\\Core\\Include/cmsis_gcc.h"
  97              		.section	.debug_info,"",%progbits
  98              	.Ldebug_info0:
  99 0000 D5010000 		.4byte	0x1d5
 100 0004 0400     		.2byte	0x4
 101 0006 00000000 		.4byte	.Ldebug_abbrev0
 102 000a 04       		.byte	0x4
 103 000b 01       		.uleb128 0x1
 104 000c B1010000 		.4byte	.LASF31
 105 0010 01       		.byte	0x1
 106 0011 13000000 		.4byte	.LASF32
 107 0015 32010000 		.4byte	.LASF33
 108 0019 00000000 		.4byte	.Ldebug_ranges0+0
 109 001d 00000000 		.4byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 7


 110 0021 00000000 		.4byte	.Ldebug_line0
 111 0025 02       		.uleb128 0x2
 112 0026 01       		.byte	0x1
 113 0027 06       		.byte	0x6
 114 0028 7D020000 		.4byte	.LASF0
 115 002c 02       		.uleb128 0x2
 116 002d 01       		.byte	0x1
 117 002e 08       		.byte	0x8
 118 002f 7A000000 		.4byte	.LASF1
 119 0033 02       		.uleb128 0x2
 120 0034 02       		.byte	0x2
 121 0035 05       		.byte	0x5
 122 0036 8D010000 		.4byte	.LASF2
 123 003a 02       		.uleb128 0x2
 124 003b 02       		.byte	0x2
 125 003c 07       		.byte	0x7
 126 003d B4000000 		.4byte	.LASF3
 127 0041 02       		.uleb128 0x2
 128 0042 04       		.byte	0x4
 129 0043 05       		.byte	0x5
 130 0044 53020000 		.4byte	.LASF4
 131 0048 03       		.uleb128 0x3
 132 0049 DD000000 		.4byte	.LASF9
 133 004d 02       		.byte	0x2
 134 004e 41       		.byte	0x41
 135 004f 53000000 		.4byte	0x53
 136 0053 02       		.uleb128 0x2
 137 0054 04       		.byte	0x4
 138 0055 07       		.byte	0x7
 139 0056 A2000000 		.4byte	.LASF5
 140 005a 02       		.uleb128 0x2
 141 005b 08       		.byte	0x8
 142 005c 05       		.byte	0x5
 143 005d 1F010000 		.4byte	.LASF6
 144 0061 02       		.uleb128 0x2
 145 0062 08       		.byte	0x8
 146 0063 07       		.byte	0x7
 147 0064 FF000000 		.4byte	.LASF7
 148 0068 04       		.uleb128 0x4
 149 0069 04       		.byte	0x4
 150 006a 05       		.byte	0x5
 151 006b 696E7400 		.ascii	"int\000"
 152 006f 02       		.uleb128 0x2
 153 0070 04       		.byte	0x4
 154 0071 07       		.byte	0x7
 155 0072 ED000000 		.4byte	.LASF8
 156 0076 03       		.uleb128 0x3
 157 0077 4A020000 		.4byte	.LASF10
 158 007b 03       		.byte	0x3
 159 007c 2D       		.byte	0x2d
 160 007d 48000000 		.4byte	0x48
 161 0081 02       		.uleb128 0x2
 162 0082 04       		.byte	0x4
 163 0083 07       		.byte	0x7
 164 0084 16010000 		.4byte	.LASF11
 165 0088 02       		.uleb128 0x2
 166 0089 01       		.byte	0x1
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 8


 167 008a 08       		.byte	0x8
 168 008b 2D010000 		.4byte	.LASF12
 169 008f 02       		.uleb128 0x2
 170 0090 08       		.byte	0x8
 171 0091 04       		.byte	0x4
 172 0092 CC000000 		.4byte	.LASF13
 173 0096 02       		.uleb128 0x2
 174 0097 04       		.byte	0x4
 175 0098 04       		.byte	0x4
 176 0099 6F000000 		.4byte	.LASF14
 177 009d 02       		.uleb128 0x2
 178 009e 08       		.byte	0x8
 179 009f 04       		.byte	0x4
 180 00a0 5C020000 		.4byte	.LASF15
 181 00a4 05       		.uleb128 0x5
 182 00a5 D3000000 		.4byte	.LASF16
 183 00a9 04       		.byte	0x4
 184 00aa 2F01     		.2byte	0x12f
 185 00ac 96000000 		.4byte	0x96
 186 00b0 06       		.uleb128 0x6
 187 00b1 97010000 		.4byte	.LASF34
 188 00b5 01       		.byte	0x1
 189 00b6 7A       		.byte	0x7a
 190 00b7 00000000 		.4byte	.LFB84
 191 00bb 3E000000 		.4byte	.LFE84-.LFB84
 192 00bf 01       		.uleb128 0x1
 193 00c0 9C       		.byte	0x9c
 194 00c1 20010000 		.4byte	0x120
 195 00c5 07       		.uleb128 0x7
 196 00c6 89020000 		.4byte	.LASF17
 197 00ca 01       		.byte	0x1
 198 00cb 7B       		.byte	0x7b
 199 00cc 20010000 		.4byte	0x120
 200 00d0 00000000 		.4byte	.LLST0
 201 00d4 07       		.uleb128 0x7
 202 00d5 C7000000 		.4byte	.LASF18
 203 00d9 01       		.byte	0x1
 204 00da 7C       		.byte	0x7c
 205 00db 2B010000 		.4byte	0x12b
 206 00df 36000000 		.4byte	.LLST1
 207 00e3 07       		.uleb128 0x7
 208 00e4 8E020000 		.4byte	.LASF19
 209 00e8 01       		.byte	0x1
 210 00e9 7D       		.byte	0x7d
 211 00ea 76000000 		.4byte	0x76
 212 00ee 6A000000 		.4byte	.LLST2
 213 00f2 08       		.uleb128 0x8
 214 00f3 88000000 		.4byte	.LASF20
 215 00f7 01       		.byte	0x1
 216 00f8 7F       		.byte	0x7f
 217 00f9 76000000 		.4byte	0x76
 218 00fd 8B000000 		.4byte	.LLST3
 219 0101 08       		.uleb128 0x8
 220 0102 FA000000 		.4byte	.LASF21
 221 0106 01       		.byte	0x1
 222 0107 80       		.byte	0x80
 223 0108 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 9


 224 010c A9000000 		.4byte	.LLST4
 225 0110 08       		.uleb128 0x8
 226 0111 E8000000 		.4byte	.LASF22
 227 0115 01       		.byte	0x1
 228 0116 80       		.byte	0x80
 229 0117 A4000000 		.4byte	0xa4
 230 011b BC000000 		.4byte	.LLST5
 231 011f 00       		.byte	0
 232 0120 09       		.uleb128 0x9
 233 0121 04       		.byte	0x4
 234 0122 26010000 		.4byte	0x126
 235 0126 0A       		.uleb128 0xa
 236 0127 A4000000 		.4byte	0xa4
 237 012b 09       		.uleb128 0x9
 238 012c 04       		.byte	0x4
 239 012d A4000000 		.4byte	0xa4
 240 0131 03       		.uleb128 0x3
 241 0132 51000000 		.4byte	.LASF23
 242 0136 05       		.byte	0x5
 243 0137 8B       		.byte	0x8b
 244 0138 AF010000 		.4byte	0x1af
 245 013c 09       		.uleb128 0x9
 246 013d 04       		.byte	0x4
 247 013e 42010000 		.4byte	0x142
 248 0142 0A       		.uleb128 0xa
 249 0143 76000000 		.4byte	0x76
 250 0147 09       		.uleb128 0x9
 251 0148 04       		.byte	0x4
 252 0149 76000000 		.4byte	0x76
 253 014d 0B       		.uleb128 0xb
 254 014e 99020000 		.4byte	.LASF24
 255 0152 05       		.byte	0x5
 256 0153 92       		.byte	0x92
 257 0154 58010000 		.4byte	0x158
 258 0158 0A       		.uleb128 0xa
 259 0159 31010000 		.4byte	0x131
 260 015d 0B       		.uleb128 0xb
 261 015e 8F000000 		.4byte	.LASF25
 262 0162 05       		.byte	0x5
 263 0163 93       		.byte	0x93
 264 0164 58010000 		.4byte	0x158
 265 0168 03       		.uleb128 0x3
 266 0169 60000000 		.4byte	.LASF26
 267 016d 05       		.byte	0x5
 268 016e 90       		.byte	0x90
 269 016f 8E010000 		.4byte	0x18e
 270 0173 0B       		.uleb128 0xb
 271 0174 68020000 		.4byte	.LASF27
 272 0178 05       		.byte	0x5
 273 0179 94       		.byte	0x94
 274 017a 7E010000 		.4byte	0x17e
 275 017e 0A       		.uleb128 0xa
 276 017f 68010000 		.4byte	0x168
 277 0183 0B       		.uleb128 0xb
 278 0184 00000000 		.4byte	.LASF28
 279 0188 05       		.byte	0x5
 280 0189 95       		.byte	0x95
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 10


 281 018a 7E010000 		.4byte	0x17e
 282 018e 0C       		.uleb128 0xc
 283 018f 08       		.byte	0x8
 284 0190 05       		.byte	0x5
 285 0191 8D       		.byte	0x8d
 286 0192 AF010000 		.4byte	0x1af
 287 0196 0D       		.uleb128 0xd
 288 0197 75000000 		.4byte	.LASF29
 289 019b 05       		.byte	0x5
 290 019c 8E       		.byte	0x8e
 291 019d 47010000 		.4byte	0x147
 292 01a1 00       		.byte	0
 293 01a2 0D       		.uleb128 0xd
 294 01a3 88010000 		.4byte	.LASF30
 295 01a7 05       		.byte	0x5
 296 01a8 8F       		.byte	0x8f
 297 01a9 76000000 		.4byte	0x76
 298 01ad 04       		.byte	0x4
 299 01ae 00       		.byte	0
 300 01af 0E       		.uleb128 0xe
 301 01b0 0C       		.byte	0xc
 302 01b1 05       		.byte	0x5
 303 01b2 87       		.byte	0x87
 304 01b3 0F       		.uleb128 0xf
 305 01b4 73726300 		.ascii	"src\000"
 306 01b8 05       		.byte	0x5
 307 01b9 88       		.byte	0x88
 308 01ba 3C010000 		.4byte	0x13c
 309 01be 00       		.byte	0
 310 01bf 0D       		.uleb128 0xd
 311 01c0 75000000 		.4byte	.LASF29
 312 01c4 05       		.byte	0x5
 313 01c5 89       		.byte	0x89
 314 01c6 47010000 		.4byte	0x147
 315 01ca 04       		.byte	0x4
 316 01cb 0D       		.uleb128 0xd
 317 01cc 88010000 		.4byte	.LASF30
 318 01d0 05       		.byte	0x5
 319 01d1 8A       		.byte	0x8a
 320 01d2 76000000 		.4byte	0x76
 321 01d6 08       		.byte	0x8
 322 01d7 00       		.byte	0
 323 01d8 00       		.byte	0
 324              		.section	.debug_abbrev,"",%progbits
 325              	.Ldebug_abbrev0:
 326 0000 01       		.uleb128 0x1
 327 0001 11       		.uleb128 0x11
 328 0002 01       		.byte	0x1
 329 0003 25       		.uleb128 0x25
 330 0004 0E       		.uleb128 0xe
 331 0005 13       		.uleb128 0x13
 332 0006 0B       		.uleb128 0xb
 333 0007 03       		.uleb128 0x3
 334 0008 0E       		.uleb128 0xe
 335 0009 1B       		.uleb128 0x1b
 336 000a 0E       		.uleb128 0xe
 337 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 11


 338 000c 17       		.uleb128 0x17
 339 000d 11       		.uleb128 0x11
 340 000e 01       		.uleb128 0x1
 341 000f 10       		.uleb128 0x10
 342 0010 17       		.uleb128 0x17
 343 0011 00       		.byte	0
 344 0012 00       		.byte	0
 345 0013 02       		.uleb128 0x2
 346 0014 24       		.uleb128 0x24
 347 0015 00       		.byte	0
 348 0016 0B       		.uleb128 0xb
 349 0017 0B       		.uleb128 0xb
 350 0018 3E       		.uleb128 0x3e
 351 0019 0B       		.uleb128 0xb
 352 001a 03       		.uleb128 0x3
 353 001b 0E       		.uleb128 0xe
 354 001c 00       		.byte	0
 355 001d 00       		.byte	0
 356 001e 03       		.uleb128 0x3
 357 001f 16       		.uleb128 0x16
 358 0020 00       		.byte	0
 359 0021 03       		.uleb128 0x3
 360 0022 0E       		.uleb128 0xe
 361 0023 3A       		.uleb128 0x3a
 362 0024 0B       		.uleb128 0xb
 363 0025 3B       		.uleb128 0x3b
 364 0026 0B       		.uleb128 0xb
 365 0027 49       		.uleb128 0x49
 366 0028 13       		.uleb128 0x13
 367 0029 00       		.byte	0
 368 002a 00       		.byte	0
 369 002b 04       		.uleb128 0x4
 370 002c 24       		.uleb128 0x24
 371 002d 00       		.byte	0
 372 002e 0B       		.uleb128 0xb
 373 002f 0B       		.uleb128 0xb
 374 0030 3E       		.uleb128 0x3e
 375 0031 0B       		.uleb128 0xb
 376 0032 03       		.uleb128 0x3
 377 0033 08       		.uleb128 0x8
 378 0034 00       		.byte	0
 379 0035 00       		.byte	0
 380 0036 05       		.uleb128 0x5
 381 0037 16       		.uleb128 0x16
 382 0038 00       		.byte	0
 383 0039 03       		.uleb128 0x3
 384 003a 0E       		.uleb128 0xe
 385 003b 3A       		.uleb128 0x3a
 386 003c 0B       		.uleb128 0xb
 387 003d 3B       		.uleb128 0x3b
 388 003e 05       		.uleb128 0x5
 389 003f 49       		.uleb128 0x49
 390 0040 13       		.uleb128 0x13
 391 0041 00       		.byte	0
 392 0042 00       		.byte	0
 393 0043 06       		.uleb128 0x6
 394 0044 2E       		.uleb128 0x2e
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 12


 395 0045 01       		.byte	0x1
 396 0046 3F       		.uleb128 0x3f
 397 0047 19       		.uleb128 0x19
 398 0048 03       		.uleb128 0x3
 399 0049 0E       		.uleb128 0xe
 400 004a 3A       		.uleb128 0x3a
 401 004b 0B       		.uleb128 0xb
 402 004c 3B       		.uleb128 0x3b
 403 004d 0B       		.uleb128 0xb
 404 004e 27       		.uleb128 0x27
 405 004f 19       		.uleb128 0x19
 406 0050 11       		.uleb128 0x11
 407 0051 01       		.uleb128 0x1
 408 0052 12       		.uleb128 0x12
 409 0053 06       		.uleb128 0x6
 410 0054 40       		.uleb128 0x40
 411 0055 18       		.uleb128 0x18
 412 0056 9642     		.uleb128 0x2116
 413 0058 19       		.uleb128 0x19
 414 0059 01       		.uleb128 0x1
 415 005a 13       		.uleb128 0x13
 416 005b 00       		.byte	0
 417 005c 00       		.byte	0
 418 005d 07       		.uleb128 0x7
 419 005e 05       		.uleb128 0x5
 420 005f 00       		.byte	0
 421 0060 03       		.uleb128 0x3
 422 0061 0E       		.uleb128 0xe
 423 0062 3A       		.uleb128 0x3a
 424 0063 0B       		.uleb128 0xb
 425 0064 3B       		.uleb128 0x3b
 426 0065 0B       		.uleb128 0xb
 427 0066 49       		.uleb128 0x49
 428 0067 13       		.uleb128 0x13
 429 0068 02       		.uleb128 0x2
 430 0069 17       		.uleb128 0x17
 431 006a 00       		.byte	0
 432 006b 00       		.byte	0
 433 006c 08       		.uleb128 0x8
 434 006d 34       		.uleb128 0x34
 435 006e 00       		.byte	0
 436 006f 03       		.uleb128 0x3
 437 0070 0E       		.uleb128 0xe
 438 0071 3A       		.uleb128 0x3a
 439 0072 0B       		.uleb128 0xb
 440 0073 3B       		.uleb128 0x3b
 441 0074 0B       		.uleb128 0xb
 442 0075 49       		.uleb128 0x49
 443 0076 13       		.uleb128 0x13
 444 0077 02       		.uleb128 0x2
 445 0078 17       		.uleb128 0x17
 446 0079 00       		.byte	0
 447 007a 00       		.byte	0
 448 007b 09       		.uleb128 0x9
 449 007c 0F       		.uleb128 0xf
 450 007d 00       		.byte	0
 451 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 13


 452 007f 0B       		.uleb128 0xb
 453 0080 49       		.uleb128 0x49
 454 0081 13       		.uleb128 0x13
 455 0082 00       		.byte	0
 456 0083 00       		.byte	0
 457 0084 0A       		.uleb128 0xa
 458 0085 26       		.uleb128 0x26
 459 0086 00       		.byte	0
 460 0087 49       		.uleb128 0x49
 461 0088 13       		.uleb128 0x13
 462 0089 00       		.byte	0
 463 008a 00       		.byte	0
 464 008b 0B       		.uleb128 0xb
 465 008c 34       		.uleb128 0x34
 466 008d 00       		.byte	0
 467 008e 03       		.uleb128 0x3
 468 008f 0E       		.uleb128 0xe
 469 0090 3A       		.uleb128 0x3a
 470 0091 0B       		.uleb128 0xb
 471 0092 3B       		.uleb128 0x3b
 472 0093 0B       		.uleb128 0xb
 473 0094 49       		.uleb128 0x49
 474 0095 13       		.uleb128 0x13
 475 0096 3F       		.uleb128 0x3f
 476 0097 19       		.uleb128 0x19
 477 0098 3C       		.uleb128 0x3c
 478 0099 19       		.uleb128 0x19
 479 009a 00       		.byte	0
 480 009b 00       		.byte	0
 481 009c 0C       		.uleb128 0xc
 482 009d 13       		.uleb128 0x13
 483 009e 01       		.byte	0x1
 484 009f 0B       		.uleb128 0xb
 485 00a0 0B       		.uleb128 0xb
 486 00a1 3A       		.uleb128 0x3a
 487 00a2 0B       		.uleb128 0xb
 488 00a3 3B       		.uleb128 0x3b
 489 00a4 0B       		.uleb128 0xb
 490 00a5 01       		.uleb128 0x1
 491 00a6 13       		.uleb128 0x13
 492 00a7 00       		.byte	0
 493 00a8 00       		.byte	0
 494 00a9 0D       		.uleb128 0xd
 495 00aa 0D       		.uleb128 0xd
 496 00ab 00       		.byte	0
 497 00ac 03       		.uleb128 0x3
 498 00ad 0E       		.uleb128 0xe
 499 00ae 3A       		.uleb128 0x3a
 500 00af 0B       		.uleb128 0xb
 501 00b0 3B       		.uleb128 0x3b
 502 00b1 0B       		.uleb128 0xb
 503 00b2 49       		.uleb128 0x49
 504 00b3 13       		.uleb128 0x13
 505 00b4 38       		.uleb128 0x38
 506 00b5 0B       		.uleb128 0xb
 507 00b6 00       		.byte	0
 508 00b7 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 14


 509 00b8 0E       		.uleb128 0xe
 510 00b9 13       		.uleb128 0x13
 511 00ba 01       		.byte	0x1
 512 00bb 0B       		.uleb128 0xb
 513 00bc 0B       		.uleb128 0xb
 514 00bd 3A       		.uleb128 0x3a
 515 00be 0B       		.uleb128 0xb
 516 00bf 3B       		.uleb128 0x3b
 517 00c0 0B       		.uleb128 0xb
 518 00c1 00       		.byte	0
 519 00c2 00       		.byte	0
 520 00c3 0F       		.uleb128 0xf
 521 00c4 0D       		.uleb128 0xd
 522 00c5 00       		.byte	0
 523 00c6 03       		.uleb128 0x3
 524 00c7 08       		.uleb128 0x8
 525 00c8 3A       		.uleb128 0x3a
 526 00c9 0B       		.uleb128 0xb
 527 00ca 3B       		.uleb128 0x3b
 528 00cb 0B       		.uleb128 0xb
 529 00cc 49       		.uleb128 0x49
 530 00cd 13       		.uleb128 0x13
 531 00ce 38       		.uleb128 0x38
 532 00cf 0B       		.uleb128 0xb
 533 00d0 00       		.byte	0
 534 00d1 00       		.byte	0
 535 00d2 00       		.byte	0
 536              		.section	.debug_loc,"",%progbits
 537              	.Ldebug_loc0:
 538              	.LLST0:
 539 0000 00000000 		.4byte	.LVL0
 540 0004 0A000000 		.4byte	.LVL2
 541 0008 0100     		.2byte	0x1
 542 000a 50       		.byte	0x50
 543 000b 0A000000 		.4byte	.LVL2
 544 000f 10000000 		.4byte	.LVL3
 545 0013 0300     		.2byte	0x3
 546 0015 70       		.byte	0x70
 547 0016 04       		.sleb128 4
 548 0017 9F       		.byte	0x9f
 549 0018 10000000 		.4byte	.LVL3
 550 001c 36000000 		.4byte	.LVL10
 551 0020 0100     		.2byte	0x1
 552 0022 54       		.byte	0x54
 553 0023 36000000 		.4byte	.LVL10
 554 0027 3E000000 		.4byte	.LFE84
 555 002b 0100     		.2byte	0x1
 556 002d 50       		.byte	0x50
 557 002e 00000000 		.4byte	0
 558 0032 00000000 		.4byte	0
 559              	.LLST1:
 560 0036 00000000 		.4byte	.LVL0
 561 003a 0A000000 		.4byte	.LVL2
 562 003e 0100     		.2byte	0x1
 563 0040 51       		.byte	0x51
 564 0041 0A000000 		.4byte	.LVL2
 565 0045 16000000 		.4byte	.LVL5
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 15


 566 0049 0100     		.2byte	0x1
 567 004b 56       		.byte	0x56
 568 004c 16000000 		.4byte	.LVL5
 569 0050 36000000 		.4byte	.LVL10
 570 0054 0100     		.2byte	0x1
 571 0056 58       		.byte	0x58
 572 0057 36000000 		.4byte	.LVL10
 573 005b 3E000000 		.4byte	.LFE84
 574 005f 0100     		.2byte	0x1
 575 0061 56       		.byte	0x56
 576 0062 00000000 		.4byte	0
 577 0066 00000000 		.4byte	0
 578              	.LLST2:
 579 006a 00000000 		.4byte	.LVL0
 580 006e 0A000000 		.4byte	.LVL2
 581 0072 0100     		.2byte	0x1
 582 0074 52       		.byte	0x52
 583 0075 0A000000 		.4byte	.LVL2
 584 0079 3E000000 		.4byte	.LFE84
 585 007d 0400     		.2byte	0x4
 586 007f F3       		.byte	0xf3
 587 0080 01       		.uleb128 0x1
 588 0081 52       		.byte	0x52
 589 0082 9F       		.byte	0x9f
 590 0083 00000000 		.4byte	0
 591 0087 00000000 		.4byte	0
 592              	.LLST3:
 593 008b 08000000 		.4byte	.LVL1
 594 008f 0A000000 		.4byte	.LVL2
 595 0093 0100     		.2byte	0x1
 596 0095 52       		.byte	0x52
 597 0096 0A000000 		.4byte	.LVL2
 598 009a 3E000000 		.4byte	.LFE84
 599 009e 0100     		.2byte	0x1
 600 00a0 55       		.byte	0x55
 601 00a1 00000000 		.4byte	0
 602 00a5 00000000 		.4byte	0
 603              	.LLST4:
 604 00a9 10000000 		.4byte	.LVL3
 605 00ad 1B000000 		.4byte	.LVL6-1
 606 00b1 0100     		.2byte	0x1
 607 00b3 51       		.byte	0x51
 608 00b4 00000000 		.4byte	0
 609 00b8 00000000 		.4byte	0
 610              	.LLST5:
 611 00bc 12000000 		.4byte	.LVL4
 612 00c0 36000000 		.4byte	.LVL10
 613 00c4 0100     		.2byte	0x1
 614 00c6 57       		.byte	0x57
 615 00c7 00000000 		.4byte	0
 616 00cb 00000000 		.4byte	0
 617              		.section	.debug_aranges,"",%progbits
 618 0000 1C000000 		.4byte	0x1c
 619 0004 0200     		.2byte	0x2
 620 0006 00000000 		.4byte	.Ldebug_info0
 621 000a 04       		.byte	0x4
 622 000b 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 16


 623 000c 0000     		.2byte	0
 624 000e 0000     		.2byte	0
 625 0010 00000000 		.4byte	.LFB84
 626 0014 3E000000 		.4byte	.LFE84-.LFB84
 627 0018 00000000 		.4byte	0
 628 001c 00000000 		.4byte	0
 629              		.section	.debug_ranges,"",%progbits
 630              	.Ldebug_ranges0:
 631 0000 00000000 		.4byte	.LFB84
 632 0004 3E000000 		.4byte	.LFE84
 633 0008 00000000 		.4byte	0
 634 000c 00000000 		.4byte	0
 635              		.section	.debug_line,"",%progbits
 636              	.Ldebug_line0:
 637 0000 B0010000 		.section	.debug_str,"MS",%progbits,1
 637      02008C01 
 637      00000201 
 637      FB0E0D00 
 637      01010101 
 638              	.LASF28:
 639 0000 5F5F7A65 		.ascii	"__zero_table_end__\000"
 639      726F5F74 
 639      61626C65 
 639      5F656E64 
 639      5F5F00
 640              	.LASF32:
 641 0013 2E5C4453 		.ascii	".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_mag"
 641      505C536F 
 641      75726365 
 641      5C436F6D 
 641      706C6578 
 642 0042 5F737175 		.ascii	"_squared_f32.c\000"
 642      61726564 
 642      5F663332 
 642      2E6300
 643              	.LASF23:
 644 0051 5F5F636F 		.ascii	"__copy_table_t\000"
 644      70795F74 
 644      61626C65 
 644      5F7400
 645              	.LASF26:
 646 0060 5F5F7A65 		.ascii	"__zero_table_t\000"
 646      726F5F74 
 646      61626C65 
 646      5F7400
 647              	.LASF14:
 648 006f 666C6F61 		.ascii	"float\000"
 648      7400
 649              	.LASF29:
 650 0075 64657374 		.ascii	"dest\000"
 650      00
 651              	.LASF1:
 652 007a 756E7369 		.ascii	"unsigned char\000"
 652      676E6564 
 652      20636861 
 652      7200
 653              	.LASF20:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 17


 654 0088 626C6B43 		.ascii	"blkCnt\000"
 654      6E7400
 655              	.LASF25:
 656 008f 5F5F636F 		.ascii	"__copy_table_end__\000"
 656      70795F74 
 656      61626C65 
 656      5F656E64 
 656      5F5F00
 657              	.LASF5:
 658 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 658      20756E73 
 658      69676E65 
 658      6420696E 
 658      7400
 659              	.LASF3:
 660 00b4 73686F72 		.ascii	"short unsigned int\000"
 660      7420756E 
 660      7369676E 
 660      65642069 
 660      6E7400
 661              	.LASF18:
 662 00c7 70447374 		.ascii	"pDst\000"
 662      00
 663              	.LASF13:
 664 00cc 646F7562 		.ascii	"double\000"
 664      6C6500
 665              	.LASF16:
 666 00d3 666C6F61 		.ascii	"float32_t\000"
 666      7433325F 
 666      7400
 667              	.LASF9:
 668 00dd 5F5F7569 		.ascii	"__uint32_t\000"
 668      6E743332 
 668      5F7400
 669              	.LASF22:
 670 00e8 696D6167 		.ascii	"imag\000"
 670      00
 671              	.LASF8:
 672 00ed 756E7369 		.ascii	"unsigned int\000"
 672      676E6564 
 672      20696E74 
 672      00
 673              	.LASF21:
 674 00fa 7265616C 		.ascii	"real\000"
 674      00
 675              	.LASF7:
 676 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 676      206C6F6E 
 676      6720756E 
 676      7369676E 
 676      65642069 
 677              	.LASF11:
 678 0116 73697A65 		.ascii	"sizetype\000"
 678      74797065 
 678      00
 679              	.LASF6:
 680 011f 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 18


 680      206C6F6E 
 680      6720696E 
 680      7400
 681              	.LASF12:
 682 012d 63686172 		.ascii	"char\000"
 682      00
 683              	.LASF33:
 684 0132 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 684      77617265 
 684      2D686F73 
 684      745C5368 
 684      61726564 
 685 0160 6561746F 		.ascii	"eator\\FinalProject\\SoundDetection.cydsn\000"
 685      725C4669 
 685      6E616C50 
 685      726F6A65 
 685      63745C53 
 686              	.LASF30:
 687 0188 776C656E 		.ascii	"wlen\000"
 687      00
 688              	.LASF2:
 689 018d 73686F72 		.ascii	"short int\000"
 689      7420696E 
 689      7400
 690              	.LASF34:
 691 0197 61726D5F 		.ascii	"arm_cmplx_mag_squared_f32\000"
 691      636D706C 
 691      785F6D61 
 691      675F7371 
 691      75617265 
 692              	.LASF31:
 693 01b1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 693      4320342E 
 693      392E3320 
 693      32303135 
 693      30333033 
 694 01e4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 694      20726576 
 694      6973696F 
 694      6E203232 
 694      31323230 
 695 0217 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 695      74643D67 
 695      6E753939 
 695      202D6666 
 695      756E6374 
 696              	.LASF10:
 697 024a 75696E74 		.ascii	"uint32_t\000"
 697      33325F74 
 697      00
 698              	.LASF4:
 699 0253 6C6F6E67 		.ascii	"long int\000"
 699      20696E74 
 699      00
 700              	.LASF15:
 701 025c 6C6F6E67 		.ascii	"long double\000"
 701      20646F75 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccrI4b6d.s 			page 19


 701      626C6500 
 702              	.LASF27:
 703 0268 5F5F7A65 		.ascii	"__zero_table_start__\000"
 703      726F5F74 
 703      61626C65 
 703      5F737461 
 703      72745F5F 
 704              	.LASF0:
 705 027d 7369676E 		.ascii	"signed char\000"
 705      65642063 
 705      68617200 
 706              	.LASF17:
 707 0289 70537263 		.ascii	"pSrc\000"
 707      00
 708              	.LASF19:
 709 028e 6E756D53 		.ascii	"numSamples\000"
 709      616D706C 
 709      657300
 710              	.LASF24:
 711 0299 5F5F636F 		.ascii	"__copy_table_start__\000"
 711      70795F74 
 711      61626C65 
 711      5F737461 
 711      72745F5F 
 712              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
