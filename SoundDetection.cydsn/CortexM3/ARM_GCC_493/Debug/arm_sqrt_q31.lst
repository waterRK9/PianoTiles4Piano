ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_sqrt_q31.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.arm_sqrt_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_sqrt_q31
  21              		.thumb
  22              		.thumb_func
  23              		.type	arm_sqrt_q31, %function
  24              	arm_sqrt_q31:
  25              	.LFB84:
  26              		.file 1 ".\\DSP\\Source\\FastMathFunctions\\arm_sqrt_q31.c"
   1:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** /* ----------------------------------------------------------------------
   2:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Project:      CMSIS DSP Library
   3:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Title:        arm_sqrt_q31.c
   4:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Description:  Q31 square root function
   5:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
   6:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * $Date:        23 April 2021
   7:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * $Revision:    V1.9.0
   8:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
   9:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * -------------------------------------------------------------------- */
  11:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** /*
  12:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
  14:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
  16:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * not use this file except in compliance with the License.
  18:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * You may obtain a copy of the License at
  19:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
  20:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  *
  22:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * See the License for the specific language governing permissions and
  26:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  * limitations under the License.
  27:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  */
  28:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  29:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** #include "dsp/fast_math_functions.h"
  30:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** #include "arm_common_tables.h"
  31:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 2


  32:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** /**
  33:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @ingroup groupFastMath
  34:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  */
  35:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  36:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** /**
  37:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @addtogroup SQRT
  38:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @{
  39:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  */
  40:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  41:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** /**
  42:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @brief         Q31 square root function.
  43:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @param[in]     in    input value.  The range of the input value is [0 +1) or 0x00000000 to 0x7FFF
  44:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @param[out]    pOut  points to square root of input value
  45:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   @return        execution status
  46:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
  47:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
  48:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  */
  49:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** #define Q28QUARTER 0x20000000 
  50:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  51:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** arm_status arm_sqrt_q31(
  52:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   q31_t in,
  53:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   q31_t * pOut)
  54:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** {
  27              		.loc 1 54 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8E46     		mov	lr, r1
  44              	.LVL1:
  55:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   q31_t number, var1, signBits1 ,temp;
  56:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****  
  57:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   number = in;
  58:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  59:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   /* If the input is a positive number then compute the signBits. */
  60:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   if (number > 0)
  45              		.loc 1 60 0
  46 0006 0028     		cmp	r0, #0
  47 0008 40F39F80 		ble	.L2
  48              	.LVL2:
  49              	.LBB4:
  50              	.LBB5:
  51              		.file 2 ".\\Core\\Include/cmsis_gcc.h"
   1:.\Core\Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.\Core\Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.\Core\Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 3


   4:.\Core\Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:.\Core\Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:.\Core\Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.\Core\Include/cmsis_gcc.h **** /*
   8:.\Core\Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:.\Core\Include/cmsis_gcc.h ****  *
  10:.\Core\Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.\Core\Include/cmsis_gcc.h ****  *
  12:.\Core\Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.\Core\Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.\Core\Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.\Core\Include/cmsis_gcc.h ****  *
  16:.\Core\Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.\Core\Include/cmsis_gcc.h ****  *
  18:.\Core\Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.\Core\Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.\Core\Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.\Core\Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.\Core\Include/cmsis_gcc.h ****  * limitations under the License.
  23:.\Core\Include/cmsis_gcc.h ****  */
  24:.\Core\Include/cmsis_gcc.h **** 
  25:.\Core\Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.\Core\Include/cmsis_gcc.h **** 
  28:.\Core\Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.\Core\Include/cmsis_gcc.h **** 
  34:.\Core\Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.\Core\Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.\Core\Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.\Core\Include/cmsis_gcc.h **** #endif
  38:.\Core\Include/cmsis_gcc.h **** 
  39:.\Core\Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.\Core\Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.\Core\Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.\Core\Include/cmsis_gcc.h **** #endif
  43:.\Core\Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.\Core\Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.\Core\Include/cmsis_gcc.h **** #endif
  46:.\Core\Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.\Core\Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.\Core\Include/cmsis_gcc.h **** #endif
  49:.\Core\Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:.\Core\Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.\Core\Include/cmsis_gcc.h **** #endif
  52:.\Core\Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.\Core\Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.\Core\Include/cmsis_gcc.h **** #endif
  55:.\Core\Include/cmsis_gcc.h **** #ifndef   __USED
  56:.\Core\Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.\Core\Include/cmsis_gcc.h **** #endif
  58:.\Core\Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.\Core\Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.\Core\Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 4


  61:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.\Core\Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.\Core\Include/cmsis_gcc.h **** #endif
  64:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.\Core\Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.\Core\Include/cmsis_gcc.h **** #endif
  67:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.\Core\Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.\Core\Include/cmsis_gcc.h **** #endif
  70:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.\Core\Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:.\Core\Include/cmsis_gcc.h **** #endif
  78:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.\Core\Include/cmsis_gcc.h **** #endif
  86:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.\Core\Include/cmsis_gcc.h **** #endif
  94:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.\Core\Include/cmsis_gcc.h **** #endif
 102:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.\Core\Include/cmsis_gcc.h **** #endif
 110:.\Core\Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.\Core\Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.\Core\Include/cmsis_gcc.h **** #endif
 113:.\Core\Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.\Core\Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.\Core\Include/cmsis_gcc.h **** #endif
 116:.\Core\Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.\Core\Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 5


 118:.\Core\Include/cmsis_gcc.h **** #endif
 119:.\Core\Include/cmsis_gcc.h **** 
 120:.\Core\Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.\Core\Include/cmsis_gcc.h **** 
 122:.\Core\Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.\Core\Include/cmsis_gcc.h **** 
 124:.\Core\Include/cmsis_gcc.h **** /**
 125:.\Core\Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.\Core\Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.\Core\Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.\Core\Include/cmsis_gcc.h ****            in the used linker script.
 129:.\Core\Include/cmsis_gcc.h **** 
 130:.\Core\Include/cmsis_gcc.h ****  */
 131:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.\Core\Include/cmsis_gcc.h **** {
 133:.\Core\Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:.\Core\Include/cmsis_gcc.h **** 
 135:.\Core\Include/cmsis_gcc.h ****   typedef struct {
 136:.\Core\Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.\Core\Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.\Core\Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.\Core\Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.\Core\Include/cmsis_gcc.h **** 
 141:.\Core\Include/cmsis_gcc.h ****   typedef struct {
 142:.\Core\Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.\Core\Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.\Core\Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.\Core\Include/cmsis_gcc.h **** 
 146:.\Core\Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.\Core\Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.\Core\Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.\Core\Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.\Core\Include/cmsis_gcc.h **** 
 151:.\Core\Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.\Core\Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.\Core\Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.\Core\Include/cmsis_gcc.h ****     }
 155:.\Core\Include/cmsis_gcc.h ****   }
 156:.\Core\Include/cmsis_gcc.h **** 
 157:.\Core\Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.\Core\Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.\Core\Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.\Core\Include/cmsis_gcc.h ****     }
 161:.\Core\Include/cmsis_gcc.h ****   }
 162:.\Core\Include/cmsis_gcc.h **** 
 163:.\Core\Include/cmsis_gcc.h ****   _start();
 164:.\Core\Include/cmsis_gcc.h **** }
 165:.\Core\Include/cmsis_gcc.h **** 
 166:.\Core\Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.\Core\Include/cmsis_gcc.h **** #endif
 168:.\Core\Include/cmsis_gcc.h **** 
 169:.\Core\Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.\Core\Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.\Core\Include/cmsis_gcc.h **** #endif
 172:.\Core\Include/cmsis_gcc.h **** 
 173:.\Core\Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.\Core\Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 6


 175:.\Core\Include/cmsis_gcc.h **** #endif
 176:.\Core\Include/cmsis_gcc.h **** 
 177:.\Core\Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.\Core\Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.\Core\Include/cmsis_gcc.h **** #endif
 180:.\Core\Include/cmsis_gcc.h **** 
 181:.\Core\Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.\Core\Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:.\Core\Include/cmsis_gcc.h **** #endif
 184:.\Core\Include/cmsis_gcc.h **** 
 185:.\Core\Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:.\Core\Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:.\Core\Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:.\Core\Include/cmsis_gcc.h **** #endif
 189:.\Core\Include/cmsis_gcc.h **** 
 190:.\Core\Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:.\Core\Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:.\Core\Include/cmsis_gcc.h **** #endif
 193:.\Core\Include/cmsis_gcc.h **** 
 194:.\Core\Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:.\Core\Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:.\Core\Include/cmsis_gcc.h **** #endif
 197:.\Core\Include/cmsis_gcc.h **** 
 198:.\Core\Include/cmsis_gcc.h **** 
 199:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:.\Core\Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:.\Core\Include/cmsis_gcc.h **** }
 202:.\Core\Include/cmsis_gcc.h **** #endif
 203:.\Core\Include/cmsis_gcc.h **** 
 204:.\Core\Include/cmsis_gcc.h **** 
 205:.\Core\Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:.\Core\Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:.\Core\Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:.\Core\Include/cmsis_gcc.h ****   @{
 209:.\Core\Include/cmsis_gcc.h **** */
 210:.\Core\Include/cmsis_gcc.h **** 
 211:.\Core\Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:.\Core\Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:.\Core\Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:.\Core\Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:.\Core\Include/cmsis_gcc.h **** #else
 219:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:.\Core\Include/cmsis_gcc.h **** #endif
 223:.\Core\Include/cmsis_gcc.h **** 
 224:.\Core\Include/cmsis_gcc.h **** /**
 225:.\Core\Include/cmsis_gcc.h ****   \brief   No Operation
 226:.\Core\Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:.\Core\Include/cmsis_gcc.h ****  */
 228:.\Core\Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:.\Core\Include/cmsis_gcc.h **** 
 230:.\Core\Include/cmsis_gcc.h **** /**
 231:.\Core\Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 7


 232:.\Core\Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:.\Core\Include/cmsis_gcc.h ****  */
 234:.\Core\Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:.\Core\Include/cmsis_gcc.h **** 
 236:.\Core\Include/cmsis_gcc.h **** 
 237:.\Core\Include/cmsis_gcc.h **** /**
 238:.\Core\Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:.\Core\Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:.\Core\Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:.\Core\Include/cmsis_gcc.h ****  */
 242:.\Core\Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:.\Core\Include/cmsis_gcc.h **** 
 244:.\Core\Include/cmsis_gcc.h **** 
 245:.\Core\Include/cmsis_gcc.h **** /**
 246:.\Core\Include/cmsis_gcc.h ****   \brief   Send Event
 247:.\Core\Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:.\Core\Include/cmsis_gcc.h ****  */
 249:.\Core\Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:.\Core\Include/cmsis_gcc.h **** 
 251:.\Core\Include/cmsis_gcc.h **** 
 252:.\Core\Include/cmsis_gcc.h **** /**
 253:.\Core\Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:.\Core\Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:.\Core\Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:.\Core\Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:.\Core\Include/cmsis_gcc.h ****  */
 258:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:.\Core\Include/cmsis_gcc.h **** {
 260:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:.\Core\Include/cmsis_gcc.h **** }
 262:.\Core\Include/cmsis_gcc.h **** 
 263:.\Core\Include/cmsis_gcc.h **** 
 264:.\Core\Include/cmsis_gcc.h **** /**
 265:.\Core\Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:.\Core\Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:.\Core\Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:.\Core\Include/cmsis_gcc.h ****  */
 269:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:.\Core\Include/cmsis_gcc.h **** {
 271:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:.\Core\Include/cmsis_gcc.h **** }
 273:.\Core\Include/cmsis_gcc.h **** 
 274:.\Core\Include/cmsis_gcc.h **** 
 275:.\Core\Include/cmsis_gcc.h **** /**
 276:.\Core\Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:.\Core\Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:.\Core\Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:.\Core\Include/cmsis_gcc.h ****  */
 280:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:.\Core\Include/cmsis_gcc.h **** {
 282:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:.\Core\Include/cmsis_gcc.h **** }
 284:.\Core\Include/cmsis_gcc.h **** 
 285:.\Core\Include/cmsis_gcc.h **** 
 286:.\Core\Include/cmsis_gcc.h **** /**
 287:.\Core\Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:.\Core\Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 8


 289:.\Core\Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:.\Core\Include/cmsis_gcc.h ****   \return               Reversed value
 291:.\Core\Include/cmsis_gcc.h ****  */
 292:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:.\Core\Include/cmsis_gcc.h **** {
 294:.\Core\Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:.\Core\Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:.\Core\Include/cmsis_gcc.h **** #else
 297:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 298:.\Core\Include/cmsis_gcc.h **** 
 299:.\Core\Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:.\Core\Include/cmsis_gcc.h ****   return result;
 301:.\Core\Include/cmsis_gcc.h **** #endif
 302:.\Core\Include/cmsis_gcc.h **** }
 303:.\Core\Include/cmsis_gcc.h **** 
 304:.\Core\Include/cmsis_gcc.h **** 
 305:.\Core\Include/cmsis_gcc.h **** /**
 306:.\Core\Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:.\Core\Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:.\Core\Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:.\Core\Include/cmsis_gcc.h ****   \return               Reversed value
 310:.\Core\Include/cmsis_gcc.h ****  */
 311:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:.\Core\Include/cmsis_gcc.h **** {
 313:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 314:.\Core\Include/cmsis_gcc.h **** 
 315:.\Core\Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:.\Core\Include/cmsis_gcc.h ****   return result;
 317:.\Core\Include/cmsis_gcc.h **** }
 318:.\Core\Include/cmsis_gcc.h **** 
 319:.\Core\Include/cmsis_gcc.h **** 
 320:.\Core\Include/cmsis_gcc.h **** /**
 321:.\Core\Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:.\Core\Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:.\Core\Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:.\Core\Include/cmsis_gcc.h ****   \return               Reversed value
 325:.\Core\Include/cmsis_gcc.h ****  */
 326:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:.\Core\Include/cmsis_gcc.h **** {
 328:.\Core\Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:.\Core\Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:.\Core\Include/cmsis_gcc.h **** #else
 331:.\Core\Include/cmsis_gcc.h ****   int16_t result;
 332:.\Core\Include/cmsis_gcc.h **** 
 333:.\Core\Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:.\Core\Include/cmsis_gcc.h ****   return result;
 335:.\Core\Include/cmsis_gcc.h **** #endif
 336:.\Core\Include/cmsis_gcc.h **** }
 337:.\Core\Include/cmsis_gcc.h **** 
 338:.\Core\Include/cmsis_gcc.h **** 
 339:.\Core\Include/cmsis_gcc.h **** /**
 340:.\Core\Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:.\Core\Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:.\Core\Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:.\Core\Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:.\Core\Include/cmsis_gcc.h ****   \return               Rotated value
 345:.\Core\Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 9


 346:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:.\Core\Include/cmsis_gcc.h **** {
 348:.\Core\Include/cmsis_gcc.h ****   op2 %= 32U;
 349:.\Core\Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:.\Core\Include/cmsis_gcc.h ****   {
 351:.\Core\Include/cmsis_gcc.h ****     return op1;
 352:.\Core\Include/cmsis_gcc.h ****   }
 353:.\Core\Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:.\Core\Include/cmsis_gcc.h **** }
 355:.\Core\Include/cmsis_gcc.h **** 
 356:.\Core\Include/cmsis_gcc.h **** 
 357:.\Core\Include/cmsis_gcc.h **** /**
 358:.\Core\Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:.\Core\Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:.\Core\Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:.\Core\Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:.\Core\Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:.\Core\Include/cmsis_gcc.h ****  */
 364:.\Core\Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:.\Core\Include/cmsis_gcc.h **** 
 366:.\Core\Include/cmsis_gcc.h **** 
 367:.\Core\Include/cmsis_gcc.h **** /**
 368:.\Core\Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:.\Core\Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:.\Core\Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:.\Core\Include/cmsis_gcc.h ****   \return               Reversed value
 372:.\Core\Include/cmsis_gcc.h ****  */
 373:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:.\Core\Include/cmsis_gcc.h **** {
 375:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 376:.\Core\Include/cmsis_gcc.h **** 
 377:.\Core\Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:.\Core\Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:.\Core\Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:.\Core\Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:.\Core\Include/cmsis_gcc.h **** #else
 382:.\Core\Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:.\Core\Include/cmsis_gcc.h **** 
 384:.\Core\Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:.\Core\Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:.\Core\Include/cmsis_gcc.h ****   {
 387:.\Core\Include/cmsis_gcc.h ****     result <<= 1U;
 388:.\Core\Include/cmsis_gcc.h ****     result |= value & 1U;
 389:.\Core\Include/cmsis_gcc.h ****     s--;
 390:.\Core\Include/cmsis_gcc.h ****   }
 391:.\Core\Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:.\Core\Include/cmsis_gcc.h **** #endif
 393:.\Core\Include/cmsis_gcc.h ****   return result;
 394:.\Core\Include/cmsis_gcc.h **** }
 395:.\Core\Include/cmsis_gcc.h **** 
 396:.\Core\Include/cmsis_gcc.h **** 
 397:.\Core\Include/cmsis_gcc.h **** /**
 398:.\Core\Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:.\Core\Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:.\Core\Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:.\Core\Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:.\Core\Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 10


 403:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:.\Core\Include/cmsis_gcc.h **** {
 405:.\Core\Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:.\Core\Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:.\Core\Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:.\Core\Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:.\Core\Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:.\Core\Include/cmsis_gcc.h ****      is non-zero".
 411:.\Core\Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:.\Core\Include/cmsis_gcc.h ****      single CLZ instruction.
 413:.\Core\Include/cmsis_gcc.h ****    */
 414:.\Core\Include/cmsis_gcc.h ****   if (value == 0U)
  52              		.loc 2 414 0
  53 000c 10B1     		cbz	r0, .L9
 415:.\Core\Include/cmsis_gcc.h ****   {
 416:.\Core\Include/cmsis_gcc.h ****     return 32U;
 417:.\Core\Include/cmsis_gcc.h ****   }
 418:.\Core\Include/cmsis_gcc.h ****   return __builtin_clz(value);
  54              		.loc 2 418 0
  55 000e B0FA80F3 		clz	r3, r0
  56 0012 00E0     		b	.L3
  57              	.L9:
 416:.\Core\Include/cmsis_gcc.h ****   }
  58              		.loc 2 416 0
  59 0014 2023     		movs	r3, #32
  60              	.L3:
  61              	.LBE5:
  62              	.LBE4:
  61:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   {
  62:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     signBits1 = __CLZ(number) - 1;
  63              		.loc 1 62 0
  64 0016 9C46     		mov	ip, r3
  65 0018 5E1E     		subs	r6, r3, #1
  66              	.LVL3:
  63:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  64:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* Shift by the number of signBits1 */
  65:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     if ((signBits1 % 2) == 0)
  67              		.loc 1 65 0
  68 001a 16F00107 		ands	r7, r6, #1
  69 001e 01D1     		bne	.L4
  66:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     {
  67:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****       number = number << signBits1;
  70              		.loc 1 67 0
  71 0020 B040     		lsls	r0, r0, r6
  72              	.LVL4:
  73 0022 01E0     		b	.L5
  74              	.LVL5:
  75              	.L4:
  68:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     }
  69:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     else
  70:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     {
  71:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****       number = number << (signBits1 - 1);
  76              		.loc 1 71 0
  77 0024 023B     		subs	r3, r3, #2
  78 0026 9840     		lsls	r0, r0, r3
  79              	.LVL6:
  80              	.L5:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 11


  72:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     }
  73:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  74:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* Start value for 1/sqrt(x) for the Newton iteration */
  75:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     var1 = sqrt_initial_lut_q31[(number>> 26) - (Q28QUARTER >> 26)];
  81              		.loc 1 75 0
  82 0028 8316     		asrs	r3, r0, #26
  83 002a 083B     		subs	r3, r3, #8
  84 002c 4A4A     		ldr	r2, .L11
  85 002e 52F82310 		ldr	r1, [r2, r3, lsl #2]
  86              	.LVL7:
  76:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  77:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* 0.5 var1 * (3 - number * var1 * var1) */
  78:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  79:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* 1st iteration */
  80:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  81:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) var1 * var1) >> 28;
  87              		.loc 1 81 0
  88 0032 4FEAE179 		asr	r9, r1, #31
  89 0036 01FB09F3 		mul	r3, r1, r9
  90 003a A1FB0145 		umull	r4, r5, r1, r1
  91 003e 05EB4305 		add	r5, r5, r3, lsl #1
  92 0042 220F     		lsrs	r2, r4, #28
  93 0044 42EA0512 		orr	r2, r2, r5, lsl #4
  94              	.LVL8:
  82:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) number * temp) >> 31;
  95              		.loc 1 82 0
  96 0048 C517     		asrs	r5, r0, #31
  97 004a 4FEAE27B 		asr	fp, r2, #31
  98 004e 00FB0BF4 		mul	r4, r0, fp
  99 0052 02FB0544 		mla	r4, r2, r5, r4
 100 0056 A0FB0223 		umull	r2, r3, r0, r2
 101              	.LVL9:
 102 005a 2344     		add	r3, r3, r4
 103 005c D20F     		lsrs	r2, r2, #31
 104 005e 42EA4302 		orr	r2, r2, r3, lsl #1
 105              	.LVL10:
  83:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = 0x30000000 - temp; 
 106              		.loc 1 83 0
 107 0062 C2F14054 		rsb	r4, r2, #805306368
 108              	.LVL11:
  84:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q63_t) var1 * temp) >> 29;
 109              		.loc 1 84 0
 110 0066 E317     		asrs	r3, r4, #31
 111 0068 01FB03F8 		mul	r8, r1, r3
 112 006c 04FB0988 		mla	r8, r4, r9, r8
 113 0070 A1FB0423 		umull	r2, r3, r1, r4
 114 0074 4344     		add	r3, r3, r8
 115 0076 510F     		lsrs	r1, r2, #29
 116              	.LVL12:
 117 0078 41EAC301 		orr	r1, r1, r3, lsl #3
 118              	.LVL13:
  85:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  86:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     
  87:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* 2nd iteration */
  88:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) var1 * var1) >> 28;
 119              		.loc 1 88 0
 120 007c 4FEAE179 		asr	r9, r1, #31
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 12


 121 0080 01FB09F3 		mul	r3, r1, r9
 122 0084 A1FB01AB 		umull	r10, fp, r1, r1
 123 0088 0BEB430B 		add	fp, fp, r3, lsl #1
 124 008c 4FEA1A72 		lsr	r2, r10, #28
 125 0090 42EA0B12 		orr	r2, r2, fp, lsl #4
 126              	.LVL14:
  89:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) number * temp) >> 31;
 127              		.loc 1 89 0
 128 0094 4FEAE27B 		asr	fp, r2, #31
 129 0098 00FB0BF4 		mul	r4, r0, fp
 130 009c 02FB0544 		mla	r4, r2, r5, r4
 131 00a0 A0FB0223 		umull	r2, r3, r0, r2
 132              	.LVL15:
 133 00a4 2344     		add	r3, r3, r4
 134 00a6 D20F     		lsrs	r2, r2, #31
 135 00a8 42EA4302 		orr	r2, r2, r3, lsl #1
 136              	.LVL16:
  90:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = 0x30000000 - temp; 
 137              		.loc 1 90 0
 138 00ac C2F14054 		rsb	r4, r2, #805306368
 139              	.LVL17:
  91:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q63_t) var1 * temp) >> 29;
 140              		.loc 1 91 0
 141 00b0 E317     		asrs	r3, r4, #31
 142 00b2 01FB03F8 		mul	r8, r1, r3
 143 00b6 04FB0988 		mla	r8, r4, r9, r8
 144 00ba A1FB0423 		umull	r2, r3, r1, r4
 145 00be 4344     		add	r3, r3, r8
 146 00c0 510F     		lsrs	r1, r2, #29
 147              	.LVL18:
 148 00c2 41EAC301 		orr	r1, r1, r3, lsl #3
 149              	.LVL19:
  92:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  93:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* 3nd iteration */
  94:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) var1 * var1) >> 28;
 150              		.loc 1 94 0
 151 00c6 4FEAE179 		asr	r9, r1, #31
 152 00ca 01FB09F3 		mul	r3, r1, r9
 153 00ce A1FB01AB 		umull	r10, fp, r1, r1
 154 00d2 0BEB430B 		add	fp, fp, r3, lsl #1
 155 00d6 4FEA1A72 		lsr	r2, r10, #28
 156 00da 42EA0B12 		orr	r2, r2, fp, lsl #4
 157              	.LVL20:
  95:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = ((q63_t) number * temp) >> 31;
 158              		.loc 1 95 0
 159 00de 4FEAE27B 		asr	fp, r2, #31
 160 00e2 00FB0BF4 		mul	r4, r0, fp
 161 00e6 02FB0544 		mla	r4, r2, r5, r4
 162 00ea A0FB0223 		umull	r2, r3, r0, r2
 163              	.LVL21:
 164 00ee 2344     		add	r3, r3, r4
 165 00f0 D20F     		lsrs	r2, r2, #31
 166 00f2 42EA4302 		orr	r2, r2, r3, lsl #1
 167              	.LVL22:
  96:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     temp = 0x30000000 - temp; 
 168              		.loc 1 96 0
 169 00f6 C2F14054 		rsb	r4, r2, #805306368
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 13


 170              	.LVL23:
  97:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q63_t) var1 * temp) >> 29;
 171              		.loc 1 97 0
 172 00fa E317     		asrs	r3, r4, #31
 173 00fc 01FB03F8 		mul	r8, r1, r3
 174 0100 04FB0988 		mla	r8, r4, r9, r8
 175 0104 A1FB0423 		umull	r2, r3, r1, r4
 176 0108 4344     		add	r3, r3, r8
 177 010a 510F     		lsrs	r1, r2, #29
 178              	.LVL24:
 179 010c 41EAC301 		orr	r1, r1, r3, lsl #3
 180              	.LVL25:
  98:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
  99:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* Multiply the inverse square root with the original value */
 100:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     var1 = ((q31_t) (((q63_t) number * var1) >> 28));
 181              		.loc 1 100 0
 182 0110 CB17     		asrs	r3, r1, #31
 183 0112 00FB03F3 		mul	r3, r0, r3
 184 0116 01FB0533 		mla	r3, r1, r5, r3
 185 011a A0FB0101 		umull	r0, r1, r0, r1
 186              	.LVL26:
 187 011e 1944     		add	r1, r1, r3
 188              	.LVL27:
 189 0120 030F     		lsrs	r3, r0, #28
 190 0122 43EA0113 		orr	r3, r3, r1, lsl #4
 191              	.LVL28:
 101:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
 102:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     /* Shift the output down accordingly */
 103:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     if ((signBits1 % 2) == 0)
 192              		.loc 1 103 0
 193 0126 27B9     		cbnz	r7, .L6
 104:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     {
 105:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****       var1 = var1 >> (signBits1 / 2);
 194              		.loc 1 105 0
 195 0128 06EBD676 		add	r6, r6, r6, lsr #31
 196              	.LVL29:
 197 012c 7610     		asrs	r6, r6, #1
 198 012e 3341     		asrs	r3, r3, r6
 199              	.LVL30:
 200 0130 07E0     		b	.L7
 201              	.LVL31:
 202              	.L6:
 106:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     }
 107:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     else
 108:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     {
 109:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****       var1 = var1 >> ((signBits1 - 1) / 2);
 203              		.loc 1 109 0
 204 0132 ACF1020C 		sub	ip, ip, #2
 205 0136 0CEBDC7C 		add	ip, ip, ip, lsr #31
 206 013a 4FEA6C0C 		asr	ip, ip, #1
 207 013e 43FA0CF3 		asr	r3, r3, ip
 208              	.LVL32:
 209              	.L7:
 110:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     }
 111:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     *pOut = var1;
 210              		.loc 1 111 0
 211 0142 CEF80030 		str	r3, [lr]
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 14


 112:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
 113:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_SUCCESS);
 212              		.loc 1 113 0
 213 0146 0020     		movs	r0, #0
 214 0148 02E0     		b	.L8
 215              	.LVL33:
 216              	.L2:
 114:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   }
 115:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   /* If the number is a negative number then store zero as its square root value */
 116:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   else
 117:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   {
 118:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     *pOut = 0;
 217              		.loc 1 118 0
 218 014a 0023     		movs	r3, #0
 219 014c 0B60     		str	r3, [r1]
 119:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** 
 120:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 220              		.loc 1 120 0
 221 014e FF20     		movs	r0, #255
 222              	.LVL34:
 223              	.L8:
 121:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c ****   }
 122:.\DSP\Source\FastMathFunctions/arm_sqrt_q31.c **** }
 224              		.loc 1 122 0
 225 0150 40B2     		sxtb	r0, r0
 226 0152 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 227              	.L12:
 228 0156 00BF     		.align	2
 229              	.L11:
 230 0158 00000000 		.word	sqrt_initial_lut_q31
 231              		.cfi_endproc
 232              	.LFE84:
 233              		.size	arm_sqrt_q31, .-arm_sqrt_q31
 234              		.text
 235              	.Letext0:
 236              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 237              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 238              		.file 5 ".\\DSP\\Include/arm_math_types.h"
 239              		.file 6 ".\\DSP\\Include/arm_common_tables.h"
 240              		.section	.debug_info,"",%progbits
 241              	.Ldebug_info0:
 242 0000 B9020000 		.4byte	0x2b9
 243 0004 0400     		.2byte	0x4
 244 0006 00000000 		.4byte	.Ldebug_abbrev0
 245 000a 04       		.byte	0x4
 246 000b 01       		.uleb128 0x1
 247 000c 73020000 		.4byte	.LASF47
 248 0010 01       		.byte	0x1
 249 0011 4B010000 		.4byte	.LASF48
 250 0015 FD010000 		.4byte	.LASF49
 251 0019 00000000 		.4byte	.Ldebug_ranges0+0
 252 001d 00000000 		.4byte	0
 253 0021 00000000 		.4byte	.Ldebug_line0
 254 0025 02       		.uleb128 0x2
 255 0026 01       		.byte	0x1
 256 0027 06       		.byte	0x6
 257 0028 3F030000 		.4byte	.LASF0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 15


 258 002c 03       		.uleb128 0x3
 259 002d 1B000000 		.4byte	.LASF4
 260 0031 03       		.byte	0x3
 261 0032 1D       		.byte	0x1d
 262 0033 37000000 		.4byte	0x37
 263 0037 02       		.uleb128 0x2
 264 0038 01       		.byte	0x1
 265 0039 08       		.byte	0x8
 266 003a A4000000 		.4byte	.LASF1
 267 003e 02       		.uleb128 0x2
 268 003f 02       		.byte	0x2
 269 0040 05       		.byte	0x5
 270 0041 69020000 		.4byte	.LASF2
 271 0045 02       		.uleb128 0x2
 272 0046 02       		.byte	0x2
 273 0047 07       		.byte	0x7
 274 0048 DC000000 		.4byte	.LASF3
 275 004c 03       		.uleb128 0x3
 276 004d 56000000 		.4byte	.LASF5
 277 0051 03       		.byte	0x3
 278 0052 3F       		.byte	0x3f
 279 0053 57000000 		.4byte	0x57
 280 0057 02       		.uleb128 0x2
 281 0058 04       		.byte	0x4
 282 0059 05       		.byte	0x5
 283 005a 15030000 		.4byte	.LASF6
 284 005e 03       		.uleb128 0x3
 285 005f 16010000 		.4byte	.LASF7
 286 0063 03       		.byte	0x3
 287 0064 41       		.byte	0x41
 288 0065 69000000 		.4byte	0x69
 289 0069 02       		.uleb128 0x2
 290 006a 04       		.byte	0x4
 291 006b 07       		.byte	0x7
 292 006c C5000000 		.4byte	.LASF8
 293 0070 03       		.uleb128 0x3
 294 0071 05010000 		.4byte	.LASF9
 295 0075 03       		.byte	0x3
 296 0076 59       		.byte	0x59
 297 0077 7B000000 		.4byte	0x7b
 298 007b 02       		.uleb128 0x2
 299 007c 08       		.byte	0x8
 300 007d 05       		.byte	0x5
 301 007e DA010000 		.4byte	.LASF10
 302 0082 02       		.uleb128 0x2
 303 0083 08       		.byte	0x8
 304 0084 07       		.byte	0x7
 305 0085 79010000 		.4byte	.LASF11
 306 0089 04       		.uleb128 0x4
 307 008a 04       		.byte	0x4
 308 008b 05       		.byte	0x5
 309 008c 696E7400 		.ascii	"int\000"
 310 0090 02       		.uleb128 0x2
 311 0091 04       		.byte	0x4
 312 0092 07       		.byte	0x7
 313 0093 3E010000 		.4byte	.LASF12
 314 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 16


 315 0098 90010000 		.4byte	.LASF13
 316 009c 04       		.byte	0x4
 317 009d 15       		.byte	0x15
 318 009e 2C000000 		.4byte	0x2c
 319 00a2 03       		.uleb128 0x3
 320 00a3 C4010000 		.4byte	.LASF14
 321 00a7 04       		.byte	0x4
 322 00a8 2C       		.byte	0x2c
 323 00a9 4C000000 		.4byte	0x4c
 324 00ad 03       		.uleb128 0x3
 325 00ae 0C030000 		.4byte	.LASF15
 326 00b2 04       		.byte	0x4
 327 00b3 2D       		.byte	0x2d
 328 00b4 5E000000 		.4byte	0x5e
 329 00b8 03       		.uleb128 0x3
 330 00b9 13000000 		.4byte	.LASF16
 331 00bd 04       		.byte	0x4
 332 00be 38       		.byte	0x38
 333 00bf 70000000 		.4byte	0x70
 334 00c3 02       		.uleb128 0x2
 335 00c4 04       		.byte	0x4
 336 00c5 07       		.byte	0x7
 337 00c6 D1010000 		.4byte	.LASF17
 338 00ca 02       		.uleb128 0x2
 339 00cb 01       		.byte	0x1
 340 00cc 08       		.byte	0x8
 341 00cd E8010000 		.4byte	.LASF18
 342 00d1 02       		.uleb128 0x2
 343 00d2 08       		.byte	0x8
 344 00d3 04       		.byte	0x4
 345 00d4 0F010000 		.4byte	.LASF19
 346 00d8 02       		.uleb128 0x2
 347 00d9 04       		.byte	0x4
 348 00da 04       		.byte	0x4
 349 00db 4A000000 		.4byte	.LASF20
 350 00df 02       		.uleb128 0x2
 351 00e0 08       		.byte	0x8
 352 00e1 04       		.byte	0x4
 353 00e2 1E030000 		.4byte	.LASF21
 354 00e6 05       		.uleb128 0x5
 355 00e7 9E000000 		.4byte	.LASF22
 356 00eb 05       		.byte	0x5
 357 00ec 2401     		.2byte	0x124
 358 00ee A2000000 		.4byte	0xa2
 359 00f2 05       		.uleb128 0x5
 360 00f3 98010000 		.4byte	.LASF23
 361 00f7 05       		.byte	0x5
 362 00f8 2901     		.2byte	0x129
 363 00fa B8000000 		.4byte	0xb8
 364 00fe 06       		.uleb128 0x6
 365 00ff 01       		.byte	0x1
 366 0100 05       		.byte	0x5
 367 0101 5802     		.2byte	0x258
 368 0103 38010000 		.4byte	0x138
 369 0107 07       		.uleb128 0x7
 370 0108 53020000 		.4byte	.LASF24
 371 010c 00       		.sleb128 0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 17


 372 010d 07       		.uleb128 0x7
 373 010e 21010000 		.4byte	.LASF25
 374 0112 7F       		.sleb128 -1
 375 0113 07       		.uleb128 0x7
 376 0114 25000000 		.4byte	.LASF26
 377 0118 7E       		.sleb128 -2
 378 0119 07       		.uleb128 0x7
 379 011a 6F000000 		.4byte	.LASF27
 380 011e 7D       		.sleb128 -3
 381 011f 07       		.uleb128 0x7
 382 0120 ED010000 		.4byte	.LASF28
 383 0124 7C       		.sleb128 -4
 384 0125 07       		.uleb128 0x7
 385 0126 8A030000 		.4byte	.LASF29
 386 012a 7B       		.sleb128 -5
 387 012b 07       		.uleb128 0x7
 388 012c EF000000 		.4byte	.LASF30
 389 0130 7A       		.sleb128 -6
 390 0131 07       		.uleb128 0x7
 391 0132 A5010000 		.4byte	.LASF31
 392 0136 79       		.sleb128 -7
 393 0137 00       		.byte	0
 394 0138 05       		.uleb128 0x5
 395 0139 7F030000 		.4byte	.LASF32
 396 013d 05       		.byte	0x5
 397 013e 6102     		.2byte	0x261
 398 0140 FE000000 		.4byte	0xfe
 399 0144 08       		.uleb128 0x8
 400 0145 86000000 		.4byte	.LASF50
 401 0149 02       		.byte	0x2
 402 014a 9301     		.2byte	0x193
 403 014c 97000000 		.4byte	0x97
 404 0150 03       		.byte	0x3
 405 0151 62010000 		.4byte	0x162
 406 0155 09       		.uleb128 0x9
 407 0156 50000000 		.4byte	.LASF51
 408 015a 02       		.byte	0x2
 409 015b 9301     		.2byte	0x193
 410 015d AD000000 		.4byte	0xad
 411 0161 00       		.byte	0
 412 0162 0A       		.uleb128 0xa
 413 0163 91000000 		.4byte	.LASF52
 414 0167 01       		.byte	0x1
 415 0168 33       		.byte	0x33
 416 0169 38010000 		.4byte	0x138
 417 016d 00000000 		.4byte	.LFB84
 418 0171 5C010000 		.4byte	.LFE84-.LFB84
 419 0175 01       		.uleb128 0x1
 420 0176 9C       		.byte	0x9c
 421 0177 EE010000 		.4byte	0x1ee
 422 017b 0B       		.uleb128 0xb
 423 017c 696E00   		.ascii	"in\000"
 424 017f 01       		.byte	0x1
 425 0180 34       		.byte	0x34
 426 0181 E6000000 		.4byte	0xe6
 427 0185 00000000 		.4byte	.LLST0
 428 0189 0C       		.uleb128 0xc
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 18


 429 018a CC010000 		.4byte	.LASF33
 430 018e 01       		.byte	0x1
 431 018f 35       		.byte	0x35
 432 0190 EE010000 		.4byte	0x1ee
 433 0194 53000000 		.4byte	.LLST1
 434 0198 0D       		.uleb128 0xd
 435 0199 9E010000 		.4byte	.LASF34
 436 019d 01       		.byte	0x1
 437 019e 37       		.byte	0x37
 438 019f E6000000 		.4byte	0xe6
 439 01a3 87000000 		.4byte	.LLST2
 440 01a7 0D       		.uleb128 0xd
 441 01a8 39010000 		.4byte	.LASF35
 442 01ac 01       		.byte	0x1
 443 01ad 37       		.byte	0x37
 444 01ae E6000000 		.4byte	0xe6
 445 01b2 A5000000 		.4byte	.LLST3
 446 01b6 0D       		.uleb128 0xd
 447 01b7 4B030000 		.4byte	.LASF36
 448 01bb 01       		.byte	0x1
 449 01bc 37       		.byte	0x37
 450 01bd E6000000 		.4byte	0xe6
 451 01c1 FD000000 		.4byte	.LLST4
 452 01c5 0D       		.uleb128 0xd
 453 01c6 D7000000 		.4byte	.LASF37
 454 01ca 01       		.byte	0x1
 455 01cb 37       		.byte	0x37
 456 01cc E6000000 		.4byte	0xe6
 457 01d0 28010000 		.4byte	.LLST5
 458 01d4 0E       		.uleb128 0xe
 459 01d5 44010000 		.4byte	0x144
 460 01d9 0C000000 		.4byte	.LBB4
 461 01dd 0A000000 		.4byte	.LBE4-.LBB4
 462 01e1 01       		.byte	0x1
 463 01e2 3E       		.byte	0x3e
 464 01e3 0F       		.uleb128 0xf
 465 01e4 55010000 		.4byte	0x155
 466 01e8 93010000 		.4byte	.LLST6
 467 01ec 00       		.byte	0
 468 01ed 00       		.byte	0
 469 01ee 10       		.uleb128 0x10
 470 01ef 04       		.byte	0x4
 471 01f0 E6000000 		.4byte	0xe6
 472 01f4 03       		.uleb128 0x3
 473 01f5 3B000000 		.4byte	.LASF38
 474 01f9 02       		.byte	0x2
 475 01fa 8B       		.byte	0x8b
 476 01fb 93020000 		.4byte	0x293
 477 01ff 10       		.uleb128 0x10
 478 0200 04       		.byte	0x4
 479 0201 05020000 		.4byte	0x205
 480 0205 11       		.uleb128 0x11
 481 0206 AD000000 		.4byte	0xad
 482 020a 10       		.uleb128 0x10
 483 020b 04       		.byte	0x4
 484 020c AD000000 		.4byte	0xad
 485 0210 12       		.uleb128 0x12
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 19


 486 0211 6A030000 		.4byte	.LASF39
 487 0215 02       		.byte	0x2
 488 0216 92       		.byte	0x92
 489 0217 1B020000 		.4byte	0x21b
 490 021b 11       		.uleb128 0x11
 491 021c F4010000 		.4byte	0x1f4
 492 0220 12       		.uleb128 0x12
 493 0221 B2000000 		.4byte	.LASF40
 494 0225 02       		.byte	0x2
 495 0226 93       		.byte	0x93
 496 0227 1B020000 		.4byte	0x21b
 497 022b 03       		.uleb128 0x3
 498 022c 60000000 		.4byte	.LASF41
 499 0230 02       		.byte	0x2
 500 0231 90       		.byte	0x90
 501 0232 72020000 		.4byte	0x272
 502 0236 12       		.uleb128 0x12
 503 0237 2A030000 		.4byte	.LASF42
 504 023b 02       		.byte	0x2
 505 023c 94       		.byte	0x94
 506 023d 41020000 		.4byte	0x241
 507 0241 11       		.uleb128 0x11
 508 0242 2B020000 		.4byte	0x22b
 509 0246 12       		.uleb128 0x12
 510 0247 00000000 		.4byte	.LASF43
 511 024b 02       		.byte	0x2
 512 024c 95       		.byte	0x95
 513 024d 41020000 		.4byte	0x241
 514 0251 13       		.uleb128 0x13
 515 0252 E6000000 		.4byte	0xe6
 516 0256 61020000 		.4byte	0x261
 517 025a 14       		.uleb128 0x14
 518 025b C3000000 		.4byte	0xc3
 519 025f 1F       		.byte	0x1f
 520 0260 00       		.byte	0
 521 0261 15       		.uleb128 0x15
 522 0262 55030000 		.4byte	.LASF44
 523 0266 06       		.byte	0x6
 524 0267 FE01     		.2byte	0x1fe
 525 0269 6D020000 		.4byte	0x26d
 526 026d 11       		.uleb128 0x11
 527 026e 51020000 		.4byte	0x251
 528 0272 16       		.uleb128 0x16
 529 0273 08       		.byte	0x8
 530 0274 02       		.byte	0x2
 531 0275 8D       		.byte	0x8d
 532 0276 93020000 		.4byte	0x293
 533 027a 17       		.uleb128 0x17
 534 027b 8C000000 		.4byte	.LASF45
 535 027f 02       		.byte	0x2
 536 0280 8E       		.byte	0x8e
 537 0281 0A020000 		.4byte	0x20a
 538 0285 00       		.byte	0
 539 0286 17       		.uleb128 0x17
 540 0287 64020000 		.4byte	.LASF46
 541 028b 02       		.byte	0x2
 542 028c 8F       		.byte	0x8f
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 20


 543 028d AD000000 		.4byte	0xad
 544 0291 04       		.byte	0x4
 545 0292 00       		.byte	0
 546 0293 18       		.uleb128 0x18
 547 0294 0C       		.byte	0xc
 548 0295 02       		.byte	0x2
 549 0296 87       		.byte	0x87
 550 0297 19       		.uleb128 0x19
 551 0298 73726300 		.ascii	"src\000"
 552 029c 02       		.byte	0x2
 553 029d 88       		.byte	0x88
 554 029e FF010000 		.4byte	0x1ff
 555 02a2 00       		.byte	0
 556 02a3 17       		.uleb128 0x17
 557 02a4 8C000000 		.4byte	.LASF45
 558 02a8 02       		.byte	0x2
 559 02a9 89       		.byte	0x89
 560 02aa 0A020000 		.4byte	0x20a
 561 02ae 04       		.byte	0x4
 562 02af 17       		.uleb128 0x17
 563 02b0 64020000 		.4byte	.LASF46
 564 02b4 02       		.byte	0x2
 565 02b5 8A       		.byte	0x8a
 566 02b6 AD000000 		.4byte	0xad
 567 02ba 08       		.byte	0x8
 568 02bb 00       		.byte	0
 569 02bc 00       		.byte	0
 570              		.section	.debug_abbrev,"",%progbits
 571              	.Ldebug_abbrev0:
 572 0000 01       		.uleb128 0x1
 573 0001 11       		.uleb128 0x11
 574 0002 01       		.byte	0x1
 575 0003 25       		.uleb128 0x25
 576 0004 0E       		.uleb128 0xe
 577 0005 13       		.uleb128 0x13
 578 0006 0B       		.uleb128 0xb
 579 0007 03       		.uleb128 0x3
 580 0008 0E       		.uleb128 0xe
 581 0009 1B       		.uleb128 0x1b
 582 000a 0E       		.uleb128 0xe
 583 000b 55       		.uleb128 0x55
 584 000c 17       		.uleb128 0x17
 585 000d 11       		.uleb128 0x11
 586 000e 01       		.uleb128 0x1
 587 000f 10       		.uleb128 0x10
 588 0010 17       		.uleb128 0x17
 589 0011 00       		.byte	0
 590 0012 00       		.byte	0
 591 0013 02       		.uleb128 0x2
 592 0014 24       		.uleb128 0x24
 593 0015 00       		.byte	0
 594 0016 0B       		.uleb128 0xb
 595 0017 0B       		.uleb128 0xb
 596 0018 3E       		.uleb128 0x3e
 597 0019 0B       		.uleb128 0xb
 598 001a 03       		.uleb128 0x3
 599 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 21


 600 001c 00       		.byte	0
 601 001d 00       		.byte	0
 602 001e 03       		.uleb128 0x3
 603 001f 16       		.uleb128 0x16
 604 0020 00       		.byte	0
 605 0021 03       		.uleb128 0x3
 606 0022 0E       		.uleb128 0xe
 607 0023 3A       		.uleb128 0x3a
 608 0024 0B       		.uleb128 0xb
 609 0025 3B       		.uleb128 0x3b
 610 0026 0B       		.uleb128 0xb
 611 0027 49       		.uleb128 0x49
 612 0028 13       		.uleb128 0x13
 613 0029 00       		.byte	0
 614 002a 00       		.byte	0
 615 002b 04       		.uleb128 0x4
 616 002c 24       		.uleb128 0x24
 617 002d 00       		.byte	0
 618 002e 0B       		.uleb128 0xb
 619 002f 0B       		.uleb128 0xb
 620 0030 3E       		.uleb128 0x3e
 621 0031 0B       		.uleb128 0xb
 622 0032 03       		.uleb128 0x3
 623 0033 08       		.uleb128 0x8
 624 0034 00       		.byte	0
 625 0035 00       		.byte	0
 626 0036 05       		.uleb128 0x5
 627 0037 16       		.uleb128 0x16
 628 0038 00       		.byte	0
 629 0039 03       		.uleb128 0x3
 630 003a 0E       		.uleb128 0xe
 631 003b 3A       		.uleb128 0x3a
 632 003c 0B       		.uleb128 0xb
 633 003d 3B       		.uleb128 0x3b
 634 003e 05       		.uleb128 0x5
 635 003f 49       		.uleb128 0x49
 636 0040 13       		.uleb128 0x13
 637 0041 00       		.byte	0
 638 0042 00       		.byte	0
 639 0043 06       		.uleb128 0x6
 640 0044 04       		.uleb128 0x4
 641 0045 01       		.byte	0x1
 642 0046 0B       		.uleb128 0xb
 643 0047 0B       		.uleb128 0xb
 644 0048 3A       		.uleb128 0x3a
 645 0049 0B       		.uleb128 0xb
 646 004a 3B       		.uleb128 0x3b
 647 004b 05       		.uleb128 0x5
 648 004c 01       		.uleb128 0x1
 649 004d 13       		.uleb128 0x13
 650 004e 00       		.byte	0
 651 004f 00       		.byte	0
 652 0050 07       		.uleb128 0x7
 653 0051 28       		.uleb128 0x28
 654 0052 00       		.byte	0
 655 0053 03       		.uleb128 0x3
 656 0054 0E       		.uleb128 0xe
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 22


 657 0055 1C       		.uleb128 0x1c
 658 0056 0D       		.uleb128 0xd
 659 0057 00       		.byte	0
 660 0058 00       		.byte	0
 661 0059 08       		.uleb128 0x8
 662 005a 2E       		.uleb128 0x2e
 663 005b 01       		.byte	0x1
 664 005c 03       		.uleb128 0x3
 665 005d 0E       		.uleb128 0xe
 666 005e 3A       		.uleb128 0x3a
 667 005f 0B       		.uleb128 0xb
 668 0060 3B       		.uleb128 0x3b
 669 0061 05       		.uleb128 0x5
 670 0062 27       		.uleb128 0x27
 671 0063 19       		.uleb128 0x19
 672 0064 49       		.uleb128 0x49
 673 0065 13       		.uleb128 0x13
 674 0066 20       		.uleb128 0x20
 675 0067 0B       		.uleb128 0xb
 676 0068 01       		.uleb128 0x1
 677 0069 13       		.uleb128 0x13
 678 006a 00       		.byte	0
 679 006b 00       		.byte	0
 680 006c 09       		.uleb128 0x9
 681 006d 05       		.uleb128 0x5
 682 006e 00       		.byte	0
 683 006f 03       		.uleb128 0x3
 684 0070 0E       		.uleb128 0xe
 685 0071 3A       		.uleb128 0x3a
 686 0072 0B       		.uleb128 0xb
 687 0073 3B       		.uleb128 0x3b
 688 0074 05       		.uleb128 0x5
 689 0075 49       		.uleb128 0x49
 690 0076 13       		.uleb128 0x13
 691 0077 00       		.byte	0
 692 0078 00       		.byte	0
 693 0079 0A       		.uleb128 0xa
 694 007a 2E       		.uleb128 0x2e
 695 007b 01       		.byte	0x1
 696 007c 3F       		.uleb128 0x3f
 697 007d 19       		.uleb128 0x19
 698 007e 03       		.uleb128 0x3
 699 007f 0E       		.uleb128 0xe
 700 0080 3A       		.uleb128 0x3a
 701 0081 0B       		.uleb128 0xb
 702 0082 3B       		.uleb128 0x3b
 703 0083 0B       		.uleb128 0xb
 704 0084 27       		.uleb128 0x27
 705 0085 19       		.uleb128 0x19
 706 0086 49       		.uleb128 0x49
 707 0087 13       		.uleb128 0x13
 708 0088 11       		.uleb128 0x11
 709 0089 01       		.uleb128 0x1
 710 008a 12       		.uleb128 0x12
 711 008b 06       		.uleb128 0x6
 712 008c 40       		.uleb128 0x40
 713 008d 18       		.uleb128 0x18
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 23


 714 008e 9742     		.uleb128 0x2117
 715 0090 19       		.uleb128 0x19
 716 0091 01       		.uleb128 0x1
 717 0092 13       		.uleb128 0x13
 718 0093 00       		.byte	0
 719 0094 00       		.byte	0
 720 0095 0B       		.uleb128 0xb
 721 0096 05       		.uleb128 0x5
 722 0097 00       		.byte	0
 723 0098 03       		.uleb128 0x3
 724 0099 08       		.uleb128 0x8
 725 009a 3A       		.uleb128 0x3a
 726 009b 0B       		.uleb128 0xb
 727 009c 3B       		.uleb128 0x3b
 728 009d 0B       		.uleb128 0xb
 729 009e 49       		.uleb128 0x49
 730 009f 13       		.uleb128 0x13
 731 00a0 02       		.uleb128 0x2
 732 00a1 17       		.uleb128 0x17
 733 00a2 00       		.byte	0
 734 00a3 00       		.byte	0
 735 00a4 0C       		.uleb128 0xc
 736 00a5 05       		.uleb128 0x5
 737 00a6 00       		.byte	0
 738 00a7 03       		.uleb128 0x3
 739 00a8 0E       		.uleb128 0xe
 740 00a9 3A       		.uleb128 0x3a
 741 00aa 0B       		.uleb128 0xb
 742 00ab 3B       		.uleb128 0x3b
 743 00ac 0B       		.uleb128 0xb
 744 00ad 49       		.uleb128 0x49
 745 00ae 13       		.uleb128 0x13
 746 00af 02       		.uleb128 0x2
 747 00b0 17       		.uleb128 0x17
 748 00b1 00       		.byte	0
 749 00b2 00       		.byte	0
 750 00b3 0D       		.uleb128 0xd
 751 00b4 34       		.uleb128 0x34
 752 00b5 00       		.byte	0
 753 00b6 03       		.uleb128 0x3
 754 00b7 0E       		.uleb128 0xe
 755 00b8 3A       		.uleb128 0x3a
 756 00b9 0B       		.uleb128 0xb
 757 00ba 3B       		.uleb128 0x3b
 758 00bb 0B       		.uleb128 0xb
 759 00bc 49       		.uleb128 0x49
 760 00bd 13       		.uleb128 0x13
 761 00be 02       		.uleb128 0x2
 762 00bf 17       		.uleb128 0x17
 763 00c0 00       		.byte	0
 764 00c1 00       		.byte	0
 765 00c2 0E       		.uleb128 0xe
 766 00c3 1D       		.uleb128 0x1d
 767 00c4 01       		.byte	0x1
 768 00c5 31       		.uleb128 0x31
 769 00c6 13       		.uleb128 0x13
 770 00c7 11       		.uleb128 0x11
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 24


 771 00c8 01       		.uleb128 0x1
 772 00c9 12       		.uleb128 0x12
 773 00ca 06       		.uleb128 0x6
 774 00cb 58       		.uleb128 0x58
 775 00cc 0B       		.uleb128 0xb
 776 00cd 59       		.uleb128 0x59
 777 00ce 0B       		.uleb128 0xb
 778 00cf 00       		.byte	0
 779 00d0 00       		.byte	0
 780 00d1 0F       		.uleb128 0xf
 781 00d2 05       		.uleb128 0x5
 782 00d3 00       		.byte	0
 783 00d4 31       		.uleb128 0x31
 784 00d5 13       		.uleb128 0x13
 785 00d6 02       		.uleb128 0x2
 786 00d7 17       		.uleb128 0x17
 787 00d8 00       		.byte	0
 788 00d9 00       		.byte	0
 789 00da 10       		.uleb128 0x10
 790 00db 0F       		.uleb128 0xf
 791 00dc 00       		.byte	0
 792 00dd 0B       		.uleb128 0xb
 793 00de 0B       		.uleb128 0xb
 794 00df 49       		.uleb128 0x49
 795 00e0 13       		.uleb128 0x13
 796 00e1 00       		.byte	0
 797 00e2 00       		.byte	0
 798 00e3 11       		.uleb128 0x11
 799 00e4 26       		.uleb128 0x26
 800 00e5 00       		.byte	0
 801 00e6 49       		.uleb128 0x49
 802 00e7 13       		.uleb128 0x13
 803 00e8 00       		.byte	0
 804 00e9 00       		.byte	0
 805 00ea 12       		.uleb128 0x12
 806 00eb 34       		.uleb128 0x34
 807 00ec 00       		.byte	0
 808 00ed 03       		.uleb128 0x3
 809 00ee 0E       		.uleb128 0xe
 810 00ef 3A       		.uleb128 0x3a
 811 00f0 0B       		.uleb128 0xb
 812 00f1 3B       		.uleb128 0x3b
 813 00f2 0B       		.uleb128 0xb
 814 00f3 49       		.uleb128 0x49
 815 00f4 13       		.uleb128 0x13
 816 00f5 3F       		.uleb128 0x3f
 817 00f6 19       		.uleb128 0x19
 818 00f7 3C       		.uleb128 0x3c
 819 00f8 19       		.uleb128 0x19
 820 00f9 00       		.byte	0
 821 00fa 00       		.byte	0
 822 00fb 13       		.uleb128 0x13
 823 00fc 01       		.uleb128 0x1
 824 00fd 01       		.byte	0x1
 825 00fe 49       		.uleb128 0x49
 826 00ff 13       		.uleb128 0x13
 827 0100 01       		.uleb128 0x1
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 25


 828 0101 13       		.uleb128 0x13
 829 0102 00       		.byte	0
 830 0103 00       		.byte	0
 831 0104 14       		.uleb128 0x14
 832 0105 21       		.uleb128 0x21
 833 0106 00       		.byte	0
 834 0107 49       		.uleb128 0x49
 835 0108 13       		.uleb128 0x13
 836 0109 2F       		.uleb128 0x2f
 837 010a 0B       		.uleb128 0xb
 838 010b 00       		.byte	0
 839 010c 00       		.byte	0
 840 010d 15       		.uleb128 0x15
 841 010e 34       		.uleb128 0x34
 842 010f 00       		.byte	0
 843 0110 03       		.uleb128 0x3
 844 0111 0E       		.uleb128 0xe
 845 0112 3A       		.uleb128 0x3a
 846 0113 0B       		.uleb128 0xb
 847 0114 3B       		.uleb128 0x3b
 848 0115 05       		.uleb128 0x5
 849 0116 49       		.uleb128 0x49
 850 0117 13       		.uleb128 0x13
 851 0118 3F       		.uleb128 0x3f
 852 0119 19       		.uleb128 0x19
 853 011a 3C       		.uleb128 0x3c
 854 011b 19       		.uleb128 0x19
 855 011c 00       		.byte	0
 856 011d 00       		.byte	0
 857 011e 16       		.uleb128 0x16
 858 011f 13       		.uleb128 0x13
 859 0120 01       		.byte	0x1
 860 0121 0B       		.uleb128 0xb
 861 0122 0B       		.uleb128 0xb
 862 0123 3A       		.uleb128 0x3a
 863 0124 0B       		.uleb128 0xb
 864 0125 3B       		.uleb128 0x3b
 865 0126 0B       		.uleb128 0xb
 866 0127 01       		.uleb128 0x1
 867 0128 13       		.uleb128 0x13
 868 0129 00       		.byte	0
 869 012a 00       		.byte	0
 870 012b 17       		.uleb128 0x17
 871 012c 0D       		.uleb128 0xd
 872 012d 00       		.byte	0
 873 012e 03       		.uleb128 0x3
 874 012f 0E       		.uleb128 0xe
 875 0130 3A       		.uleb128 0x3a
 876 0131 0B       		.uleb128 0xb
 877 0132 3B       		.uleb128 0x3b
 878 0133 0B       		.uleb128 0xb
 879 0134 49       		.uleb128 0x49
 880 0135 13       		.uleb128 0x13
 881 0136 38       		.uleb128 0x38
 882 0137 0B       		.uleb128 0xb
 883 0138 00       		.byte	0
 884 0139 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 26


 885 013a 18       		.uleb128 0x18
 886 013b 13       		.uleb128 0x13
 887 013c 01       		.byte	0x1
 888 013d 0B       		.uleb128 0xb
 889 013e 0B       		.uleb128 0xb
 890 013f 3A       		.uleb128 0x3a
 891 0140 0B       		.uleb128 0xb
 892 0141 3B       		.uleb128 0x3b
 893 0142 0B       		.uleb128 0xb
 894 0143 00       		.byte	0
 895 0144 00       		.byte	0
 896 0145 19       		.uleb128 0x19
 897 0146 0D       		.uleb128 0xd
 898 0147 00       		.byte	0
 899 0148 03       		.uleb128 0x3
 900 0149 08       		.uleb128 0x8
 901 014a 3A       		.uleb128 0x3a
 902 014b 0B       		.uleb128 0xb
 903 014c 3B       		.uleb128 0x3b
 904 014d 0B       		.uleb128 0xb
 905 014e 49       		.uleb128 0x49
 906 014f 13       		.uleb128 0x13
 907 0150 38       		.uleb128 0x38
 908 0151 0B       		.uleb128 0xb
 909 0152 00       		.byte	0
 910 0153 00       		.byte	0
 911 0154 00       		.byte	0
 912              		.section	.debug_loc,"",%progbits
 913              	.Ldebug_loc0:
 914              	.LLST0:
 915 0000 00000000 		.4byte	.LVL0
 916 0004 22000000 		.4byte	.LVL4
 917 0008 0100     		.2byte	0x1
 918 000a 50       		.byte	0x50
 919 000b 22000000 		.4byte	.LVL4
 920 000f 24000000 		.4byte	.LVL5
 921 0013 0400     		.2byte	0x4
 922 0015 F3       		.byte	0xf3
 923 0016 01       		.uleb128 0x1
 924 0017 50       		.byte	0x50
 925 0018 9F       		.byte	0x9f
 926 0019 24000000 		.4byte	.LVL5
 927 001d 28000000 		.4byte	.LVL6
 928 0021 0100     		.2byte	0x1
 929 0023 50       		.byte	0x50
 930 0024 28000000 		.4byte	.LVL6
 931 0028 4A010000 		.4byte	.LVL33
 932 002c 0400     		.2byte	0x4
 933 002e F3       		.byte	0xf3
 934 002f 01       		.uleb128 0x1
 935 0030 50       		.byte	0x50
 936 0031 9F       		.byte	0x9f
 937 0032 4A010000 		.4byte	.LVL33
 938 0036 50010000 		.4byte	.LVL34
 939 003a 0100     		.2byte	0x1
 940 003c 50       		.byte	0x50
 941 003d 50010000 		.4byte	.LVL34
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 27


 942 0041 5C010000 		.4byte	.LFE84
 943 0045 0400     		.2byte	0x4
 944 0047 F3       		.byte	0xf3
 945 0048 01       		.uleb128 0x1
 946 0049 50       		.byte	0x50
 947 004a 9F       		.byte	0x9f
 948 004b 00000000 		.4byte	0
 949 004f 00000000 		.4byte	0
 950              	.LLST1:
 951 0053 00000000 		.4byte	.LVL0
 952 0057 32000000 		.4byte	.LVL7
 953 005b 0100     		.2byte	0x1
 954 005d 51       		.byte	0x51
 955 005e 32000000 		.4byte	.LVL7
 956 0062 4A010000 		.4byte	.LVL33
 957 0066 0100     		.2byte	0x1
 958 0068 5E       		.byte	0x5e
 959 0069 4A010000 		.4byte	.LVL33
 960 006d 50010000 		.4byte	.LVL34
 961 0071 0100     		.2byte	0x1
 962 0073 51       		.byte	0x51
 963 0074 50010000 		.4byte	.LVL34
 964 0078 5C010000 		.4byte	.LFE84
 965 007c 0100     		.2byte	0x1
 966 007e 5E       		.byte	0x5e
 967 007f 00000000 		.4byte	0
 968 0083 00000000 		.4byte	0
 969              	.LLST2:
 970 0087 06000000 		.4byte	.LVL1
 971 008b 1E010000 		.4byte	.LVL26
 972 008f 0100     		.2byte	0x1
 973 0091 50       		.byte	0x50
 974 0092 4A010000 		.4byte	.LVL33
 975 0096 50010000 		.4byte	.LVL34
 976 009a 0100     		.2byte	0x1
 977 009c 50       		.byte	0x50
 978 009d 00000000 		.4byte	0
 979 00a1 00000000 		.4byte	0
 980              	.LLST3:
 981 00a5 32000000 		.4byte	.LVL7
 982 00a9 78000000 		.4byte	.LVL12
 983 00ad 0100     		.2byte	0x1
 984 00af 51       		.byte	0x51
 985 00b0 7C000000 		.4byte	.LVL13
 986 00b4 C2000000 		.4byte	.LVL18
 987 00b8 0100     		.2byte	0x1
 988 00ba 51       		.byte	0x51
 989 00bb C6000000 		.4byte	.LVL19
 990 00bf 0C010000 		.4byte	.LVL24
 991 00c3 0100     		.2byte	0x1
 992 00c5 51       		.byte	0x51
 993 00c6 10010000 		.4byte	.LVL25
 994 00ca 20010000 		.4byte	.LVL27
 995 00ce 0100     		.2byte	0x1
 996 00d0 51       		.byte	0x51
 997 00d1 20010000 		.4byte	.LVL27
 998 00d5 26010000 		.4byte	.LVL28
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 28


 999 00d9 0F00     		.2byte	0xf
 1000 00db 74       		.byte	0x74
 1001 00dc 00       		.sleb128 0
 1002 00dd 4F       		.byte	0x4f
 1003 00de 26       		.byte	0x26
 1004 00df 78       		.byte	0x78
 1005 00e0 00       		.sleb128 0
 1006 00e1 22       		.byte	0x22
 1007 00e2 33       		.byte	0x33
 1008 00e3 24       		.byte	0x24
 1009 00e4 72       		.byte	0x72
 1010 00e5 00       		.sleb128 0
 1011 00e6 4D       		.byte	0x4d
 1012 00e7 25       		.byte	0x25
 1013 00e8 21       		.byte	0x21
 1014 00e9 9F       		.byte	0x9f
 1015 00ea 26010000 		.4byte	.LVL28
 1016 00ee 4A010000 		.4byte	.LVL33
 1017 00f2 0100     		.2byte	0x1
 1018 00f4 53       		.byte	0x53
 1019 00f5 00000000 		.4byte	0
 1020 00f9 00000000 		.4byte	0
 1021              	.LLST4:
 1022 00fd 1A000000 		.4byte	.LVL3
 1023 0101 2C010000 		.4byte	.LVL29
 1024 0105 0100     		.2byte	0x1
 1025 0107 56       		.byte	0x56
 1026 0108 2C010000 		.4byte	.LVL29
 1027 010c 32010000 		.4byte	.LVL31
 1028 0110 0300     		.2byte	0x3
 1029 0112 7C       		.byte	0x7c
 1030 0113 7F       		.sleb128 -1
 1031 0114 9F       		.byte	0x9f
 1032 0115 32010000 		.4byte	.LVL31
 1033 0119 42010000 		.4byte	.LVL32
 1034 011d 0100     		.2byte	0x1
 1035 011f 56       		.byte	0x56
 1036 0120 00000000 		.4byte	0
 1037 0124 00000000 		.4byte	0
 1038              	.LLST5:
 1039 0128 48000000 		.4byte	.LVL8
 1040 012c 5A000000 		.4byte	.LVL9
 1041 0130 0100     		.2byte	0x1
 1042 0132 52       		.byte	0x52
 1043 0133 62000000 		.4byte	.LVL10
 1044 0137 66000000 		.4byte	.LVL11
 1045 013b 0100     		.2byte	0x1
 1046 013d 52       		.byte	0x52
 1047 013e 66000000 		.4byte	.LVL11
 1048 0142 94000000 		.4byte	.LVL14
 1049 0146 0100     		.2byte	0x1
 1050 0148 54       		.byte	0x54
 1051 0149 94000000 		.4byte	.LVL14
 1052 014d A4000000 		.4byte	.LVL15
 1053 0151 0100     		.2byte	0x1
 1054 0153 52       		.byte	0x52
 1055 0154 AC000000 		.4byte	.LVL16
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 29


 1056 0158 B0000000 		.4byte	.LVL17
 1057 015c 0100     		.2byte	0x1
 1058 015e 52       		.byte	0x52
 1059 015f B0000000 		.4byte	.LVL17
 1060 0163 DE000000 		.4byte	.LVL20
 1061 0167 0100     		.2byte	0x1
 1062 0169 54       		.byte	0x54
 1063 016a DE000000 		.4byte	.LVL20
 1064 016e EE000000 		.4byte	.LVL21
 1065 0172 0100     		.2byte	0x1
 1066 0174 52       		.byte	0x52
 1067 0175 F6000000 		.4byte	.LVL22
 1068 0179 FA000000 		.4byte	.LVL23
 1069 017d 0100     		.2byte	0x1
 1070 017f 52       		.byte	0x52
 1071 0180 FA000000 		.4byte	.LVL23
 1072 0184 4A010000 		.4byte	.LVL33
 1073 0188 0100     		.2byte	0x1
 1074 018a 54       		.byte	0x54
 1075 018b 00000000 		.4byte	0
 1076 018f 00000000 		.4byte	0
 1077              	.LLST6:
 1078 0193 0C000000 		.4byte	.LVL2
 1079 0197 22000000 		.4byte	.LVL4
 1080 019b 0100     		.2byte	0x1
 1081 019d 50       		.byte	0x50
 1082 019e 22000000 		.4byte	.LVL4
 1083 01a2 24000000 		.4byte	.LVL5
 1084 01a6 0400     		.2byte	0x4
 1085 01a8 F3       		.byte	0xf3
 1086 01a9 01       		.uleb128 0x1
 1087 01aa 50       		.byte	0x50
 1088 01ab 9F       		.byte	0x9f
 1089 01ac 24000000 		.4byte	.LVL5
 1090 01b0 28000000 		.4byte	.LVL6
 1091 01b4 0100     		.2byte	0x1
 1092 01b6 50       		.byte	0x50
 1093 01b7 28000000 		.4byte	.LVL6
 1094 01bb 4A010000 		.4byte	.LVL33
 1095 01bf 0400     		.2byte	0x4
 1096 01c1 F3       		.byte	0xf3
 1097 01c2 01       		.uleb128 0x1
 1098 01c3 50       		.byte	0x50
 1099 01c4 9F       		.byte	0x9f
 1100 01c5 00000000 		.4byte	0
 1101 01c9 00000000 		.4byte	0
 1102              		.section	.debug_aranges,"",%progbits
 1103 0000 1C000000 		.4byte	0x1c
 1104 0004 0200     		.2byte	0x2
 1105 0006 00000000 		.4byte	.Ldebug_info0
 1106 000a 04       		.byte	0x4
 1107 000b 00       		.byte	0
 1108 000c 0000     		.2byte	0
 1109 000e 0000     		.2byte	0
 1110 0010 00000000 		.4byte	.LFB84
 1111 0014 5C010000 		.4byte	.LFE84-.LFB84
 1112 0018 00000000 		.4byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 30


 1113 001c 00000000 		.4byte	0
 1114              		.section	.debug_ranges,"",%progbits
 1115              	.Ldebug_ranges0:
 1116 0000 00000000 		.4byte	.LFB84
 1117 0004 5C010000 		.4byte	.LFE84
 1118 0008 00000000 		.4byte	0
 1119 000c 00000000 		.4byte	0
 1120              		.section	.debug_line,"",%progbits
 1121              	.Ldebug_line0:
 1122 0000 D0010000 		.section	.debug_str,"MS",%progbits,1
 1122      02009301 
 1122      00000201 
 1122      FB0E0D00 
 1122      01010101 
 1123              	.LASF43:
 1124 0000 5F5F7A65 		.ascii	"__zero_table_end__\000"
 1124      726F5F74 
 1124      61626C65 
 1124      5F656E64 
 1124      5F5F00
 1125              	.LASF16:
 1126 0013 696E7436 		.ascii	"int64_t\000"
 1126      345F7400 
 1127              	.LASF4:
 1128 001b 5F5F7569 		.ascii	"__uint8_t\000"
 1128      6E74385F 
 1128      7400
 1129              	.LASF26:
 1130 0025 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 1130      4D415448 
 1130      5F4C454E 
 1130      4754485F 
 1130      4552524F 
 1131              	.LASF38:
 1132 003b 5F5F636F 		.ascii	"__copy_table_t\000"
 1132      70795F74 
 1132      61626C65 
 1132      5F7400
 1133              	.LASF20:
 1134 004a 666C6F61 		.ascii	"float\000"
 1134      7400
 1135              	.LASF51:
 1136 0050 76616C75 		.ascii	"value\000"
 1136      6500
 1137              	.LASF5:
 1138 0056 5F5F696E 		.ascii	"__int32_t\000"
 1138      7433325F 
 1138      7400
 1139              	.LASF41:
 1140 0060 5F5F7A65 		.ascii	"__zero_table_t\000"
 1140      726F5F74 
 1140      61626C65 
 1140      5F7400
 1141              	.LASF27:
 1142 006f 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
 1142      4D415448 
 1142      5F53495A 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 31


 1142      455F4D49 
 1142      534D4154 
 1143              	.LASF50:
 1144 0086 5F5F434C 		.ascii	"__CLZ\000"
 1144      5A00
 1145              	.LASF45:
 1146 008c 64657374 		.ascii	"dest\000"
 1146      00
 1147              	.LASF52:
 1148 0091 61726D5F 		.ascii	"arm_sqrt_q31\000"
 1148      73717274 
 1148      5F713331 
 1148      00
 1149              	.LASF22:
 1150 009e 7133315F 		.ascii	"q31_t\000"
 1150      7400
 1151              	.LASF1:
 1152 00a4 756E7369 		.ascii	"unsigned char\000"
 1152      676E6564 
 1152      20636861 
 1152      7200
 1153              	.LASF40:
 1154 00b2 5F5F636F 		.ascii	"__copy_table_end__\000"
 1154      70795F74 
 1154      61626C65 
 1154      5F656E64 
 1154      5F5F00
 1155              	.LASF8:
 1156 00c5 6C6F6E67 		.ascii	"long unsigned int\000"
 1156      20756E73 
 1156      69676E65 
 1156      6420696E 
 1156      7400
 1157              	.LASF37:
 1158 00d7 74656D70 		.ascii	"temp\000"
 1158      00
 1159              	.LASF3:
 1160 00dc 73686F72 		.ascii	"short unsigned int\000"
 1160      7420756E 
 1160      7369676E 
 1160      65642069 
 1160      6E7400
 1161              	.LASF30:
 1162 00ef 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 1162      4D415448 
 1162      5F544553 
 1162      545F4641 
 1162      494C5552 
 1163              	.LASF9:
 1164 0105 5F5F696E 		.ascii	"__int64_t\000"
 1164      7436345F 
 1164      7400
 1165              	.LASF19:
 1166 010f 646F7562 		.ascii	"double\000"
 1166      6C6500
 1167              	.LASF7:
 1168 0116 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 32


 1168      6E743332 
 1168      5F7400
 1169              	.LASF25:
 1170 0121 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
 1170      4D415448 
 1170      5F415247 
 1170      554D454E 
 1170      545F4552 
 1171              	.LASF35:
 1172 0139 76617231 		.ascii	"var1\000"
 1172      00
 1173              	.LASF12:
 1174 013e 756E7369 		.ascii	"unsigned int\000"
 1174      676E6564 
 1174      20696E74 
 1174      00
 1175              	.LASF48:
 1176 014b 2E5C4453 		.ascii	".\\DSP\\Source\\FastMathFunctions\\arm_sqrt_q31.c\000"
 1176      505C536F 
 1176      75726365 
 1176      5C466173 
 1176      744D6174 
 1177              	.LASF11:
 1178 0179 6C6F6E67 		.ascii	"long long unsigned int\000"
 1178      206C6F6E 
 1178      6720756E 
 1178      7369676E 
 1178      65642069 
 1179              	.LASF13:
 1180 0190 75696E74 		.ascii	"uint8_t\000"
 1180      385F7400 
 1181              	.LASF23:
 1182 0198 7136335F 		.ascii	"q63_t\000"
 1182      7400
 1183              	.LASF34:
 1184 019e 6E756D62 		.ascii	"number\000"
 1184      657200
 1185              	.LASF31:
 1186 01a5 41524D5F 		.ascii	"ARM_MATH_DECOMPOSITION_FAILURE\000"
 1186      4D415448 
 1186      5F444543 
 1186      4F4D504F 
 1186      53495449 
 1187              	.LASF14:
 1188 01c4 696E7433 		.ascii	"int32_t\000"
 1188      325F7400 
 1189              	.LASF33:
 1190 01cc 704F7574 		.ascii	"pOut\000"
 1190      00
 1191              	.LASF17:
 1192 01d1 73697A65 		.ascii	"sizetype\000"
 1192      74797065 
 1192      00
 1193              	.LASF10:
 1194 01da 6C6F6E67 		.ascii	"long long int\000"
 1194      206C6F6E 
 1194      6720696E 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 33


 1194      7400
 1195              	.LASF18:
 1196 01e8 63686172 		.ascii	"char\000"
 1196      00
 1197              	.LASF28:
 1198 01ed 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 1198      4D415448 
 1198      5F4E414E 
 1198      494E4600 
 1199              	.LASF49:
 1200 01fd 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 1200      77617265 
 1200      2D686F73 
 1200      745C5368 
 1200      61726564 
 1201 022b 6561746F 		.ascii	"eator\\FinalProject\\SoundDetection.cydsn\000"
 1201      725C4669 
 1201      6E616C50 
 1201      726F6A65 
 1201      63745C53 
 1202              	.LASF24:
 1203 0253 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 1203      4D415448 
 1203      5F535543 
 1203      43455353 
 1203      00
 1204              	.LASF46:
 1205 0264 776C656E 		.ascii	"wlen\000"
 1205      00
 1206              	.LASF2:
 1207 0269 73686F72 		.ascii	"short int\000"
 1207      7420696E 
 1207      7400
 1208              	.LASF47:
 1209 0273 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1209      4320342E 
 1209      392E3320 
 1209      32303135 
 1209      30333033 
 1210 02a6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1210      20726576 
 1210      6973696F 
 1210      6E203232 
 1210      31323230 
 1211 02d9 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 1211      74643D67 
 1211      6E753939 
 1211      202D6666 
 1211      756E6374 
 1212              	.LASF15:
 1213 030c 75696E74 		.ascii	"uint32_t\000"
 1213      33325F74 
 1213      00
 1214              	.LASF6:
 1215 0315 6C6F6E67 		.ascii	"long int\000"
 1215      20696E74 
 1215      00
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0PfK6D.s 			page 34


 1216              	.LASF21:
 1217 031e 6C6F6E67 		.ascii	"long double\000"
 1217      20646F75 
 1217      626C6500 
 1218              	.LASF42:
 1219 032a 5F5F7A65 		.ascii	"__zero_table_start__\000"
 1219      726F5F74 
 1219      61626C65 
 1219      5F737461 
 1219      72745F5F 
 1220              	.LASF0:
 1221 033f 7369676E 		.ascii	"signed char\000"
 1221      65642063 
 1221      68617200 
 1222              	.LASF36:
 1223 034b 7369676E 		.ascii	"signBits1\000"
 1223      42697473 
 1223      3100
 1224              	.LASF44:
 1225 0355 73717274 		.ascii	"sqrt_initial_lut_q31\000"
 1225      5F696E69 
 1225      7469616C 
 1225      5F6C7574 
 1225      5F713331 
 1226              	.LASF39:
 1227 036a 5F5F636F 		.ascii	"__copy_table_start__\000"
 1227      70795F74 
 1227      61626C65 
 1227      5F737461 
 1227      72745F5F 
 1228              	.LASF32:
 1229 037f 61726D5F 		.ascii	"arm_status\000"
 1229      73746174 
 1229      757300
 1230              	.LASF29:
 1231 038a 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 1231      4D415448 
 1231      5F53494E 
 1231      47554C41 
 1231      5200
 1232              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
