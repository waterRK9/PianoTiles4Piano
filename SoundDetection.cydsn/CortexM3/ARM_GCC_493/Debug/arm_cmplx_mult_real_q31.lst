ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_cmplx_mult_real_q31.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.arm_cmplx_mult_real_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_cmplx_mult_real_q31
  21              		.thumb
  22              		.thumb_func
  23              		.type	arm_cmplx_mult_real_q31, %function
  24              	arm_cmplx_mult_real_q31:
  25              	.LFB84:
  26              		.file 1 ".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_mult_real_q31.c"
   1:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** /* ----------------------------------------------------------------------
   2:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Project:      CMSIS DSP Library
   3:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Title:        arm_cmplx_mult_real_q31.c
   4:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Description:  Q31 complex by real multiplication
   5:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
   6:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * $Date:        23 April 2021
   7:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * $Revision:    V1.9.0
   8:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
   9:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * -------------------------------------------------------------------- */
  11:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** /*
  12:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
  14:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
  16:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * not use this file except in compliance with the License.
  18:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * You may obtain a copy of the License at
  19:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
  20:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  *
  22:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * See the License for the specific language governing permissions and
  26:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  * limitations under the License.
  27:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  */
  28:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  29:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #include "dsp/complex_math_functions.h"
  30:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  31:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** /**
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 2


  32:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @ingroup groupCmplxMath
  33:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  */
  34:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  35:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** /**
  36:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @addtogroup CmplxByRealMult
  37:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @{
  38:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  */
  39:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  40:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** /**
  41:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @brief         Q31 complex-by-real multiplication.
  42:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @param[in]     pSrcCmplx   points to complex input vector
  43:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @param[in]     pSrcReal    points to real input vector
  44:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @param[out]    pCmplxDst   points to complex output vector
  45:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @param[in]     numSamples  number of samples in each vector
  46:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @return        none
  47:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  48:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   @par           Scaling and Overflow Behavior
  49:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****                    The function uses saturating arithmetic.
  50:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****                    Results outside of the allowable Q31 range[0x80000000 0x7FFFFFFF] are saturated.
  51:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****  */
  52:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  53:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined(ARM_MATH_MVEI) && !defined(ARM_MATH_AUTOVECTORIZE)
  54:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** void arm_cmplx_mult_real_q31(
  55:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   const q31_t * pSrcCmplx,
  56:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   const q31_t * pSrcReal,
  57:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         q31_t * pCmplxDst,
  58:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         uint32_t numSamples)
  59:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** {
  60:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  61:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     static const uint32_t stride_cmplx_x_real_32[4] = {
  62:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         0, 0, 1, 1
  63:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     };
  64:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     q31x4_t rVec;
  65:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     q31x4_t cmplxVec;
  66:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     q31x4_t dstVec;
  67:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     uint32x4_t strideVec;
  68:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     uint32_t blockSizeC = numSamples * CMPLX_DIM;   /* loop counters */
  69:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     uint32_t blkCnt;
  70:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     q31_t in;
  71:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  72:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /*
  73:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****      * stride vector for pairs of real generation
  74:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****      */
  75:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     strideVec = vld1q(stride_cmplx_x_real_32);
  76:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  77:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* Compute 4 complex outputs at a time */
  78:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     blkCnt = blockSizeC >> 2;
  79:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     while (blkCnt > 0U) 
  80:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     {
  81:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         cmplxVec = vld1q(pSrcCmplx);
  82:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         rVec = vldrwq_gather_shifted_offset_s32(pSrcReal, strideVec);
  83:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         dstVec = vqdmulhq(cmplxVec, rVec);
  84:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         vst1q(pCmplxDst, dstVec);
  85:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  86:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         pSrcReal += 2;
  87:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         pSrcCmplx += 4;
  88:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         pCmplxDst += 4;
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 3


  89:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         blkCnt --;
  90:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     }
  91:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
  92:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     blkCnt = (blockSizeC & 3) >> 1; 
  93:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     while (blkCnt > 0U)
  94:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     {
  95:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       /* C[2 * i    ] = A[2 * i    ] * B[i]. */
  96:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       /* C[2 * i + 1] = A[2 * i + 1] * B[i]. */
  97:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   
  98:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       in = *pSrcReal++;
  99:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       /* store saturated result in 1.31 format to destination buffer */
 100:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 101:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 102:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   
 103:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       /* Decrement loop counter */
 104:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****       blkCnt--;
 105:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     }
 106:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** }
 107:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 108:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** void arm_cmplx_mult_real_q31(
 109:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   const q31_t * pSrcCmplx,
 110:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   const q31_t * pSrcReal,
 111:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         q31_t * pCmplxDst,
 112:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         uint32_t numSamples)
 113:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** {
  27              		.loc 1 113 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43              	.LVL1:
 114:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
 115:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****         q31_t in;                                      /* Temporary variable */
 116:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 117:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 118:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 119:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 120:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   blkCnt = numSamples >> 2U;
 121:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 122:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   while (blkCnt > 0U)
 123:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   {
 124:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* C[2 * i    ] = A[2 * i    ] * B[i]. */
 125:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i]. */
 126:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 127:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     in = *pSrcReal++;
 128:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 4


 129:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* store saturated result in 1.31 format to destination buffer */
 130:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 131:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 132:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 133:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* store result in destination buffer. */
 134:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 135:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 136:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif
 137:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 138:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     in = *pSrcReal++;
 139:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
 140:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 141:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 142:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 143:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 144:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 145:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif
 146:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 147:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     in = *pSrcReal++;
 148:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
 149:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 150:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 151:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 152:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 153:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 154:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif
 155:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 156:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     in = *pSrcReal++;
 157:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
 158:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 159:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 160:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 161:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 162:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 163:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif
 164:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 165:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* Decrement loop counter */
 166:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     blkCnt--;
 167:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   }
 168:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 169:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 170:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   blkCnt = numSamples % 0x4U;
 171:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 172:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 173:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 174:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   /* Initialize blkCnt with number of samples */
 175:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   blkCnt = numSamples;
 176:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 177:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 178:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 179:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   while (blkCnt > 0U)
  44              		.loc 1 179 0
  45 0004 35E0     		b	.L2
  46              	.LVL2:
  47              	.L7:
 180:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   {
 181:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* C[2 * i    ] = A[2 * i    ] * B[i]. */
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 5


 182:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i]. */
 183:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 184:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     in = *pSrcReal++;
  48              		.loc 1 184 0
  49 0006 0F1D     		adds	r7, r1, #4
  50              	.LVL3:
  51 0008 0E68     		ldr	r6, [r1]
  52              	.LVL4:
 185:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
 186:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* store saturated result in 1.31 format to destination buffer */
 187:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 188:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (__SSAT((q31_t) (((q63_t) *pSrcCmplx++ * in) >> 32), 31) << 1);
 189:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #else
 190:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* store result in destination buffer. */
 191:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
  53              		.loc 1 191 0
  54 000a 0468     		ldr	r4, [r0]
  55 000c 4FEAE47B 		asr	fp, r4, #31
  56 0010 4FEAE679 		asr	r9, r6, #31
  57 0014 04FB09F1 		mul	r1, r4, r9
  58 0018 06FB0B11 		mla	r1, r6, fp, r1
  59 001c A4FB0645 		umull	r4, r5, r4, r6
  60 0020 0D44     		add	r5, r5, r1
  61 0022 E10F     		lsrs	r1, r4, #31
  62 0024 41EA4501 		orr	r1, r1, r5, lsl #1
  63 0028 EC17     		asrs	r4, r5, #31
  64              	.LVL5:
  65              	.LBB6:
  66              	.LBB7:
  67              		.file 2 ".\\DSP\\Include/dsp/none.h"
   1:.\DSP\Include/dsp/none.h **** /******************************************************************************
   2:.\DSP\Include/dsp/none.h ****  * @file     none.h
   3:.\DSP\Include/dsp/none.h ****  * @brief    Intrinsincs when no DSP extension available
   4:.\DSP\Include/dsp/none.h ****  * @version  V1.9.0
   5:.\DSP\Include/dsp/none.h ****  * @date     20. July 2020
   6:.\DSP\Include/dsp/none.h ****  ******************************************************************************/
   7:.\DSP\Include/dsp/none.h **** /*
   8:.\DSP\Include/dsp/none.h ****  * Copyright (c) 2010-2020 Arm Limited or its affiliates. All rights reserved.
   9:.\DSP\Include/dsp/none.h ****  *
  10:.\DSP\Include/dsp/none.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.\DSP\Include/dsp/none.h ****  *
  12:.\DSP\Include/dsp/none.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.\DSP\Include/dsp/none.h ****  * not use this file except in compliance with the License.
  14:.\DSP\Include/dsp/none.h ****  * You may obtain a copy of the License at
  15:.\DSP\Include/dsp/none.h ****  *
  16:.\DSP\Include/dsp/none.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.\DSP\Include/dsp/none.h ****  *
  18:.\DSP\Include/dsp/none.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.\DSP\Include/dsp/none.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.\DSP\Include/dsp/none.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.\DSP\Include/dsp/none.h ****  * See the License for the specific language governing permissions and
  22:.\DSP\Include/dsp/none.h ****  * limitations under the License.
  23:.\DSP\Include/dsp/none.h ****  */
  24:.\DSP\Include/dsp/none.h **** 
  25:.\DSP\Include/dsp/none.h **** /*
  26:.\DSP\Include/dsp/none.h **** 
  27:.\DSP\Include/dsp/none.h **** Definitions in this file are allowing to reuse some versions of the
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 6


  28:.\DSP\Include/dsp/none.h **** CMSIS-DSP to build on a core (M0 for instance) or a host where
  29:.\DSP\Include/dsp/none.h **** DSP extension are not available.
  30:.\DSP\Include/dsp/none.h **** 
  31:.\DSP\Include/dsp/none.h **** Ideally a pure C version should have been used instead.
  32:.\DSP\Include/dsp/none.h **** But those are not always available or use a restricted set
  33:.\DSP\Include/dsp/none.h **** of intrinsics.
  34:.\DSP\Include/dsp/none.h **** 
  35:.\DSP\Include/dsp/none.h **** */
  36:.\DSP\Include/dsp/none.h ****  
  37:.\DSP\Include/dsp/none.h **** #ifndef _NONE_H_
  38:.\DSP\Include/dsp/none.h **** #define _NONE_H_
  39:.\DSP\Include/dsp/none.h **** 
  40:.\DSP\Include/dsp/none.h **** #include "arm_math_types.h"
  41:.\DSP\Include/dsp/none.h **** 
  42:.\DSP\Include/dsp/none.h **** #ifdef   __cplusplus
  43:.\DSP\Include/dsp/none.h **** extern "C"
  44:.\DSP\Include/dsp/none.h **** {
  45:.\DSP\Include/dsp/none.h **** #endif
  46:.\DSP\Include/dsp/none.h **** 
  47:.\DSP\Include/dsp/none.h ****  
  48:.\DSP\Include/dsp/none.h **** 
  49:.\DSP\Include/dsp/none.h **** /*
  50:.\DSP\Include/dsp/none.h **** 
  51:.\DSP\Include/dsp/none.h **** Normally those kind of definitions are in a compiler file
  52:.\DSP\Include/dsp/none.h **** in Core or Core_A.
  53:.\DSP\Include/dsp/none.h **** 
  54:.\DSP\Include/dsp/none.h **** But for MSVC compiler it is a bit special. The goal is very specific
  55:.\DSP\Include/dsp/none.h **** to CMSIS-DSP and only to allow the use of this library from other
  56:.\DSP\Include/dsp/none.h **** systems like Python or Matlab.
  57:.\DSP\Include/dsp/none.h **** 
  58:.\DSP\Include/dsp/none.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
  59:.\DSP\Include/dsp/none.h **** compiler file in Core or Core_A would not make sense.
  60:.\DSP\Include/dsp/none.h **** 
  61:.\DSP\Include/dsp/none.h **** */
  62:.\DSP\Include/dsp/none.h **** #if defined ( _MSC_VER ) || defined(__GNUC_PYTHON__) || defined(__APPLE_CC__)
  63:.\DSP\Include/dsp/none.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
  64:.\DSP\Include/dsp/none.h ****     {
  65:.\DSP\Include/dsp/none.h ****       if (data == 0U) { return 32U; }
  66:.\DSP\Include/dsp/none.h **** 
  67:.\DSP\Include/dsp/none.h ****       uint32_t count = 0U;
  68:.\DSP\Include/dsp/none.h ****       uint32_t mask = 0x80000000U;
  69:.\DSP\Include/dsp/none.h **** 
  70:.\DSP\Include/dsp/none.h ****       while ((data & mask) == 0U)
  71:.\DSP\Include/dsp/none.h ****       {
  72:.\DSP\Include/dsp/none.h ****         count += 1U;
  73:.\DSP\Include/dsp/none.h ****         mask = mask >> 1U;
  74:.\DSP\Include/dsp/none.h ****       }
  75:.\DSP\Include/dsp/none.h ****       return count;
  76:.\DSP\Include/dsp/none.h ****     }
  77:.\DSP\Include/dsp/none.h **** 
  78:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
  79:.\DSP\Include/dsp/none.h ****   {
  80:.\DSP\Include/dsp/none.h ****     if ((sat >= 1U) && (sat <= 32U))
  81:.\DSP\Include/dsp/none.h ****     {
  82:.\DSP\Include/dsp/none.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
  83:.\DSP\Include/dsp/none.h ****       const int32_t min = -1 - max ;
  84:.\DSP\Include/dsp/none.h ****       if (val > max)
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 7


  85:.\DSP\Include/dsp/none.h ****       {
  86:.\DSP\Include/dsp/none.h ****         return max;
  87:.\DSP\Include/dsp/none.h ****       }
  88:.\DSP\Include/dsp/none.h ****       else if (val < min)
  89:.\DSP\Include/dsp/none.h ****       {
  90:.\DSP\Include/dsp/none.h ****         return min;
  91:.\DSP\Include/dsp/none.h ****       }
  92:.\DSP\Include/dsp/none.h ****     }
  93:.\DSP\Include/dsp/none.h ****     return val;
  94:.\DSP\Include/dsp/none.h ****   }
  95:.\DSP\Include/dsp/none.h **** 
  96:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
  97:.\DSP\Include/dsp/none.h ****   {
  98:.\DSP\Include/dsp/none.h ****     if (sat <= 31U)
  99:.\DSP\Include/dsp/none.h ****     {
 100:.\DSP\Include/dsp/none.h ****       const uint32_t max = ((1U << sat) - 1U);
 101:.\DSP\Include/dsp/none.h ****       if (val > (int32_t)max)
 102:.\DSP\Include/dsp/none.h ****       {
 103:.\DSP\Include/dsp/none.h ****         return max;
 104:.\DSP\Include/dsp/none.h ****       }
 105:.\DSP\Include/dsp/none.h ****       else if (val < 0)
 106:.\DSP\Include/dsp/none.h ****       {
 107:.\DSP\Include/dsp/none.h ****         return 0U;
 108:.\DSP\Include/dsp/none.h ****       }
 109:.\DSP\Include/dsp/none.h ****     }
 110:.\DSP\Include/dsp/none.h ****     return (uint32_t)val;
 111:.\DSP\Include/dsp/none.h ****   }
 112:.\DSP\Include/dsp/none.h **** 
 113:.\DSP\Include/dsp/none.h ****  /**
 114:.\DSP\Include/dsp/none.h ****   \brief   Rotate Right in unsigned value (32 bit)
 115:.\DSP\Include/dsp/none.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 116:.\DSP\Include/dsp/none.h ****   \param [in]    op1  Value to rotate
 117:.\DSP\Include/dsp/none.h ****   \param [in]    op2  Number of Bits to rotate
 118:.\DSP\Include/dsp/none.h ****   \return               Rotated value
 119:.\DSP\Include/dsp/none.h ****  */
 120:.\DSP\Include/dsp/none.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 121:.\DSP\Include/dsp/none.h **** {
 122:.\DSP\Include/dsp/none.h ****   op2 %= 32U;
 123:.\DSP\Include/dsp/none.h ****   if (op2 == 0U)
 124:.\DSP\Include/dsp/none.h ****   {
 125:.\DSP\Include/dsp/none.h ****     return op1;
 126:.\DSP\Include/dsp/none.h ****   }
 127:.\DSP\Include/dsp/none.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 128:.\DSP\Include/dsp/none.h **** }
 129:.\DSP\Include/dsp/none.h **** 
 130:.\DSP\Include/dsp/none.h **** 
 131:.\DSP\Include/dsp/none.h **** #endif
 132:.\DSP\Include/dsp/none.h **** 
 133:.\DSP\Include/dsp/none.h **** /**
 134:.\DSP\Include/dsp/none.h ****    * @brief Clips Q63 to Q31 values.
 135:.\DSP\Include/dsp/none.h ****    */
 136:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 137:.\DSP\Include/dsp/none.h ****   q63_t x)
 138:.\DSP\Include/dsp/none.h ****   {
 139:.\DSP\Include/dsp/none.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 140:.\DSP\Include/dsp/none.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  68              		.loc 2 140 0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 8


  69 002a B4EBE17F 		cmp	r4, r1, asr #31
  70 002e 02D0     		beq	.L4
  71 0030 84F00041 		eor	r1, r4, #-2147483648
  72              	.LVL6:
  73 0034 C943     		mvns	r1, r1
  74              	.L4:
  75              	.LBE7:
  76              	.LBE6:
  77              		.loc 1 191 0
  78 0036 1446     		mov	r4, r2
  79 0038 44F8081B 		str	r1, [r4], #8
  80              	.LVL7:
 192:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
  81              		.loc 1 192 0
  82 003c 00F10805 		add	r5, r0, #8
  83              	.LVL8:
  84 0040 4068     		ldr	r0, [r0, #4]
  85 0042 4FEAE07B 		asr	fp, r0, #31
  86 0046 06FB0BFE 		mul	lr, r6, fp
  87 004a 00FB09EE 		mla	lr, r0, r9, lr
  88 004e A6FB0001 		umull	r0, r1, r6, r0
  89 0052 7144     		add	r1, r1, lr
  90 0054 C00F     		lsrs	r0, r0, #31
  91 0056 40EA4100 		orr	r0, r0, r1, lsl #1
  92 005a C917     		asrs	r1, r1, #31
  93              	.LVL9:
  94              	.LBB8:
  95              	.LBB9:
  96              		.loc 2 140 0
  97 005c B1EBE07F 		cmp	r1, r0, asr #31
  98 0060 02D0     		beq	.L8
  99 0062 81F00040 		eor	r0, r1, #-2147483648
 100              	.LVL10:
 101 0066 C043     		mvns	r0, r0
 102              	.L8:
 103              	.LBE9:
 104              	.LBE8:
 105              		.loc 1 192 0
 106 0068 5060     		str	r0, [r2, #4]
 193:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #endif
 194:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 195:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     /* Decrement loop counter */
 196:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     blkCnt--;
 107              		.loc 1 196 0
 108 006a 013B     		subs	r3, r3, #1
 109              	.LVL11:
 192:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 110              		.loc 1 192 0
 111 006c 2246     		mov	r2, r4
 184:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** #if defined (ARM_MATH_DSP)
 112              		.loc 1 184 0
 113 006e 3946     		mov	r1, r7
 192:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****     *pCmplxDst++ = (q31_t) clip_q63_to_q31(((q63_t) *pSrcCmplx++ * in) >> 31);
 114              		.loc 1 192 0
 115 0070 2846     		mov	r0, r5
 116              	.LVL12:
 117              	.L2:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 9


 179:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   {
 118              		.loc 1 179 0
 119 0072 002B     		cmp	r3, #0
 120 0074 C7D1     		bne	.L7
 197:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c ****   }
 198:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** 
 199:.\DSP\Source\ComplexMathFunctions/arm_cmplx_mult_real_q31.c **** }
 121              		.loc 1 199 0
 122 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 123              		.cfi_endproc
 124              	.LFE84:
 125              		.size	arm_cmplx_mult_real_q31, .-arm_cmplx_mult_real_q31
 126 007a 00BF     		.text
 127              	.Letext0:
 128              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 129              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 130              		.file 5 ".\\DSP\\Include/arm_math_types.h"
 131              		.file 6 ".\\Core\\Include/cmsis_gcc.h"
 132              		.section	.debug_info,"",%progbits
 133              	.Ldebug_info0:
 134 0000 5A020000 		.4byte	0x25a
 135 0004 0400     		.2byte	0x4
 136 0006 00000000 		.4byte	.Ldebug_abbrev0
 137 000a 04       		.byte	0x4
 138 000b 01       		.uleb128 0x1
 139 000c F1010000 		.4byte	.LASF35
 140 0010 01       		.byte	0x1
 141 0011 7F000000 		.4byte	.LASF36
 142 0015 8C010000 		.4byte	.LASF37
 143 0019 00000000 		.4byte	.Ldebug_ranges0+0
 144 001d 00000000 		.4byte	0
 145 0021 00000000 		.4byte	.Ldebug_line0
 146 0025 02       		.uleb128 0x2
 147 0026 01       		.byte	0x1
 148 0027 06       		.byte	0x6
 149 0028 BD020000 		.4byte	.LASF0
 150 002c 02       		.uleb128 0x2
 151 002d 01       		.byte	0x1
 152 002e 08       		.byte	0x8
 153 002f FA000000 		.4byte	.LASF1
 154 0033 02       		.uleb128 0x2
 155 0034 02       		.byte	0x2
 156 0035 05       		.byte	0x5
 157 0036 E7010000 		.4byte	.LASF2
 158 003a 02       		.uleb128 0x2
 159 003b 02       		.byte	0x2
 160 003c 07       		.byte	0x7
 161 003d E7000000 		.4byte	.LASF3
 162 0041 03       		.uleb128 0x3
 163 0042 4C000000 		.4byte	.LASF5
 164 0046 03       		.byte	0x3
 165 0047 3F       		.byte	0x3f
 166 0048 4C000000 		.4byte	0x4c
 167 004c 02       		.uleb128 0x2
 168 004d 04       		.byte	0x4
 169 004e 05       		.byte	0x5
 170 004f 93020000 		.4byte	.LASF4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 10


 171 0053 03       		.uleb128 0x3
 172 0054 19010000 		.4byte	.LASF6
 173 0058 03       		.byte	0x3
 174 0059 41       		.byte	0x41
 175 005a 5E000000 		.4byte	0x5e
 176 005e 02       		.uleb128 0x2
 177 005f 04       		.byte	0x4
 178 0060 07       		.byte	0x7
 179 0061 D5000000 		.4byte	.LASF7
 180 0065 03       		.uleb128 0x3
 181 0066 08010000 		.4byte	.LASF8
 182 006a 03       		.byte	0x3
 183 006b 59       		.byte	0x59
 184 006c 70000000 		.4byte	0x70
 185 0070 02       		.uleb128 0x2
 186 0071 08       		.byte	0x8
 187 0072 05       		.byte	0x5
 188 0073 69010000 		.4byte	.LASF9
 189 0077 02       		.uleb128 0x2
 190 0078 08       		.byte	0x8
 191 0079 07       		.byte	0x7
 192 007a 31010000 		.4byte	.LASF10
 193 007e 04       		.uleb128 0x4
 194 007f 04       		.byte	0x4
 195 0080 05       		.byte	0x5
 196 0081 696E7400 		.ascii	"int\000"
 197 0085 02       		.uleb128 0x2
 198 0086 04       		.byte	0x4
 199 0087 07       		.byte	0x7
 200 0088 24010000 		.4byte	.LASF11
 201 008c 03       		.uleb128 0x3
 202 008d 58010000 		.4byte	.LASF12
 203 0091 04       		.byte	0x4
 204 0092 2C       		.byte	0x2c
 205 0093 41000000 		.4byte	0x41
 206 0097 03       		.uleb128 0x3
 207 0098 8A020000 		.4byte	.LASF13
 208 009c 04       		.byte	0x4
 209 009d 2D       		.byte	0x2d
 210 009e 53000000 		.4byte	0x53
 211 00a2 03       		.uleb128 0x3
 212 00a3 13000000 		.4byte	.LASF14
 213 00a7 04       		.byte	0x4
 214 00a8 38       		.byte	0x38
 215 00a9 65000000 		.4byte	0x65
 216 00ad 02       		.uleb128 0x2
 217 00ae 04       		.byte	0x4
 218 00af 07       		.byte	0x7
 219 00b0 60010000 		.4byte	.LASF15
 220 00b4 02       		.uleb128 0x2
 221 00b5 01       		.byte	0x1
 222 00b6 08       		.byte	0x8
 223 00b7 87010000 		.4byte	.LASF16
 224 00bb 02       		.uleb128 0x2
 225 00bc 08       		.byte	0x8
 226 00bd 04       		.byte	0x4
 227 00be 12010000 		.4byte	.LASF17
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 11


 228 00c2 02       		.uleb128 0x2
 229 00c3 04       		.byte	0x4
 230 00c4 04       		.byte	0x4
 231 00c5 6B000000 		.4byte	.LASF18
 232 00c9 02       		.uleb128 0x2
 233 00ca 08       		.byte	0x8
 234 00cb 04       		.byte	0x4
 235 00cc 9C020000 		.4byte	.LASF19
 236 00d0 05       		.uleb128 0x5
 237 00d1 65000000 		.4byte	.LASF20
 238 00d5 05       		.byte	0x5
 239 00d6 2401     		.2byte	0x124
 240 00d8 8C000000 		.4byte	0x8c
 241 00dc 05       		.uleb128 0x5
 242 00dd 48010000 		.4byte	.LASF21
 243 00e1 05       		.byte	0x5
 244 00e2 2901     		.2byte	0x129
 245 00e4 A2000000 		.4byte	0xa2
 246 00e8 06       		.uleb128 0x6
 247 00e9 77010000 		.4byte	.LASF38
 248 00ed 02       		.byte	0x2
 249 00ee 88       		.byte	0x88
 250 00ef D0000000 		.4byte	0xd0
 251 00f3 03       		.byte	0x3
 252 00f4 02010000 		.4byte	0x102
 253 00f8 07       		.uleb128 0x7
 254 00f9 7800     		.ascii	"x\000"
 255 00fb 02       		.byte	0x2
 256 00fc 89       		.byte	0x89
 257 00fd DC000000 		.4byte	0xdc
 258 0101 00       		.byte	0
 259 0102 08       		.uleb128 0x8
 260 0103 34000000 		.4byte	.LASF39
 261 0107 01       		.byte	0x1
 262 0108 6C       		.byte	0x6c
 263 0109 00000000 		.4byte	.LFB84
 264 010d 7A000000 		.4byte	.LFE84-.LFB84
 265 0111 01       		.uleb128 0x1
 266 0112 9C       		.byte	0x9c
 267 0113 A5010000 		.4byte	0x1a5
 268 0117 09       		.uleb128 0x9
 269 0118 2A000000 		.4byte	.LASF22
 270 011c 01       		.byte	0x1
 271 011d 6D       		.byte	0x6d
 272 011e A5010000 		.4byte	0x1a5
 273 0122 00000000 		.4byte	.LLST0
 274 0126 09       		.uleb128 0x9
 275 0127 76000000 		.4byte	.LASF23
 276 012b 01       		.byte	0x1
 277 012c 6E       		.byte	0x6e
 278 012d A5010000 		.4byte	0x1a5
 279 0131 36000000 		.4byte	.LLST1
 280 0135 09       		.uleb128 0x9
 281 0136 4E010000 		.4byte	.LASF24
 282 013a 01       		.byte	0x1
 283 013b 6F       		.byte	0x6f
 284 013c B0010000 		.4byte	0x1b0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 12


 285 0140 5F000000 		.4byte	.LLST2
 286 0144 09       		.uleb128 0x9
 287 0145 C9020000 		.4byte	.LASF25
 288 0149 01       		.byte	0x1
 289 014a 70       		.byte	0x70
 290 014b 97000000 		.4byte	0x97
 291 014f 95000000 		.4byte	.LLST3
 292 0153 0A       		.uleb128 0xa
 293 0154 BB000000 		.4byte	.LASF26
 294 0158 01       		.byte	0x1
 295 0159 72       		.byte	0x72
 296 015a 97000000 		.4byte	0x97
 297 015e 01       		.uleb128 0x1
 298 015f 53       		.byte	0x53
 299 0160 0B       		.uleb128 0xb
 300 0161 696E00   		.ascii	"in\000"
 301 0164 01       		.byte	0x1
 302 0165 73       		.byte	0x73
 303 0166 D0000000 		.4byte	0xd0
 304 016a B6000000 		.4byte	.LLST4
 305 016e 0C       		.uleb128 0xc
 306 016f E8000000 		.4byte	0xe8
 307 0173 2A000000 		.4byte	.LBB6
 308 0177 0C000000 		.4byte	.LBE6-.LBB6
 309 017b 01       		.byte	0x1
 310 017c BF       		.byte	0xbf
 311 017d 8B010000 		.4byte	0x18b
 312 0181 0D       		.uleb128 0xd
 313 0182 F8000000 		.4byte	0xf8
 314 0186 C9000000 		.4byte	.LLST5
 315 018a 00       		.byte	0
 316 018b 0E       		.uleb128 0xe
 317 018c E8000000 		.4byte	0xe8
 318 0190 5C000000 		.4byte	.LBB8
 319 0194 0C000000 		.4byte	.LBE8-.LBB8
 320 0198 01       		.byte	0x1
 321 0199 C0       		.byte	0xc0
 322 019a 0D       		.uleb128 0xd
 323 019b F8000000 		.4byte	0xf8
 324 019f E1000000 		.4byte	.LLST6
 325 01a3 00       		.byte	0
 326 01a4 00       		.byte	0
 327 01a5 0F       		.uleb128 0xf
 328 01a6 04       		.byte	0x4
 329 01a7 AB010000 		.4byte	0x1ab
 330 01ab 10       		.uleb128 0x10
 331 01ac D0000000 		.4byte	0xd0
 332 01b0 0F       		.uleb128 0xf
 333 01b1 04       		.byte	0x4
 334 01b2 D0000000 		.4byte	0xd0
 335 01b6 03       		.uleb128 0x3
 336 01b7 1B000000 		.4byte	.LASF27
 337 01bb 06       		.byte	0x6
 338 01bc 8B       		.byte	0x8b
 339 01bd 34020000 		.4byte	0x234
 340 01c1 0F       		.uleb128 0xf
 341 01c2 04       		.byte	0x4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 13


 342 01c3 C7010000 		.4byte	0x1c7
 343 01c7 10       		.uleb128 0x10
 344 01c8 97000000 		.4byte	0x97
 345 01cc 0F       		.uleb128 0xf
 346 01cd 04       		.byte	0x4
 347 01ce 97000000 		.4byte	0x97
 348 01d2 11       		.uleb128 0x11
 349 01d3 D4020000 		.4byte	.LASF28
 350 01d7 06       		.byte	0x6
 351 01d8 92       		.byte	0x92
 352 01d9 DD010000 		.4byte	0x1dd
 353 01dd 10       		.uleb128 0x10
 354 01de B6010000 		.4byte	0x1b6
 355 01e2 11       		.uleb128 0x11
 356 01e3 C2000000 		.4byte	.LASF29
 357 01e7 06       		.byte	0x6
 358 01e8 93       		.byte	0x93
 359 01e9 DD010000 		.4byte	0x1dd
 360 01ed 03       		.uleb128 0x3
 361 01ee 56000000 		.4byte	.LASF30
 362 01f2 06       		.byte	0x6
 363 01f3 90       		.byte	0x90
 364 01f4 13020000 		.4byte	0x213
 365 01f8 11       		.uleb128 0x11
 366 01f9 A8020000 		.4byte	.LASF31
 367 01fd 06       		.byte	0x6
 368 01fe 94       		.byte	0x94
 369 01ff 03020000 		.4byte	0x203
 370 0203 10       		.uleb128 0x10
 371 0204 ED010000 		.4byte	0x1ed
 372 0208 11       		.uleb128 0x11
 373 0209 00000000 		.4byte	.LASF32
 374 020d 06       		.byte	0x6
 375 020e 95       		.byte	0x95
 376 020f 03020000 		.4byte	0x203
 377 0213 12       		.uleb128 0x12
 378 0214 08       		.byte	0x8
 379 0215 06       		.byte	0x6
 380 0216 8D       		.byte	0x8d
 381 0217 34020000 		.4byte	0x234
 382 021b 13       		.uleb128 0x13
 383 021c 71000000 		.4byte	.LASF33
 384 0220 06       		.byte	0x6
 385 0221 8E       		.byte	0x8e
 386 0222 CC010000 		.4byte	0x1cc
 387 0226 00       		.byte	0
 388 0227 13       		.uleb128 0x13
 389 0228 E2010000 		.4byte	.LASF34
 390 022c 06       		.byte	0x6
 391 022d 8F       		.byte	0x8f
 392 022e 97000000 		.4byte	0x97
 393 0232 04       		.byte	0x4
 394 0233 00       		.byte	0
 395 0234 14       		.uleb128 0x14
 396 0235 0C       		.byte	0xc
 397 0236 06       		.byte	0x6
 398 0237 87       		.byte	0x87
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 14


 399 0238 15       		.uleb128 0x15
 400 0239 73726300 		.ascii	"src\000"
 401 023d 06       		.byte	0x6
 402 023e 88       		.byte	0x88
 403 023f C1010000 		.4byte	0x1c1
 404 0243 00       		.byte	0
 405 0244 13       		.uleb128 0x13
 406 0245 71000000 		.4byte	.LASF33
 407 0249 06       		.byte	0x6
 408 024a 89       		.byte	0x89
 409 024b CC010000 		.4byte	0x1cc
 410 024f 04       		.byte	0x4
 411 0250 13       		.uleb128 0x13
 412 0251 E2010000 		.4byte	.LASF34
 413 0255 06       		.byte	0x6
 414 0256 8A       		.byte	0x8a
 415 0257 97000000 		.4byte	0x97
 416 025b 08       		.byte	0x8
 417 025c 00       		.byte	0
 418 025d 00       		.byte	0
 419              		.section	.debug_abbrev,"",%progbits
 420              	.Ldebug_abbrev0:
 421 0000 01       		.uleb128 0x1
 422 0001 11       		.uleb128 0x11
 423 0002 01       		.byte	0x1
 424 0003 25       		.uleb128 0x25
 425 0004 0E       		.uleb128 0xe
 426 0005 13       		.uleb128 0x13
 427 0006 0B       		.uleb128 0xb
 428 0007 03       		.uleb128 0x3
 429 0008 0E       		.uleb128 0xe
 430 0009 1B       		.uleb128 0x1b
 431 000a 0E       		.uleb128 0xe
 432 000b 55       		.uleb128 0x55
 433 000c 17       		.uleb128 0x17
 434 000d 11       		.uleb128 0x11
 435 000e 01       		.uleb128 0x1
 436 000f 10       		.uleb128 0x10
 437 0010 17       		.uleb128 0x17
 438 0011 00       		.byte	0
 439 0012 00       		.byte	0
 440 0013 02       		.uleb128 0x2
 441 0014 24       		.uleb128 0x24
 442 0015 00       		.byte	0
 443 0016 0B       		.uleb128 0xb
 444 0017 0B       		.uleb128 0xb
 445 0018 3E       		.uleb128 0x3e
 446 0019 0B       		.uleb128 0xb
 447 001a 03       		.uleb128 0x3
 448 001b 0E       		.uleb128 0xe
 449 001c 00       		.byte	0
 450 001d 00       		.byte	0
 451 001e 03       		.uleb128 0x3
 452 001f 16       		.uleb128 0x16
 453 0020 00       		.byte	0
 454 0021 03       		.uleb128 0x3
 455 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 15


 456 0023 3A       		.uleb128 0x3a
 457 0024 0B       		.uleb128 0xb
 458 0025 3B       		.uleb128 0x3b
 459 0026 0B       		.uleb128 0xb
 460 0027 49       		.uleb128 0x49
 461 0028 13       		.uleb128 0x13
 462 0029 00       		.byte	0
 463 002a 00       		.byte	0
 464 002b 04       		.uleb128 0x4
 465 002c 24       		.uleb128 0x24
 466 002d 00       		.byte	0
 467 002e 0B       		.uleb128 0xb
 468 002f 0B       		.uleb128 0xb
 469 0030 3E       		.uleb128 0x3e
 470 0031 0B       		.uleb128 0xb
 471 0032 03       		.uleb128 0x3
 472 0033 08       		.uleb128 0x8
 473 0034 00       		.byte	0
 474 0035 00       		.byte	0
 475 0036 05       		.uleb128 0x5
 476 0037 16       		.uleb128 0x16
 477 0038 00       		.byte	0
 478 0039 03       		.uleb128 0x3
 479 003a 0E       		.uleb128 0xe
 480 003b 3A       		.uleb128 0x3a
 481 003c 0B       		.uleb128 0xb
 482 003d 3B       		.uleb128 0x3b
 483 003e 05       		.uleb128 0x5
 484 003f 49       		.uleb128 0x49
 485 0040 13       		.uleb128 0x13
 486 0041 00       		.byte	0
 487 0042 00       		.byte	0
 488 0043 06       		.uleb128 0x6
 489 0044 2E       		.uleb128 0x2e
 490 0045 01       		.byte	0x1
 491 0046 03       		.uleb128 0x3
 492 0047 0E       		.uleb128 0xe
 493 0048 3A       		.uleb128 0x3a
 494 0049 0B       		.uleb128 0xb
 495 004a 3B       		.uleb128 0x3b
 496 004b 0B       		.uleb128 0xb
 497 004c 27       		.uleb128 0x27
 498 004d 19       		.uleb128 0x19
 499 004e 49       		.uleb128 0x49
 500 004f 13       		.uleb128 0x13
 501 0050 20       		.uleb128 0x20
 502 0051 0B       		.uleb128 0xb
 503 0052 01       		.uleb128 0x1
 504 0053 13       		.uleb128 0x13
 505 0054 00       		.byte	0
 506 0055 00       		.byte	0
 507 0056 07       		.uleb128 0x7
 508 0057 05       		.uleb128 0x5
 509 0058 00       		.byte	0
 510 0059 03       		.uleb128 0x3
 511 005a 08       		.uleb128 0x8
 512 005b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 16


 513 005c 0B       		.uleb128 0xb
 514 005d 3B       		.uleb128 0x3b
 515 005e 0B       		.uleb128 0xb
 516 005f 49       		.uleb128 0x49
 517 0060 13       		.uleb128 0x13
 518 0061 00       		.byte	0
 519 0062 00       		.byte	0
 520 0063 08       		.uleb128 0x8
 521 0064 2E       		.uleb128 0x2e
 522 0065 01       		.byte	0x1
 523 0066 3F       		.uleb128 0x3f
 524 0067 19       		.uleb128 0x19
 525 0068 03       		.uleb128 0x3
 526 0069 0E       		.uleb128 0xe
 527 006a 3A       		.uleb128 0x3a
 528 006b 0B       		.uleb128 0xb
 529 006c 3B       		.uleb128 0x3b
 530 006d 0B       		.uleb128 0xb
 531 006e 27       		.uleb128 0x27
 532 006f 19       		.uleb128 0x19
 533 0070 11       		.uleb128 0x11
 534 0071 01       		.uleb128 0x1
 535 0072 12       		.uleb128 0x12
 536 0073 06       		.uleb128 0x6
 537 0074 40       		.uleb128 0x40
 538 0075 18       		.uleb128 0x18
 539 0076 9742     		.uleb128 0x2117
 540 0078 19       		.uleb128 0x19
 541 0079 01       		.uleb128 0x1
 542 007a 13       		.uleb128 0x13
 543 007b 00       		.byte	0
 544 007c 00       		.byte	0
 545 007d 09       		.uleb128 0x9
 546 007e 05       		.uleb128 0x5
 547 007f 00       		.byte	0
 548 0080 03       		.uleb128 0x3
 549 0081 0E       		.uleb128 0xe
 550 0082 3A       		.uleb128 0x3a
 551 0083 0B       		.uleb128 0xb
 552 0084 3B       		.uleb128 0x3b
 553 0085 0B       		.uleb128 0xb
 554 0086 49       		.uleb128 0x49
 555 0087 13       		.uleb128 0x13
 556 0088 02       		.uleb128 0x2
 557 0089 17       		.uleb128 0x17
 558 008a 00       		.byte	0
 559 008b 00       		.byte	0
 560 008c 0A       		.uleb128 0xa
 561 008d 34       		.uleb128 0x34
 562 008e 00       		.byte	0
 563 008f 03       		.uleb128 0x3
 564 0090 0E       		.uleb128 0xe
 565 0091 3A       		.uleb128 0x3a
 566 0092 0B       		.uleb128 0xb
 567 0093 3B       		.uleb128 0x3b
 568 0094 0B       		.uleb128 0xb
 569 0095 49       		.uleb128 0x49
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 17


 570 0096 13       		.uleb128 0x13
 571 0097 02       		.uleb128 0x2
 572 0098 18       		.uleb128 0x18
 573 0099 00       		.byte	0
 574 009a 00       		.byte	0
 575 009b 0B       		.uleb128 0xb
 576 009c 34       		.uleb128 0x34
 577 009d 00       		.byte	0
 578 009e 03       		.uleb128 0x3
 579 009f 08       		.uleb128 0x8
 580 00a0 3A       		.uleb128 0x3a
 581 00a1 0B       		.uleb128 0xb
 582 00a2 3B       		.uleb128 0x3b
 583 00a3 0B       		.uleb128 0xb
 584 00a4 49       		.uleb128 0x49
 585 00a5 13       		.uleb128 0x13
 586 00a6 02       		.uleb128 0x2
 587 00a7 17       		.uleb128 0x17
 588 00a8 00       		.byte	0
 589 00a9 00       		.byte	0
 590 00aa 0C       		.uleb128 0xc
 591 00ab 1D       		.uleb128 0x1d
 592 00ac 01       		.byte	0x1
 593 00ad 31       		.uleb128 0x31
 594 00ae 13       		.uleb128 0x13
 595 00af 11       		.uleb128 0x11
 596 00b0 01       		.uleb128 0x1
 597 00b1 12       		.uleb128 0x12
 598 00b2 06       		.uleb128 0x6
 599 00b3 58       		.uleb128 0x58
 600 00b4 0B       		.uleb128 0xb
 601 00b5 59       		.uleb128 0x59
 602 00b6 0B       		.uleb128 0xb
 603 00b7 01       		.uleb128 0x1
 604 00b8 13       		.uleb128 0x13
 605 00b9 00       		.byte	0
 606 00ba 00       		.byte	0
 607 00bb 0D       		.uleb128 0xd
 608 00bc 05       		.uleb128 0x5
 609 00bd 00       		.byte	0
 610 00be 31       		.uleb128 0x31
 611 00bf 13       		.uleb128 0x13
 612 00c0 02       		.uleb128 0x2
 613 00c1 17       		.uleb128 0x17
 614 00c2 00       		.byte	0
 615 00c3 00       		.byte	0
 616 00c4 0E       		.uleb128 0xe
 617 00c5 1D       		.uleb128 0x1d
 618 00c6 01       		.byte	0x1
 619 00c7 31       		.uleb128 0x31
 620 00c8 13       		.uleb128 0x13
 621 00c9 11       		.uleb128 0x11
 622 00ca 01       		.uleb128 0x1
 623 00cb 12       		.uleb128 0x12
 624 00cc 06       		.uleb128 0x6
 625 00cd 58       		.uleb128 0x58
 626 00ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 18


 627 00cf 59       		.uleb128 0x59
 628 00d0 0B       		.uleb128 0xb
 629 00d1 00       		.byte	0
 630 00d2 00       		.byte	0
 631 00d3 0F       		.uleb128 0xf
 632 00d4 0F       		.uleb128 0xf
 633 00d5 00       		.byte	0
 634 00d6 0B       		.uleb128 0xb
 635 00d7 0B       		.uleb128 0xb
 636 00d8 49       		.uleb128 0x49
 637 00d9 13       		.uleb128 0x13
 638 00da 00       		.byte	0
 639 00db 00       		.byte	0
 640 00dc 10       		.uleb128 0x10
 641 00dd 26       		.uleb128 0x26
 642 00de 00       		.byte	0
 643 00df 49       		.uleb128 0x49
 644 00e0 13       		.uleb128 0x13
 645 00e1 00       		.byte	0
 646 00e2 00       		.byte	0
 647 00e3 11       		.uleb128 0x11
 648 00e4 34       		.uleb128 0x34
 649 00e5 00       		.byte	0
 650 00e6 03       		.uleb128 0x3
 651 00e7 0E       		.uleb128 0xe
 652 00e8 3A       		.uleb128 0x3a
 653 00e9 0B       		.uleb128 0xb
 654 00ea 3B       		.uleb128 0x3b
 655 00eb 0B       		.uleb128 0xb
 656 00ec 49       		.uleb128 0x49
 657 00ed 13       		.uleb128 0x13
 658 00ee 3F       		.uleb128 0x3f
 659 00ef 19       		.uleb128 0x19
 660 00f0 3C       		.uleb128 0x3c
 661 00f1 19       		.uleb128 0x19
 662 00f2 00       		.byte	0
 663 00f3 00       		.byte	0
 664 00f4 12       		.uleb128 0x12
 665 00f5 13       		.uleb128 0x13
 666 00f6 01       		.byte	0x1
 667 00f7 0B       		.uleb128 0xb
 668 00f8 0B       		.uleb128 0xb
 669 00f9 3A       		.uleb128 0x3a
 670 00fa 0B       		.uleb128 0xb
 671 00fb 3B       		.uleb128 0x3b
 672 00fc 0B       		.uleb128 0xb
 673 00fd 01       		.uleb128 0x1
 674 00fe 13       		.uleb128 0x13
 675 00ff 00       		.byte	0
 676 0100 00       		.byte	0
 677 0101 13       		.uleb128 0x13
 678 0102 0D       		.uleb128 0xd
 679 0103 00       		.byte	0
 680 0104 03       		.uleb128 0x3
 681 0105 0E       		.uleb128 0xe
 682 0106 3A       		.uleb128 0x3a
 683 0107 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 19


 684 0108 3B       		.uleb128 0x3b
 685 0109 0B       		.uleb128 0xb
 686 010a 49       		.uleb128 0x49
 687 010b 13       		.uleb128 0x13
 688 010c 38       		.uleb128 0x38
 689 010d 0B       		.uleb128 0xb
 690 010e 00       		.byte	0
 691 010f 00       		.byte	0
 692 0110 14       		.uleb128 0x14
 693 0111 13       		.uleb128 0x13
 694 0112 01       		.byte	0x1
 695 0113 0B       		.uleb128 0xb
 696 0114 0B       		.uleb128 0xb
 697 0115 3A       		.uleb128 0x3a
 698 0116 0B       		.uleb128 0xb
 699 0117 3B       		.uleb128 0x3b
 700 0118 0B       		.uleb128 0xb
 701 0119 00       		.byte	0
 702 011a 00       		.byte	0
 703 011b 15       		.uleb128 0x15
 704 011c 0D       		.uleb128 0xd
 705 011d 00       		.byte	0
 706 011e 03       		.uleb128 0x3
 707 011f 08       		.uleb128 0x8
 708 0120 3A       		.uleb128 0x3a
 709 0121 0B       		.uleb128 0xb
 710 0122 3B       		.uleb128 0x3b
 711 0123 0B       		.uleb128 0xb
 712 0124 49       		.uleb128 0x49
 713 0125 13       		.uleb128 0x13
 714 0126 38       		.uleb128 0x38
 715 0127 0B       		.uleb128 0xb
 716 0128 00       		.byte	0
 717 0129 00       		.byte	0
 718 012a 00       		.byte	0
 719              		.section	.debug_loc,"",%progbits
 720              	.Ldebug_loc0:
 721              	.LLST0:
 722 0000 00000000 		.4byte	.LVL0
 723 0004 0A000000 		.4byte	.LVL4
 724 0008 0100     		.2byte	0x1
 725 000a 50       		.byte	0x50
 726 000b 0A000000 		.4byte	.LVL4
 727 000f 40000000 		.4byte	.LVL8
 728 0013 0300     		.2byte	0x3
 729 0015 70       		.byte	0x70
 730 0016 04       		.sleb128 4
 731 0017 9F       		.byte	0x9f
 732 0018 40000000 		.4byte	.LVL8
 733 001c 72000000 		.4byte	.LVL12
 734 0020 0100     		.2byte	0x1
 735 0022 55       		.byte	0x55
 736 0023 72000000 		.4byte	.LVL12
 737 0027 7A000000 		.4byte	.LFE84
 738 002b 0100     		.2byte	0x1
 739 002d 50       		.byte	0x50
 740 002e 00000000 		.4byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 20


 741 0032 00000000 		.4byte	0
 742              	.LLST1:
 743 0036 00000000 		.4byte	.LVL0
 744 003a 08000000 		.4byte	.LVL3
 745 003e 0100     		.2byte	0x1
 746 0040 51       		.byte	0x51
 747 0041 08000000 		.4byte	.LVL3
 748 0045 72000000 		.4byte	.LVL12
 749 0049 0100     		.2byte	0x1
 750 004b 57       		.byte	0x57
 751 004c 72000000 		.4byte	.LVL12
 752 0050 7A000000 		.4byte	.LFE84
 753 0054 0100     		.2byte	0x1
 754 0056 51       		.byte	0x51
 755 0057 00000000 		.4byte	0
 756 005b 00000000 		.4byte	0
 757              	.LLST2:
 758 005f 00000000 		.4byte	.LVL0
 759 0063 0A000000 		.4byte	.LVL4
 760 0067 0100     		.2byte	0x1
 761 0069 52       		.byte	0x52
 762 006a 0A000000 		.4byte	.LVL4
 763 006e 3C000000 		.4byte	.LVL7
 764 0072 0300     		.2byte	0x3
 765 0074 72       		.byte	0x72
 766 0075 04       		.sleb128 4
 767 0076 9F       		.byte	0x9f
 768 0077 3C000000 		.4byte	.LVL7
 769 007b 72000000 		.4byte	.LVL12
 770 007f 0100     		.2byte	0x1
 771 0081 54       		.byte	0x54
 772 0082 72000000 		.4byte	.LVL12
 773 0086 7A000000 		.4byte	.LFE84
 774 008a 0100     		.2byte	0x1
 775 008c 52       		.byte	0x52
 776 008d 00000000 		.4byte	0
 777 0091 00000000 		.4byte	0
 778              	.LLST3:
 779 0095 00000000 		.4byte	.LVL0
 780 0099 06000000 		.4byte	.LVL2
 781 009d 0100     		.2byte	0x1
 782 009f 53       		.byte	0x53
 783 00a0 06000000 		.4byte	.LVL2
 784 00a4 7A000000 		.4byte	.LFE84
 785 00a8 0400     		.2byte	0x4
 786 00aa F3       		.byte	0xf3
 787 00ab 01       		.uleb128 0x1
 788 00ac 53       		.byte	0x53
 789 00ad 9F       		.byte	0x9f
 790 00ae 00000000 		.4byte	0
 791 00b2 00000000 		.4byte	0
 792              	.LLST4:
 793 00b6 0A000000 		.4byte	.LVL4
 794 00ba 72000000 		.4byte	.LVL12
 795 00be 0100     		.2byte	0x1
 796 00c0 56       		.byte	0x56
 797 00c1 00000000 		.4byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 21


 798 00c5 00000000 		.4byte	0
 799              	.LLST5:
 800 00c9 2A000000 		.4byte	.LVL5
 801 00cd 34000000 		.4byte	.LVL6
 802 00d1 0600     		.2byte	0x6
 803 00d3 51       		.byte	0x51
 804 00d4 93       		.byte	0x93
 805 00d5 04       		.uleb128 0x4
 806 00d6 54       		.byte	0x54
 807 00d7 93       		.byte	0x93
 808 00d8 04       		.uleb128 0x4
 809 00d9 00000000 		.4byte	0
 810 00dd 00000000 		.4byte	0
 811              	.LLST6:
 812 00e1 5C000000 		.4byte	.LVL9
 813 00e5 66000000 		.4byte	.LVL10
 814 00e9 0600     		.2byte	0x6
 815 00eb 50       		.byte	0x50
 816 00ec 93       		.byte	0x93
 817 00ed 04       		.uleb128 0x4
 818 00ee 51       		.byte	0x51
 819 00ef 93       		.byte	0x93
 820 00f0 04       		.uleb128 0x4
 821 00f1 00000000 		.4byte	0
 822 00f5 00000000 		.4byte	0
 823              		.section	.debug_aranges,"",%progbits
 824 0000 1C000000 		.4byte	0x1c
 825 0004 0200     		.2byte	0x2
 826 0006 00000000 		.4byte	.Ldebug_info0
 827 000a 04       		.byte	0x4
 828 000b 00       		.byte	0
 829 000c 0000     		.2byte	0
 830 000e 0000     		.2byte	0
 831 0010 00000000 		.4byte	.LFB84
 832 0014 7A000000 		.4byte	.LFE84-.LFB84
 833 0018 00000000 		.4byte	0
 834 001c 00000000 		.4byte	0
 835              		.section	.debug_ranges,"",%progbits
 836              	.Ldebug_ranges0:
 837 0000 00000000 		.4byte	.LFB84
 838 0004 7A000000 		.4byte	.LFE84
 839 0008 00000000 		.4byte	0
 840 000c 00000000 		.4byte	0
 841              		.section	.debug_line,"",%progbits
 842              	.Ldebug_line0:
 843 0000 E3010000 		.section	.debug_str,"MS",%progbits,1
 843      0200A601 
 843      00000201 
 843      FB0E0D00 
 843      01010101 
 844              	.LASF32:
 845 0000 5F5F7A65 		.ascii	"__zero_table_end__\000"
 845      726F5F74 
 845      61626C65 
 845      5F656E64 
 845      5F5F00
 846              	.LASF14:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 22


 847 0013 696E7436 		.ascii	"int64_t\000"
 847      345F7400 
 848              	.LASF27:
 849 001b 5F5F636F 		.ascii	"__copy_table_t\000"
 849      70795F74 
 849      61626C65 
 849      5F7400
 850              	.LASF22:
 851 002a 70537263 		.ascii	"pSrcCmplx\000"
 851      436D706C 
 851      7800
 852              	.LASF39:
 853 0034 61726D5F 		.ascii	"arm_cmplx_mult_real_q31\000"
 853      636D706C 
 853      785F6D75 
 853      6C745F72 
 853      65616C5F 
 854              	.LASF5:
 855 004c 5F5F696E 		.ascii	"__int32_t\000"
 855      7433325F 
 855      7400
 856              	.LASF30:
 857 0056 5F5F7A65 		.ascii	"__zero_table_t\000"
 857      726F5F74 
 857      61626C65 
 857      5F7400
 858              	.LASF20:
 859 0065 7133315F 		.ascii	"q31_t\000"
 859      7400
 860              	.LASF18:
 861 006b 666C6F61 		.ascii	"float\000"
 861      7400
 862              	.LASF33:
 863 0071 64657374 		.ascii	"dest\000"
 863      00
 864              	.LASF23:
 865 0076 70537263 		.ascii	"pSrcReal\000"
 865      5265616C 
 865      00
 866              	.LASF36:
 867 007f 2E5C4453 		.ascii	".\\DSP\\Source\\ComplexMathFunctions\\arm_cmplx_mul"
 867      505C536F 
 867      75726365 
 867      5C436F6D 
 867      706C6578 
 868 00ae 745F7265 		.ascii	"t_real_q31.c\000"
 868      616C5F71 
 868      33312E63 
 868      00
 869              	.LASF26:
 870 00bb 626C6B43 		.ascii	"blkCnt\000"
 870      6E7400
 871              	.LASF29:
 872 00c2 5F5F636F 		.ascii	"__copy_table_end__\000"
 872      70795F74 
 872      61626C65 
 872      5F656E64 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 23


 872      5F5F00
 873              	.LASF7:
 874 00d5 6C6F6E67 		.ascii	"long unsigned int\000"
 874      20756E73 
 874      69676E65 
 874      6420696E 
 874      7400
 875              	.LASF3:
 876 00e7 73686F72 		.ascii	"short unsigned int\000"
 876      7420756E 
 876      7369676E 
 876      65642069 
 876      6E7400
 877              	.LASF1:
 878 00fa 756E7369 		.ascii	"unsigned char\000"
 878      676E6564 
 878      20636861 
 878      7200
 879              	.LASF8:
 880 0108 5F5F696E 		.ascii	"__int64_t\000"
 880      7436345F 
 880      7400
 881              	.LASF17:
 882 0112 646F7562 		.ascii	"double\000"
 882      6C6500
 883              	.LASF6:
 884 0119 5F5F7569 		.ascii	"__uint32_t\000"
 884      6E743332 
 884      5F7400
 885              	.LASF11:
 886 0124 756E7369 		.ascii	"unsigned int\000"
 886      676E6564 
 886      20696E74 
 886      00
 887              	.LASF10:
 888 0131 6C6F6E67 		.ascii	"long long unsigned int\000"
 888      206C6F6E 
 888      6720756E 
 888      7369676E 
 888      65642069 
 889              	.LASF21:
 890 0148 7136335F 		.ascii	"q63_t\000"
 890      7400
 891              	.LASF24:
 892 014e 70436D70 		.ascii	"pCmplxDst\000"
 892      6C784473 
 892      7400
 893              	.LASF12:
 894 0158 696E7433 		.ascii	"int32_t\000"
 894      325F7400 
 895              	.LASF15:
 896 0160 73697A65 		.ascii	"sizetype\000"
 896      74797065 
 896      00
 897              	.LASF9:
 898 0169 6C6F6E67 		.ascii	"long long int\000"
 898      206C6F6E 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 24


 898      6720696E 
 898      7400
 899              	.LASF38:
 900 0177 636C6970 		.ascii	"clip_q63_to_q31\000"
 900      5F713633 
 900      5F746F5F 
 900      71333100 
 901              	.LASF16:
 902 0187 63686172 		.ascii	"char\000"
 902      00
 903              	.LASF37:
 904 018c 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 904      77617265 
 904      2D686F73 
 904      745C5368 
 904      61726564 
 905 01ba 6561746F 		.ascii	"eator\\FinalProject\\SoundDetection.cydsn\000"
 905      725C4669 
 905      6E616C50 
 905      726F6A65 
 905      63745C53 
 906              	.LASF34:
 907 01e2 776C656E 		.ascii	"wlen\000"
 907      00
 908              	.LASF2:
 909 01e7 73686F72 		.ascii	"short int\000"
 909      7420696E 
 909      7400
 910              	.LASF35:
 911 01f1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 911      4320342E 
 911      392E3320 
 911      32303135 
 911      30333033 
 912 0224 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 912      20726576 
 912      6973696F 
 912      6E203232 
 912      31323230 
 913 0257 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 913      74643D67 
 913      6E753939 
 913      202D6666 
 913      756E6374 
 914              	.LASF13:
 915 028a 75696E74 		.ascii	"uint32_t\000"
 915      33325F74 
 915      00
 916              	.LASF4:
 917 0293 6C6F6E67 		.ascii	"long int\000"
 917      20696E74 
 917      00
 918              	.LASF19:
 919 029c 6C6F6E67 		.ascii	"long double\000"
 919      20646F75 
 919      626C6500 
 920              	.LASF31:
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\ccsOApLN.s 			page 25


 921 02a8 5F5F7A65 		.ascii	"__zero_table_start__\000"
 921      726F5F74 
 921      61626C65 
 921      5F737461 
 921      72745F5F 
 922              	.LASF0:
 923 02bd 7369676E 		.ascii	"signed char\000"
 923      65642063 
 923      68617200 
 924              	.LASF25:
 925 02c9 6E756D53 		.ascii	"numSamples\000"
 925      616D706C 
 925      657300
 926              	.LASF28:
 927 02d4 5F5F636F 		.ascii	"__copy_table_start__\000"
 927      70795F74 
 927      61626C65 
 927      5F737461 
 927      72745F5F 
 928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
