ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"arm_offset_q31.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.arm_offset_q31,"ax",%progbits
  19              		.align	2
  20              		.global	arm_offset_q31
  21              		.thumb
  22              		.thumb_func
  23              		.type	arm_offset_q31, %function
  24              	arm_offset_q31:
  25              	.LFB83:
  26              		.file 1 ".\\DSP\\Source\\BasicMathFunctions\\arm_offset_q31.c"
   1:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** /* ----------------------------------------------------------------------
   2:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Project:      CMSIS DSP Library
   3:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Title:        arm_offset_q31.c
   4:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Description:  Q31 vector offset
   5:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
   6:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * $Date:        23 April 2021
   7:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * $Revision:    V1.9.0
   8:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
   9:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Target Processor: Cortex-M and Cortex-A cores
  10:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * -------------------------------------------------------------------- */
  11:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** /*
  12:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Copyright (C) 2010-2021 ARM Limited or its affiliates. All rights reserved.
  13:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
  14:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
  16:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * not use this file except in compliance with the License.
  18:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * You may obtain a copy of the License at
  19:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
  20:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  *
  22:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * See the License for the specific language governing permissions and
  26:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  * limitations under the License.
  27:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  */
  28:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  29:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #include "dsp/basic_math_functions.h"
  30:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  31:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** /**
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 2


  32:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @ingroup groupMath
  33:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  */
  34:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  35:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** /**
  36:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @addtogroup BasicOffset
  37:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @{
  38:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  */
  39:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  40:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** /**
  41:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @brief         Adds a constant offset to a Q31 vector.
  42:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @param[in]     pSrc       points to the input vector
  43:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @param[in]     offset     is the offset to be added
  44:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @param[out]    pDst       points to the output vector
  45:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @param[in]     blockSize  number of samples in each vector
  46:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @return        none
  47:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  48:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   @par           Scaling and Overflow Behavior
  49:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****                    The function uses saturating arithmetic.
  50:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****                    Results outside of the allowable Q31 range [0x80000000 0x7FFFFFFF] are saturated
  51:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****  */
  52:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  53:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #if defined(ARM_MATH_MVEI) && !defined(ARM_MATH_AUTOVECTORIZE)
  54:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  55:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #include "arm_helium_utils.h"
  56:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  57:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** void arm_offset_q31(
  58:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     const q31_t * pSrc,
  59:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     q31_t   offset,
  60:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     q31_t * pDst,
  61:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     uint32_t blockSize)
  62:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** {
  63:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     uint32_t  blkCnt;           /* loop counters */
  64:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     q31x4_t vecSrc;
  65:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  66:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* Compute 4 outputs at a time */
  67:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     blkCnt = blockSize >> 2;
  68:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     while (blkCnt > 0U)
  69:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     {
  70:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         /*
  71:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          * C = A + offset
  72:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          * Add offset and then store the result in the destination buffer.
  73:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          */
  74:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         vecSrc = vld1q(pSrc);
  75:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         vst1q(pDst, vqaddq(vecSrc, offset));
  76:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         /*
  77:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          * Decrement the blockSize loop counter
  78:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          */
  79:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         blkCnt--;
  80:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         /*
  81:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          * advance vector source and destination pointers
  82:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****          */
  83:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         pSrc += 4;
  84:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         pDst += 4;
  85:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     }
  86:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /*
  87:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****      * tail
  88:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****      */
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 3


  89:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     blkCnt = blockSize & 3;
  90:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     if (blkCnt > 0U)
  91:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     {
  92:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         mve_pred16_t p0 = vctp32q(blkCnt);
  93:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         vecSrc = vld1q(pSrc);
  94:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         vstrwq_p(pDst, vqaddq(vecSrc, offset), p0);
  95:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     }
  96:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** }
  97:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
  98:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #else
  99:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** void arm_offset_q31(
 100:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   const q31_t * pSrc,
 101:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         q31_t offset,
 102:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         q31_t * pDst,
 103:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         uint32_t blockSize)
 104:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** {
  27              		.loc 1 104 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 F0B4     		push	{r4, r5, r6, r7}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 7, -4
  39 0002 0F46     		mov	r7, r1
  40              	.LVL1:
 105:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****         uint32_t blkCnt;                               /* Loop counter */
 106:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 107:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #if defined (ARM_MATH_LOOPUNROLL)
 108:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 109:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 110:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   blkCnt = blockSize >> 2U;
 111:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 112:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   while (blkCnt > 0U)
 113:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   {
 114:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* C = A + offset */
 115:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 116:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* Add offset and store result in destination buffer. */
 117:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = __QADD(*pSrc++, offset);
 118:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     
 119:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = __QADD(*pSrc++, offset);
 120:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     
 121:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = __QADD(*pSrc++, offset);
 122:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     
 123:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = __QADD(*pSrc++, offset);
 124:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 125:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* Decrement loop counter */
 126:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     blkCnt--;
 127:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   }
 128:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 129:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   /* Loop unrolling: Compute remaining outputs */
 130:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   blkCnt = blockSize % 0x4U;
 131:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 4


 132:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #else
 133:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 134:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   /* Initialize blkCnt with number of samples */
 135:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   blkCnt = blockSize;
 136:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 137:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 138:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 139:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   while (blkCnt > 0U)
  41              		.loc 1 139 0
  42 0004 11E0     		b	.L2
  43              	.LVL2:
  44              	.L5:
 140:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   {
 141:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* C = A + offset */
 142:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 143:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* Add offset and store result in destination buffer. */
 144:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #if defined (ARM_MATH_DSP)
 145:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = __QADD(*pSrc++, offset);
 146:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #else
 147:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     *pDst++ = (q31_t) clip_q63_to_q31((q63_t) * pSrc++ + offset);
  45              		.loc 1 147 0
  46 0006 151D     		adds	r5, r2, #4
  47              	.LVL3:
  48 0008 041D     		adds	r4, r0, #4
  49              	.LVL4:
  50 000a 0668     		ldr	r6, [r0]
  51 000c F917     		asrs	r1, r7, #31
  52 000e B819     		adds	r0, r7, r6
  53 0010 41EBE671 		adc	r1, r1, r6, asr #31
  54              	.LVL5:
  55              	.LBB4:
  56              	.LBB5:
  57              		.file 2 ".\\DSP\\Include/dsp/none.h"
   1:.\DSP\Include/dsp/none.h **** /******************************************************************************
   2:.\DSP\Include/dsp/none.h ****  * @file     none.h
   3:.\DSP\Include/dsp/none.h ****  * @brief    Intrinsincs when no DSP extension available
   4:.\DSP\Include/dsp/none.h ****  * @version  V1.9.0
   5:.\DSP\Include/dsp/none.h ****  * @date     20. July 2020
   6:.\DSP\Include/dsp/none.h ****  ******************************************************************************/
   7:.\DSP\Include/dsp/none.h **** /*
   8:.\DSP\Include/dsp/none.h ****  * Copyright (c) 2010-2020 Arm Limited or its affiliates. All rights reserved.
   9:.\DSP\Include/dsp/none.h ****  *
  10:.\DSP\Include/dsp/none.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.\DSP\Include/dsp/none.h ****  *
  12:.\DSP\Include/dsp/none.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.\DSP\Include/dsp/none.h ****  * not use this file except in compliance with the License.
  14:.\DSP\Include/dsp/none.h ****  * You may obtain a copy of the License at
  15:.\DSP\Include/dsp/none.h ****  *
  16:.\DSP\Include/dsp/none.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.\DSP\Include/dsp/none.h ****  *
  18:.\DSP\Include/dsp/none.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.\DSP\Include/dsp/none.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.\DSP\Include/dsp/none.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.\DSP\Include/dsp/none.h ****  * See the License for the specific language governing permissions and
  22:.\DSP\Include/dsp/none.h ****  * limitations under the License.
  23:.\DSP\Include/dsp/none.h ****  */
  24:.\DSP\Include/dsp/none.h **** 
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 5


  25:.\DSP\Include/dsp/none.h **** /*
  26:.\DSP\Include/dsp/none.h **** 
  27:.\DSP\Include/dsp/none.h **** Definitions in this file are allowing to reuse some versions of the
  28:.\DSP\Include/dsp/none.h **** CMSIS-DSP to build on a core (M0 for instance) or a host where
  29:.\DSP\Include/dsp/none.h **** DSP extension are not available.
  30:.\DSP\Include/dsp/none.h **** 
  31:.\DSP\Include/dsp/none.h **** Ideally a pure C version should have been used instead.
  32:.\DSP\Include/dsp/none.h **** But those are not always available or use a restricted set
  33:.\DSP\Include/dsp/none.h **** of intrinsics.
  34:.\DSP\Include/dsp/none.h **** 
  35:.\DSP\Include/dsp/none.h **** */
  36:.\DSP\Include/dsp/none.h ****  
  37:.\DSP\Include/dsp/none.h **** #ifndef _NONE_H_
  38:.\DSP\Include/dsp/none.h **** #define _NONE_H_
  39:.\DSP\Include/dsp/none.h **** 
  40:.\DSP\Include/dsp/none.h **** #include "arm_math_types.h"
  41:.\DSP\Include/dsp/none.h **** 
  42:.\DSP\Include/dsp/none.h **** #ifdef   __cplusplus
  43:.\DSP\Include/dsp/none.h **** extern "C"
  44:.\DSP\Include/dsp/none.h **** {
  45:.\DSP\Include/dsp/none.h **** #endif
  46:.\DSP\Include/dsp/none.h **** 
  47:.\DSP\Include/dsp/none.h ****  
  48:.\DSP\Include/dsp/none.h **** 
  49:.\DSP\Include/dsp/none.h **** /*
  50:.\DSP\Include/dsp/none.h **** 
  51:.\DSP\Include/dsp/none.h **** Normally those kind of definitions are in a compiler file
  52:.\DSP\Include/dsp/none.h **** in Core or Core_A.
  53:.\DSP\Include/dsp/none.h **** 
  54:.\DSP\Include/dsp/none.h **** But for MSVC compiler it is a bit special. The goal is very specific
  55:.\DSP\Include/dsp/none.h **** to CMSIS-DSP and only to allow the use of this library from other
  56:.\DSP\Include/dsp/none.h **** systems like Python or Matlab.
  57:.\DSP\Include/dsp/none.h **** 
  58:.\DSP\Include/dsp/none.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
  59:.\DSP\Include/dsp/none.h **** compiler file in Core or Core_A would not make sense.
  60:.\DSP\Include/dsp/none.h **** 
  61:.\DSP\Include/dsp/none.h **** */
  62:.\DSP\Include/dsp/none.h **** #if defined ( _MSC_VER ) || defined(__GNUC_PYTHON__) || defined(__APPLE_CC__)
  63:.\DSP\Include/dsp/none.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
  64:.\DSP\Include/dsp/none.h ****     {
  65:.\DSP\Include/dsp/none.h ****       if (data == 0U) { return 32U; }
  66:.\DSP\Include/dsp/none.h **** 
  67:.\DSP\Include/dsp/none.h ****       uint32_t count = 0U;
  68:.\DSP\Include/dsp/none.h ****       uint32_t mask = 0x80000000U;
  69:.\DSP\Include/dsp/none.h **** 
  70:.\DSP\Include/dsp/none.h ****       while ((data & mask) == 0U)
  71:.\DSP\Include/dsp/none.h ****       {
  72:.\DSP\Include/dsp/none.h ****         count += 1U;
  73:.\DSP\Include/dsp/none.h ****         mask = mask >> 1U;
  74:.\DSP\Include/dsp/none.h ****       }
  75:.\DSP\Include/dsp/none.h ****       return count;
  76:.\DSP\Include/dsp/none.h ****     }
  77:.\DSP\Include/dsp/none.h **** 
  78:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
  79:.\DSP\Include/dsp/none.h ****   {
  80:.\DSP\Include/dsp/none.h ****     if ((sat >= 1U) && (sat <= 32U))
  81:.\DSP\Include/dsp/none.h ****     {
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 6


  82:.\DSP\Include/dsp/none.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
  83:.\DSP\Include/dsp/none.h ****       const int32_t min = -1 - max ;
  84:.\DSP\Include/dsp/none.h ****       if (val > max)
  85:.\DSP\Include/dsp/none.h ****       {
  86:.\DSP\Include/dsp/none.h ****         return max;
  87:.\DSP\Include/dsp/none.h ****       }
  88:.\DSP\Include/dsp/none.h ****       else if (val < min)
  89:.\DSP\Include/dsp/none.h ****       {
  90:.\DSP\Include/dsp/none.h ****         return min;
  91:.\DSP\Include/dsp/none.h ****       }
  92:.\DSP\Include/dsp/none.h ****     }
  93:.\DSP\Include/dsp/none.h ****     return val;
  94:.\DSP\Include/dsp/none.h ****   }
  95:.\DSP\Include/dsp/none.h **** 
  96:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
  97:.\DSP\Include/dsp/none.h ****   {
  98:.\DSP\Include/dsp/none.h ****     if (sat <= 31U)
  99:.\DSP\Include/dsp/none.h ****     {
 100:.\DSP\Include/dsp/none.h ****       const uint32_t max = ((1U << sat) - 1U);
 101:.\DSP\Include/dsp/none.h ****       if (val > (int32_t)max)
 102:.\DSP\Include/dsp/none.h ****       {
 103:.\DSP\Include/dsp/none.h ****         return max;
 104:.\DSP\Include/dsp/none.h ****       }
 105:.\DSP\Include/dsp/none.h ****       else if (val < 0)
 106:.\DSP\Include/dsp/none.h ****       {
 107:.\DSP\Include/dsp/none.h ****         return 0U;
 108:.\DSP\Include/dsp/none.h ****       }
 109:.\DSP\Include/dsp/none.h ****     }
 110:.\DSP\Include/dsp/none.h ****     return (uint32_t)val;
 111:.\DSP\Include/dsp/none.h ****   }
 112:.\DSP\Include/dsp/none.h **** 
 113:.\DSP\Include/dsp/none.h ****  /**
 114:.\DSP\Include/dsp/none.h ****   \brief   Rotate Right in unsigned value (32 bit)
 115:.\DSP\Include/dsp/none.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 116:.\DSP\Include/dsp/none.h ****   \param [in]    op1  Value to rotate
 117:.\DSP\Include/dsp/none.h ****   \param [in]    op2  Number of Bits to rotate
 118:.\DSP\Include/dsp/none.h ****   \return               Rotated value
 119:.\DSP\Include/dsp/none.h ****  */
 120:.\DSP\Include/dsp/none.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 121:.\DSP\Include/dsp/none.h **** {
 122:.\DSP\Include/dsp/none.h ****   op2 %= 32U;
 123:.\DSP\Include/dsp/none.h ****   if (op2 == 0U)
 124:.\DSP\Include/dsp/none.h ****   {
 125:.\DSP\Include/dsp/none.h ****     return op1;
 126:.\DSP\Include/dsp/none.h ****   }
 127:.\DSP\Include/dsp/none.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 128:.\DSP\Include/dsp/none.h **** }
 129:.\DSP\Include/dsp/none.h **** 
 130:.\DSP\Include/dsp/none.h **** 
 131:.\DSP\Include/dsp/none.h **** #endif
 132:.\DSP\Include/dsp/none.h **** 
 133:.\DSP\Include/dsp/none.h **** /**
 134:.\DSP\Include/dsp/none.h ****    * @brief Clips Q63 to Q31 values.
 135:.\DSP\Include/dsp/none.h ****    */
 136:.\DSP\Include/dsp/none.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 137:.\DSP\Include/dsp/none.h ****   q63_t x)
 138:.\DSP\Include/dsp/none.h ****   {
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 7


 139:.\DSP\Include/dsp/none.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 140:.\DSP\Include/dsp/none.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  58              		.loc 2 140 0
  59 0014 B1EBE07F 		cmp	r1, r0, asr #31
  60 0018 03D0     		beq	.L6
  61 001a 6FF00040 		mvn	r0, #-2147483648
  62              	.LVL6:
  63 001e 80EAE170 		eor	r0, r0, r1, asr #31
  64              	.L6:
  65              	.LBE5:
  66              	.LBE4:
  67              		.loc 1 147 0
  68 0022 1060     		str	r0, [r2]
 148:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #endif
 149:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 150:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     /* Decrement loop counter */
 151:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****     blkCnt--;
  69              		.loc 1 151 0
  70 0024 013B     		subs	r3, r3, #1
  71              	.LVL7:
 147:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** #endif
  72              		.loc 1 147 0
  73 0026 2A46     		mov	r2, r5
  74 0028 2046     		mov	r0, r4
  75              	.LVL8:
  76              	.L2:
 139:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   {
  77              		.loc 1 139 0
  78 002a 002B     		cmp	r3, #0
  79 002c EBD1     		bne	.L5
 152:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c ****   }
 153:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** 
 154:.\DSP\Source\BasicMathFunctions/arm_offset_q31.c **** }
  80              		.loc 1 154 0
  81 002e F0BC     		pop	{r4, r5, r6, r7}
  82              		.cfi_restore 7
  83              		.cfi_restore 6
  84              		.cfi_restore 5
  85              		.cfi_restore 4
  86              		.cfi_def_cfa_offset 0
  87              	.LVL9:
  88 0030 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE83:
  91              		.size	arm_offset_q31, .-arm_offset_q31
  92 0032 00BF     		.text
  93              	.Letext0:
  94              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
  95              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
  96              		.file 5 ".\\DSP\\Include/arm_math_types.h"
  97              		.file 6 ".\\Core\\Include/cmsis_gcc.h"
  98              		.section	.debug_info,"",%progbits
  99              	.Ldebug_info0:
 100 0000 2F020000 		.4byte	0x22f
 101 0004 0400     		.2byte	0x4
 102 0006 00000000 		.4byte	.Ldebug_abbrev0
 103 000a 04       		.byte	0x4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 8


 104 000b 01       		.uleb128 0x1
 105 000c D6010000 		.4byte	.LASF34
 106 0010 01       		.byte	0x1
 107 0011 13010000 		.4byte	.LASF35
 108 0015 71010000 		.4byte	.LASF36
 109 0019 00000000 		.4byte	.Ldebug_ranges0+0
 110 001d 00000000 		.4byte	0
 111 0021 00000000 		.4byte	.Ldebug_line0
 112 0025 02       		.uleb128 0x2
 113 0026 01       		.byte	0x1
 114 0027 06       		.byte	0x6
 115 0028 A2020000 		.4byte	.LASF0
 116 002c 02       		.uleb128 0x2
 117 002d 01       		.byte	0x1
 118 002e 08       		.byte	0x8
 119 002f 63000000 		.4byte	.LASF1
 120 0033 02       		.uleb128 0x2
 121 0034 02       		.byte	0x2
 122 0035 05       		.byte	0x5
 123 0036 CC010000 		.4byte	.LASF2
 124 003a 02       		.uleb128 0x2
 125 003b 02       		.byte	0x2
 126 003c 07       		.byte	0x7
 127 003d A4000000 		.4byte	.LASF3
 128 0041 03       		.uleb128 0x3
 129 0042 39000000 		.4byte	.LASF5
 130 0046 03       		.byte	0x3
 131 0047 3F       		.byte	0x3f
 132 0048 4C000000 		.4byte	0x4c
 133 004c 02       		.uleb128 0x2
 134 004d 04       		.byte	0x4
 135 004e 05       		.byte	0x5
 136 004f 78020000 		.4byte	.LASF4
 137 0053 03       		.uleb128 0x3
 138 0054 CD000000 		.4byte	.LASF6
 139 0058 03       		.byte	0x3
 140 0059 41       		.byte	0x41
 141 005a 5E000000 		.4byte	0x5e
 142 005e 02       		.uleb128 0x2
 143 005f 04       		.byte	0x4
 144 0060 07       		.byte	0x7
 145 0061 92000000 		.4byte	.LASF7
 146 0065 03       		.uleb128 0x3
 147 0066 BC000000 		.4byte	.LASF8
 148 006a 03       		.byte	0x3
 149 006b 59       		.byte	0x59
 150 006c 70000000 		.4byte	0x70
 151 0070 02       		.uleb128 0x2
 152 0071 08       		.byte	0x8
 153 0072 05       		.byte	0x5
 154 0073 44010000 		.4byte	.LASF9
 155 0077 02       		.uleb128 0x2
 156 0078 08       		.byte	0x8
 157 0079 07       		.byte	0x7
 158 007a E5000000 		.4byte	.LASF10
 159 007e 04       		.uleb128 0x4
 160 007f 04       		.byte	0x4
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 9


 161 0080 05       		.byte	0x5
 162 0081 696E7400 		.ascii	"int\000"
 163 0085 02       		.uleb128 0x2
 164 0086 04       		.byte	0x4
 165 0087 07       		.byte	0x7
 166 0088 D8000000 		.4byte	.LASF11
 167 008c 03       		.uleb128 0x3
 168 008d 02010000 		.4byte	.LASF12
 169 0091 04       		.byte	0x4
 170 0092 2C       		.byte	0x2c
 171 0093 41000000 		.4byte	0x41
 172 0097 03       		.uleb128 0x3
 173 0098 6F020000 		.4byte	.LASF13
 174 009c 04       		.byte	0x4
 175 009d 2D       		.byte	0x2d
 176 009e 53000000 		.4byte	0x53
 177 00a2 03       		.uleb128 0x3
 178 00a3 13000000 		.4byte	.LASF14
 179 00a7 04       		.byte	0x4
 180 00a8 38       		.byte	0x38
 181 00a9 65000000 		.4byte	0x65
 182 00ad 02       		.uleb128 0x2
 183 00ae 04       		.byte	0x4
 184 00af 07       		.byte	0x7
 185 00b0 0A010000 		.4byte	.LASF15
 186 00b4 02       		.uleb128 0x2
 187 00b5 01       		.byte	0x1
 188 00b6 08       		.byte	0x8
 189 00b7 6C010000 		.4byte	.LASF16
 190 00bb 02       		.uleb128 0x2
 191 00bc 08       		.byte	0x8
 192 00bd 04       		.byte	0x4
 193 00be C6000000 		.4byte	.LASF17
 194 00c2 02       		.uleb128 0x2
 195 00c3 04       		.byte	0x4
 196 00c4 04       		.byte	0x4
 197 00c5 52000000 		.4byte	.LASF18
 198 00c9 02       		.uleb128 0x2
 199 00ca 08       		.byte	0x8
 200 00cb 04       		.byte	0x4
 201 00cc 81020000 		.4byte	.LASF19
 202 00d0 05       		.uleb128 0x5
 203 00d1 5D000000 		.4byte	.LASF20
 204 00d5 05       		.byte	0x5
 205 00d6 2401     		.2byte	0x124
 206 00d8 8C000000 		.4byte	0x8c
 207 00dc 05       		.uleb128 0x5
 208 00dd FC000000 		.4byte	.LASF21
 209 00e1 05       		.byte	0x5
 210 00e2 2901     		.2byte	0x129
 211 00e4 A2000000 		.4byte	0xa2
 212 00e8 06       		.uleb128 0x6
 213 00e9 5C010000 		.4byte	.LASF37
 214 00ed 02       		.byte	0x2
 215 00ee 88       		.byte	0x88
 216 00ef D0000000 		.4byte	0xd0
 217 00f3 03       		.byte	0x3
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 10


 218 00f4 02010000 		.4byte	0x102
 219 00f8 07       		.uleb128 0x7
 220 00f9 7800     		.ascii	"x\000"
 221 00fb 02       		.byte	0x2
 222 00fc 89       		.byte	0x89
 223 00fd DC000000 		.4byte	0xdc
 224 0101 00       		.byte	0
 225 0102 08       		.uleb128 0x8
 226 0103 1B000000 		.4byte	.LASF38
 227 0107 01       		.byte	0x1
 228 0108 63       		.byte	0x63
 229 0109 00000000 		.4byte	.LFB83
 230 010d 32000000 		.4byte	.LFE83-.LFB83
 231 0111 01       		.uleb128 0x1
 232 0112 9C       		.byte	0x9c
 233 0113 7A010000 		.4byte	0x17a
 234 0117 09       		.uleb128 0x9
 235 0118 AE020000 		.4byte	.LASF22
 236 011c 01       		.byte	0x1
 237 011d 64       		.byte	0x64
 238 011e 7A010000 		.4byte	0x17a
 239 0122 00000000 		.4byte	.LLST0
 240 0126 09       		.uleb128 0x9
 241 0127 8B000000 		.4byte	.LASF23
 242 012b 01       		.byte	0x1
 243 012c 65       		.byte	0x65
 244 012d D0000000 		.4byte	0xd0
 245 0131 29000000 		.4byte	.LLST1
 246 0135 09       		.uleb128 0x9
 247 0136 B7000000 		.4byte	.LASF24
 248 013a 01       		.byte	0x1
 249 013b 66       		.byte	0x66
 250 013c 85010000 		.4byte	0x185
 251 0140 55000000 		.4byte	.LLST2
 252 0144 09       		.uleb128 0x9
 253 0145 52010000 		.4byte	.LASF25
 254 0149 01       		.byte	0x1
 255 014a 67       		.byte	0x67
 256 014b 97000000 		.4byte	0x97
 257 014f 7E000000 		.4byte	.LLST3
 258 0153 0A       		.uleb128 0xa
 259 0154 71000000 		.4byte	.LASF39
 260 0158 01       		.byte	0x1
 261 0159 69       		.byte	0x69
 262 015a 97000000 		.4byte	0x97
 263 015e 01       		.uleb128 0x1
 264 015f 53       		.byte	0x53
 265 0160 0B       		.uleb128 0xb
 266 0161 E8000000 		.4byte	0xe8
 267 0165 14000000 		.4byte	.LBB4
 268 0169 0E000000 		.4byte	.LBE4-.LBB4
 269 016d 01       		.byte	0x1
 270 016e 93       		.byte	0x93
 271 016f 0C       		.uleb128 0xc
 272 0170 F8000000 		.4byte	0xf8
 273 0174 9F000000 		.4byte	.LLST4
 274 0178 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 11


 275 0179 00       		.byte	0
 276 017a 0D       		.uleb128 0xd
 277 017b 04       		.byte	0x4
 278 017c 80010000 		.4byte	0x180
 279 0180 0E       		.uleb128 0xe
 280 0181 D0000000 		.4byte	0xd0
 281 0185 0D       		.uleb128 0xd
 282 0186 04       		.byte	0x4
 283 0187 D0000000 		.4byte	0xd0
 284 018b 03       		.uleb128 0x3
 285 018c 2A000000 		.4byte	.LASF26
 286 0190 06       		.byte	0x6
 287 0191 8B       		.byte	0x8b
 288 0192 09020000 		.4byte	0x209
 289 0196 0D       		.uleb128 0xd
 290 0197 04       		.byte	0x4
 291 0198 9C010000 		.4byte	0x19c
 292 019c 0E       		.uleb128 0xe
 293 019d 97000000 		.4byte	0x97
 294 01a1 0D       		.uleb128 0xd
 295 01a2 04       		.byte	0x4
 296 01a3 97000000 		.4byte	0x97
 297 01a7 0F       		.uleb128 0xf
 298 01a8 B3020000 		.4byte	.LASF27
 299 01ac 06       		.byte	0x6
 300 01ad 92       		.byte	0x92
 301 01ae B2010000 		.4byte	0x1b2
 302 01b2 0E       		.uleb128 0xe
 303 01b3 8B010000 		.4byte	0x18b
 304 01b7 0F       		.uleb128 0xf
 305 01b8 78000000 		.4byte	.LASF28
 306 01bc 06       		.byte	0x6
 307 01bd 93       		.byte	0x93
 308 01be B2010000 		.4byte	0x1b2
 309 01c2 03       		.uleb128 0x3
 310 01c3 43000000 		.4byte	.LASF29
 311 01c7 06       		.byte	0x6
 312 01c8 90       		.byte	0x90
 313 01c9 E8010000 		.4byte	0x1e8
 314 01cd 0F       		.uleb128 0xf
 315 01ce 8D020000 		.4byte	.LASF30
 316 01d2 06       		.byte	0x6
 317 01d3 94       		.byte	0x94
 318 01d4 D8010000 		.4byte	0x1d8
 319 01d8 0E       		.uleb128 0xe
 320 01d9 C2010000 		.4byte	0x1c2
 321 01dd 0F       		.uleb128 0xf
 322 01de 00000000 		.4byte	.LASF31
 323 01e2 06       		.byte	0x6
 324 01e3 95       		.byte	0x95
 325 01e4 D8010000 		.4byte	0x1d8
 326 01e8 10       		.uleb128 0x10
 327 01e9 08       		.byte	0x8
 328 01ea 06       		.byte	0x6
 329 01eb 8D       		.byte	0x8d
 330 01ec 09020000 		.4byte	0x209
 331 01f0 11       		.uleb128 0x11
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 12


 332 01f1 58000000 		.4byte	.LASF32
 333 01f5 06       		.byte	0x6
 334 01f6 8E       		.byte	0x8e
 335 01f7 A1010000 		.4byte	0x1a1
 336 01fb 00       		.byte	0
 337 01fc 11       		.uleb128 0x11
 338 01fd C7010000 		.4byte	.LASF33
 339 0201 06       		.byte	0x6
 340 0202 8F       		.byte	0x8f
 341 0203 97000000 		.4byte	0x97
 342 0207 04       		.byte	0x4
 343 0208 00       		.byte	0
 344 0209 12       		.uleb128 0x12
 345 020a 0C       		.byte	0xc
 346 020b 06       		.byte	0x6
 347 020c 87       		.byte	0x87
 348 020d 13       		.uleb128 0x13
 349 020e 73726300 		.ascii	"src\000"
 350 0212 06       		.byte	0x6
 351 0213 88       		.byte	0x88
 352 0214 96010000 		.4byte	0x196
 353 0218 00       		.byte	0
 354 0219 11       		.uleb128 0x11
 355 021a 58000000 		.4byte	.LASF32
 356 021e 06       		.byte	0x6
 357 021f 89       		.byte	0x89
 358 0220 A1010000 		.4byte	0x1a1
 359 0224 04       		.byte	0x4
 360 0225 11       		.uleb128 0x11
 361 0226 C7010000 		.4byte	.LASF33
 362 022a 06       		.byte	0x6
 363 022b 8A       		.byte	0x8a
 364 022c 97000000 		.4byte	0x97
 365 0230 08       		.byte	0x8
 366 0231 00       		.byte	0
 367 0232 00       		.byte	0
 368              		.section	.debug_abbrev,"",%progbits
 369              	.Ldebug_abbrev0:
 370 0000 01       		.uleb128 0x1
 371 0001 11       		.uleb128 0x11
 372 0002 01       		.byte	0x1
 373 0003 25       		.uleb128 0x25
 374 0004 0E       		.uleb128 0xe
 375 0005 13       		.uleb128 0x13
 376 0006 0B       		.uleb128 0xb
 377 0007 03       		.uleb128 0x3
 378 0008 0E       		.uleb128 0xe
 379 0009 1B       		.uleb128 0x1b
 380 000a 0E       		.uleb128 0xe
 381 000b 55       		.uleb128 0x55
 382 000c 17       		.uleb128 0x17
 383 000d 11       		.uleb128 0x11
 384 000e 01       		.uleb128 0x1
 385 000f 10       		.uleb128 0x10
 386 0010 17       		.uleb128 0x17
 387 0011 00       		.byte	0
 388 0012 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 13


 389 0013 02       		.uleb128 0x2
 390 0014 24       		.uleb128 0x24
 391 0015 00       		.byte	0
 392 0016 0B       		.uleb128 0xb
 393 0017 0B       		.uleb128 0xb
 394 0018 3E       		.uleb128 0x3e
 395 0019 0B       		.uleb128 0xb
 396 001a 03       		.uleb128 0x3
 397 001b 0E       		.uleb128 0xe
 398 001c 00       		.byte	0
 399 001d 00       		.byte	0
 400 001e 03       		.uleb128 0x3
 401 001f 16       		.uleb128 0x16
 402 0020 00       		.byte	0
 403 0021 03       		.uleb128 0x3
 404 0022 0E       		.uleb128 0xe
 405 0023 3A       		.uleb128 0x3a
 406 0024 0B       		.uleb128 0xb
 407 0025 3B       		.uleb128 0x3b
 408 0026 0B       		.uleb128 0xb
 409 0027 49       		.uleb128 0x49
 410 0028 13       		.uleb128 0x13
 411 0029 00       		.byte	0
 412 002a 00       		.byte	0
 413 002b 04       		.uleb128 0x4
 414 002c 24       		.uleb128 0x24
 415 002d 00       		.byte	0
 416 002e 0B       		.uleb128 0xb
 417 002f 0B       		.uleb128 0xb
 418 0030 3E       		.uleb128 0x3e
 419 0031 0B       		.uleb128 0xb
 420 0032 03       		.uleb128 0x3
 421 0033 08       		.uleb128 0x8
 422 0034 00       		.byte	0
 423 0035 00       		.byte	0
 424 0036 05       		.uleb128 0x5
 425 0037 16       		.uleb128 0x16
 426 0038 00       		.byte	0
 427 0039 03       		.uleb128 0x3
 428 003a 0E       		.uleb128 0xe
 429 003b 3A       		.uleb128 0x3a
 430 003c 0B       		.uleb128 0xb
 431 003d 3B       		.uleb128 0x3b
 432 003e 05       		.uleb128 0x5
 433 003f 49       		.uleb128 0x49
 434 0040 13       		.uleb128 0x13
 435 0041 00       		.byte	0
 436 0042 00       		.byte	0
 437 0043 06       		.uleb128 0x6
 438 0044 2E       		.uleb128 0x2e
 439 0045 01       		.byte	0x1
 440 0046 03       		.uleb128 0x3
 441 0047 0E       		.uleb128 0xe
 442 0048 3A       		.uleb128 0x3a
 443 0049 0B       		.uleb128 0xb
 444 004a 3B       		.uleb128 0x3b
 445 004b 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 14


 446 004c 27       		.uleb128 0x27
 447 004d 19       		.uleb128 0x19
 448 004e 49       		.uleb128 0x49
 449 004f 13       		.uleb128 0x13
 450 0050 20       		.uleb128 0x20
 451 0051 0B       		.uleb128 0xb
 452 0052 01       		.uleb128 0x1
 453 0053 13       		.uleb128 0x13
 454 0054 00       		.byte	0
 455 0055 00       		.byte	0
 456 0056 07       		.uleb128 0x7
 457 0057 05       		.uleb128 0x5
 458 0058 00       		.byte	0
 459 0059 03       		.uleb128 0x3
 460 005a 08       		.uleb128 0x8
 461 005b 3A       		.uleb128 0x3a
 462 005c 0B       		.uleb128 0xb
 463 005d 3B       		.uleb128 0x3b
 464 005e 0B       		.uleb128 0xb
 465 005f 49       		.uleb128 0x49
 466 0060 13       		.uleb128 0x13
 467 0061 00       		.byte	0
 468 0062 00       		.byte	0
 469 0063 08       		.uleb128 0x8
 470 0064 2E       		.uleb128 0x2e
 471 0065 01       		.byte	0x1
 472 0066 3F       		.uleb128 0x3f
 473 0067 19       		.uleb128 0x19
 474 0068 03       		.uleb128 0x3
 475 0069 0E       		.uleb128 0xe
 476 006a 3A       		.uleb128 0x3a
 477 006b 0B       		.uleb128 0xb
 478 006c 3B       		.uleb128 0x3b
 479 006d 0B       		.uleb128 0xb
 480 006e 27       		.uleb128 0x27
 481 006f 19       		.uleb128 0x19
 482 0070 11       		.uleb128 0x11
 483 0071 01       		.uleb128 0x1
 484 0072 12       		.uleb128 0x12
 485 0073 06       		.uleb128 0x6
 486 0074 40       		.uleb128 0x40
 487 0075 18       		.uleb128 0x18
 488 0076 9742     		.uleb128 0x2117
 489 0078 19       		.uleb128 0x19
 490 0079 01       		.uleb128 0x1
 491 007a 13       		.uleb128 0x13
 492 007b 00       		.byte	0
 493 007c 00       		.byte	0
 494 007d 09       		.uleb128 0x9
 495 007e 05       		.uleb128 0x5
 496 007f 00       		.byte	0
 497 0080 03       		.uleb128 0x3
 498 0081 0E       		.uleb128 0xe
 499 0082 3A       		.uleb128 0x3a
 500 0083 0B       		.uleb128 0xb
 501 0084 3B       		.uleb128 0x3b
 502 0085 0B       		.uleb128 0xb
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 15


 503 0086 49       		.uleb128 0x49
 504 0087 13       		.uleb128 0x13
 505 0088 02       		.uleb128 0x2
 506 0089 17       		.uleb128 0x17
 507 008a 00       		.byte	0
 508 008b 00       		.byte	0
 509 008c 0A       		.uleb128 0xa
 510 008d 34       		.uleb128 0x34
 511 008e 00       		.byte	0
 512 008f 03       		.uleb128 0x3
 513 0090 0E       		.uleb128 0xe
 514 0091 3A       		.uleb128 0x3a
 515 0092 0B       		.uleb128 0xb
 516 0093 3B       		.uleb128 0x3b
 517 0094 0B       		.uleb128 0xb
 518 0095 49       		.uleb128 0x49
 519 0096 13       		.uleb128 0x13
 520 0097 02       		.uleb128 0x2
 521 0098 18       		.uleb128 0x18
 522 0099 00       		.byte	0
 523 009a 00       		.byte	0
 524 009b 0B       		.uleb128 0xb
 525 009c 1D       		.uleb128 0x1d
 526 009d 01       		.byte	0x1
 527 009e 31       		.uleb128 0x31
 528 009f 13       		.uleb128 0x13
 529 00a0 11       		.uleb128 0x11
 530 00a1 01       		.uleb128 0x1
 531 00a2 12       		.uleb128 0x12
 532 00a3 06       		.uleb128 0x6
 533 00a4 58       		.uleb128 0x58
 534 00a5 0B       		.uleb128 0xb
 535 00a6 59       		.uleb128 0x59
 536 00a7 0B       		.uleb128 0xb
 537 00a8 00       		.byte	0
 538 00a9 00       		.byte	0
 539 00aa 0C       		.uleb128 0xc
 540 00ab 05       		.uleb128 0x5
 541 00ac 00       		.byte	0
 542 00ad 31       		.uleb128 0x31
 543 00ae 13       		.uleb128 0x13
 544 00af 02       		.uleb128 0x2
 545 00b0 17       		.uleb128 0x17
 546 00b1 00       		.byte	0
 547 00b2 00       		.byte	0
 548 00b3 0D       		.uleb128 0xd
 549 00b4 0F       		.uleb128 0xf
 550 00b5 00       		.byte	0
 551 00b6 0B       		.uleb128 0xb
 552 00b7 0B       		.uleb128 0xb
 553 00b8 49       		.uleb128 0x49
 554 00b9 13       		.uleb128 0x13
 555 00ba 00       		.byte	0
 556 00bb 00       		.byte	0
 557 00bc 0E       		.uleb128 0xe
 558 00bd 26       		.uleb128 0x26
 559 00be 00       		.byte	0
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 16


 560 00bf 49       		.uleb128 0x49
 561 00c0 13       		.uleb128 0x13
 562 00c1 00       		.byte	0
 563 00c2 00       		.byte	0
 564 00c3 0F       		.uleb128 0xf
 565 00c4 34       		.uleb128 0x34
 566 00c5 00       		.byte	0
 567 00c6 03       		.uleb128 0x3
 568 00c7 0E       		.uleb128 0xe
 569 00c8 3A       		.uleb128 0x3a
 570 00c9 0B       		.uleb128 0xb
 571 00ca 3B       		.uleb128 0x3b
 572 00cb 0B       		.uleb128 0xb
 573 00cc 49       		.uleb128 0x49
 574 00cd 13       		.uleb128 0x13
 575 00ce 3F       		.uleb128 0x3f
 576 00cf 19       		.uleb128 0x19
 577 00d0 3C       		.uleb128 0x3c
 578 00d1 19       		.uleb128 0x19
 579 00d2 00       		.byte	0
 580 00d3 00       		.byte	0
 581 00d4 10       		.uleb128 0x10
 582 00d5 13       		.uleb128 0x13
 583 00d6 01       		.byte	0x1
 584 00d7 0B       		.uleb128 0xb
 585 00d8 0B       		.uleb128 0xb
 586 00d9 3A       		.uleb128 0x3a
 587 00da 0B       		.uleb128 0xb
 588 00db 3B       		.uleb128 0x3b
 589 00dc 0B       		.uleb128 0xb
 590 00dd 01       		.uleb128 0x1
 591 00de 13       		.uleb128 0x13
 592 00df 00       		.byte	0
 593 00e0 00       		.byte	0
 594 00e1 11       		.uleb128 0x11
 595 00e2 0D       		.uleb128 0xd
 596 00e3 00       		.byte	0
 597 00e4 03       		.uleb128 0x3
 598 00e5 0E       		.uleb128 0xe
 599 00e6 3A       		.uleb128 0x3a
 600 00e7 0B       		.uleb128 0xb
 601 00e8 3B       		.uleb128 0x3b
 602 00e9 0B       		.uleb128 0xb
 603 00ea 49       		.uleb128 0x49
 604 00eb 13       		.uleb128 0x13
 605 00ec 38       		.uleb128 0x38
 606 00ed 0B       		.uleb128 0xb
 607 00ee 00       		.byte	0
 608 00ef 00       		.byte	0
 609 00f0 12       		.uleb128 0x12
 610 00f1 13       		.uleb128 0x13
 611 00f2 01       		.byte	0x1
 612 00f3 0B       		.uleb128 0xb
 613 00f4 0B       		.uleb128 0xb
 614 00f5 3A       		.uleb128 0x3a
 615 00f6 0B       		.uleb128 0xb
 616 00f7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 17


 617 00f8 0B       		.uleb128 0xb
 618 00f9 00       		.byte	0
 619 00fa 00       		.byte	0
 620 00fb 13       		.uleb128 0x13
 621 00fc 0D       		.uleb128 0xd
 622 00fd 00       		.byte	0
 623 00fe 03       		.uleb128 0x3
 624 00ff 08       		.uleb128 0x8
 625 0100 3A       		.uleb128 0x3a
 626 0101 0B       		.uleb128 0xb
 627 0102 3B       		.uleb128 0x3b
 628 0103 0B       		.uleb128 0xb
 629 0104 49       		.uleb128 0x49
 630 0105 13       		.uleb128 0x13
 631 0106 38       		.uleb128 0x38
 632 0107 0B       		.uleb128 0xb
 633 0108 00       		.byte	0
 634 0109 00       		.byte	0
 635 010a 00       		.byte	0
 636              		.section	.debug_loc,"",%progbits
 637              	.Ldebug_loc0:
 638              	.LLST0:
 639 0000 00000000 		.4byte	.LVL0
 640 0004 0A000000 		.4byte	.LVL4
 641 0008 0100     		.2byte	0x1
 642 000a 50       		.byte	0x50
 643 000b 0A000000 		.4byte	.LVL4
 644 000f 2A000000 		.4byte	.LVL8
 645 0013 0100     		.2byte	0x1
 646 0015 54       		.byte	0x54
 647 0016 2A000000 		.4byte	.LVL8
 648 001a 32000000 		.4byte	.LFE83
 649 001e 0100     		.2byte	0x1
 650 0020 50       		.byte	0x50
 651 0021 00000000 		.4byte	0
 652 0025 00000000 		.4byte	0
 653              	.LLST1:
 654 0029 00000000 		.4byte	.LVL0
 655 002d 06000000 		.4byte	.LVL2
 656 0031 0100     		.2byte	0x1
 657 0033 51       		.byte	0x51
 658 0034 06000000 		.4byte	.LVL2
 659 0038 30000000 		.4byte	.LVL9
 660 003c 0100     		.2byte	0x1
 661 003e 57       		.byte	0x57
 662 003f 30000000 		.4byte	.LVL9
 663 0043 32000000 		.4byte	.LFE83
 664 0047 0400     		.2byte	0x4
 665 0049 F3       		.byte	0xf3
 666 004a 01       		.uleb128 0x1
 667 004b 51       		.byte	0x51
 668 004c 9F       		.byte	0x9f
 669 004d 00000000 		.4byte	0
 670 0051 00000000 		.4byte	0
 671              	.LLST2:
 672 0055 00000000 		.4byte	.LVL0
 673 0059 08000000 		.4byte	.LVL3
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 18


 674 005d 0100     		.2byte	0x1
 675 005f 52       		.byte	0x52
 676 0060 08000000 		.4byte	.LVL3
 677 0064 2A000000 		.4byte	.LVL8
 678 0068 0100     		.2byte	0x1
 679 006a 55       		.byte	0x55
 680 006b 2A000000 		.4byte	.LVL8
 681 006f 32000000 		.4byte	.LFE83
 682 0073 0100     		.2byte	0x1
 683 0075 52       		.byte	0x52
 684 0076 00000000 		.4byte	0
 685 007a 00000000 		.4byte	0
 686              	.LLST3:
 687 007e 00000000 		.4byte	.LVL0
 688 0082 06000000 		.4byte	.LVL2
 689 0086 0100     		.2byte	0x1
 690 0088 53       		.byte	0x53
 691 0089 06000000 		.4byte	.LVL2
 692 008d 32000000 		.4byte	.LFE83
 693 0091 0400     		.2byte	0x4
 694 0093 F3       		.byte	0xf3
 695 0094 01       		.uleb128 0x1
 696 0095 53       		.byte	0x53
 697 0096 9F       		.byte	0x9f
 698 0097 00000000 		.4byte	0
 699 009b 00000000 		.4byte	0
 700              	.LLST4:
 701 009f 14000000 		.4byte	.LVL5
 702 00a3 1E000000 		.4byte	.LVL6
 703 00a7 0600     		.2byte	0x6
 704 00a9 50       		.byte	0x50
 705 00aa 93       		.byte	0x93
 706 00ab 04       		.uleb128 0x4
 707 00ac 51       		.byte	0x51
 708 00ad 93       		.byte	0x93
 709 00ae 04       		.uleb128 0x4
 710 00af 00000000 		.4byte	0
 711 00b3 00000000 		.4byte	0
 712              		.section	.debug_aranges,"",%progbits
 713 0000 1C000000 		.4byte	0x1c
 714 0004 0200     		.2byte	0x2
 715 0006 00000000 		.4byte	.Ldebug_info0
 716 000a 04       		.byte	0x4
 717 000b 00       		.byte	0
 718 000c 0000     		.2byte	0
 719 000e 0000     		.2byte	0
 720 0010 00000000 		.4byte	.LFB83
 721 0014 32000000 		.4byte	.LFE83-.LFB83
 722 0018 00000000 		.4byte	0
 723 001c 00000000 		.4byte	0
 724              		.section	.debug_ranges,"",%progbits
 725              	.Ldebug_ranges0:
 726 0000 00000000 		.4byte	.LFB83
 727 0004 32000000 		.4byte	.LFE83
 728 0008 00000000 		.4byte	0
 729 000c 00000000 		.4byte	0
 730              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 19


 731              	.Ldebug_line0:
 732 0000 C5010000 		.section	.debug_str,"MS",%progbits,1
 732      02009B01 
 732      00000201 
 732      FB0E0D00 
 732      01010101 
 733              	.LASF31:
 734 0000 5F5F7A65 		.ascii	"__zero_table_end__\000"
 734      726F5F74 
 734      61626C65 
 734      5F656E64 
 734      5F5F00
 735              	.LASF14:
 736 0013 696E7436 		.ascii	"int64_t\000"
 736      345F7400 
 737              	.LASF38:
 738 001b 61726D5F 		.ascii	"arm_offset_q31\000"
 738      6F666673 
 738      65745F71 
 738      333100
 739              	.LASF26:
 740 002a 5F5F636F 		.ascii	"__copy_table_t\000"
 740      70795F74 
 740      61626C65 
 740      5F7400
 741              	.LASF5:
 742 0039 5F5F696E 		.ascii	"__int32_t\000"
 742      7433325F 
 742      7400
 743              	.LASF29:
 744 0043 5F5F7A65 		.ascii	"__zero_table_t\000"
 744      726F5F74 
 744      61626C65 
 744      5F7400
 745              	.LASF18:
 746 0052 666C6F61 		.ascii	"float\000"
 746      7400
 747              	.LASF32:
 748 0058 64657374 		.ascii	"dest\000"
 748      00
 749              	.LASF20:
 750 005d 7133315F 		.ascii	"q31_t\000"
 750      7400
 751              	.LASF1:
 752 0063 756E7369 		.ascii	"unsigned char\000"
 752      676E6564 
 752      20636861 
 752      7200
 753              	.LASF39:
 754 0071 626C6B43 		.ascii	"blkCnt\000"
 754      6E7400
 755              	.LASF28:
 756 0078 5F5F636F 		.ascii	"__copy_table_end__\000"
 756      70795F74 
 756      61626C65 
 756      5F656E64 
 756      5F5F00
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 20


 757              	.LASF23:
 758 008b 6F666673 		.ascii	"offset\000"
 758      657400
 759              	.LASF7:
 760 0092 6C6F6E67 		.ascii	"long unsigned int\000"
 760      20756E73 
 760      69676E65 
 760      6420696E 
 760      7400
 761              	.LASF3:
 762 00a4 73686F72 		.ascii	"short unsigned int\000"
 762      7420756E 
 762      7369676E 
 762      65642069 
 762      6E7400
 763              	.LASF24:
 764 00b7 70447374 		.ascii	"pDst\000"
 764      00
 765              	.LASF8:
 766 00bc 5F5F696E 		.ascii	"__int64_t\000"
 766      7436345F 
 766      7400
 767              	.LASF17:
 768 00c6 646F7562 		.ascii	"double\000"
 768      6C6500
 769              	.LASF6:
 770 00cd 5F5F7569 		.ascii	"__uint32_t\000"
 770      6E743332 
 770      5F7400
 771              	.LASF11:
 772 00d8 756E7369 		.ascii	"unsigned int\000"
 772      676E6564 
 772      20696E74 
 772      00
 773              	.LASF10:
 774 00e5 6C6F6E67 		.ascii	"long long unsigned int\000"
 774      206C6F6E 
 774      6720756E 
 774      7369676E 
 774      65642069 
 775              	.LASF21:
 776 00fc 7136335F 		.ascii	"q63_t\000"
 776      7400
 777              	.LASF12:
 778 0102 696E7433 		.ascii	"int32_t\000"
 778      325F7400 
 779              	.LASF15:
 780 010a 73697A65 		.ascii	"sizetype\000"
 780      74797065 
 780      00
 781              	.LASF35:
 782 0113 2E5C4453 		.ascii	".\\DSP\\Source\\BasicMathFunctions\\arm_offset_q31."
 782      505C536F 
 782      75726365 
 782      5C426173 
 782      69634D61 
 783 0142 6300     		.ascii	"c\000"
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 21


 784              	.LASF9:
 785 0144 6C6F6E67 		.ascii	"long long int\000"
 785      206C6F6E 
 785      6720696E 
 785      7400
 786              	.LASF25:
 787 0152 626C6F63 		.ascii	"blockSize\000"
 787      6B53697A 
 787      6500
 788              	.LASF37:
 789 015c 636C6970 		.ascii	"clip_q63_to_q31\000"
 789      5F713633 
 789      5F746F5F 
 789      71333100 
 790              	.LASF16:
 791 016c 63686172 		.ascii	"char\000"
 791      00
 792              	.LASF36:
 793 0171 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 793      77617265 
 793      2D686F73 
 793      745C5368 
 793      61726564 
 794 019f 6561746F 		.ascii	"eator\\FinalProject\\SoundDetection.cydsn\000"
 794      725C4669 
 794      6E616C50 
 794      726F6A65 
 794      63745C53 
 795              	.LASF33:
 796 01c7 776C656E 		.ascii	"wlen\000"
 796      00
 797              	.LASF2:
 798 01cc 73686F72 		.ascii	"short int\000"
 798      7420696E 
 798      7400
 799              	.LASF34:
 800 01d6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 800      4320342E 
 800      392E3320 
 800      32303135 
 800      30333033 
 801 0209 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 801      20726576 
 801      6973696F 
 801      6E203232 
 801      31323230 
 802 023c 67202D73 		.ascii	"g -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 802      74643D67 
 802      6E753939 
 802      202D6666 
 802      756E6374 
 803              	.LASF13:
 804 026f 75696E74 		.ascii	"uint32_t\000"
 804      33325F74 
 804      00
 805              	.LASF4:
 806 0278 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\IVYLIU~1\AppData\Local\Temp\cc0G5AE5.s 			page 22


 806      20696E74 
 806      00
 807              	.LASF19:
 808 0281 6C6F6E67 		.ascii	"long double\000"
 808      20646F75 
 808      626C6500 
 809              	.LASF30:
 810 028d 5F5F7A65 		.ascii	"__zero_table_start__\000"
 810      726F5F74 
 810      61626C65 
 810      5F737461 
 810      72745F5F 
 811              	.LASF0:
 812 02a2 7369676E 		.ascii	"signed char\000"
 812      65642063 
 812      68617200 
 813              	.LASF22:
 814 02ae 70537263 		.ascii	"pSrc\000"
 814      00
 815              	.LASF27:
 816 02b3 5F5F636F 		.ascii	"__copy_table_start__\000"
 816      70795F74 
 816      61626C65 
 816      5F737461 
 816      72745F5F 
 817              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
